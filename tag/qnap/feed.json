{
    "version": "https://jsonfeed.org/version/1",
    "title": "SamHou's blog • All posts by \"qnap\" tag",
    "description": "SamHou 的一个博客，有技术文章，小说和生活学习方法分享。包含 C#、html、css、NAS、windows 的技术博客文章，以及大量二次创作小说和原创作品。",
    "home_page_url": "https://blog.samhou.top",
    "items": [
        {
            "id": "https://blog.samhou.top/qnap%E6%90%AD%E5%BB%BArss%E5%85%A8%E6%94%BB%E7%95%A5/",
            "url": "https://blog.samhou.top/qnap%E6%90%AD%E5%BB%BArss%E5%85%A8%E6%94%BB%E7%95%A5/",
            "title": "qnap搭建rss全攻略",
            "date_published": "2021-10-16T09:31:01.000Z",
            "content_html": "<h1 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h1><p>在qnap nas上搭建ttrss、rsshub，并通过fluent reader连接到所搭建的服务，实现多端同步。过程中踩了很多坑，所以这篇文章将列出所有遇到的坑，完整详细地讲解如何搭建一个可以正常使用的rss系统。</p>\n<h1 id=\"nas搭建教程\"><a href=\"#nas搭建教程\" class=\"headerlink\" title=\"nas搭建教程\"></a>nas搭建教程</h1><h2 id=\"awesome-ttrss-（文档）\"><a href=\"#awesome-ttrss-（文档）\" class=\"headerlink\" title=\"awesome ttrss （文档）\"></a>awesome ttrss （<a href=\"http://ttrss.henry.wang/zh\">文档</a>）</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>一个一站式rss客户端解决方案，可以多端同步浏览记录。其中的fever插件允许应用程序接入。</p>\n<h3 id=\"创建数据库文件夹\"><a href=\"#创建数据库文件夹\" class=\"headerlink\" title=\"创建数据库文件夹\"></a>创建数据库文件夹</h3><p>ttrss需要数据库来保存文件。在File station中Container共享文件夹中右键创建文件夹，右键新建的文件夹选择属性，记下文件路径。</p>\n<p>注意：显示的文件路径不全，需要在前面补上<code>/share</code>，在后面补上<code>/文件夹名称</code>，最终路径应该像这样：<code>/share/.../文件夹名称</code></p>\n<h3 id=\"使用docker安装\"><a href=\"#使用docker安装\" class=\"headerlink\" title=\"使用docker安装\"></a>使用docker安装</h3><p>qnap提供container station，可以运行docker容器。首先在app center里安装container station（这里已经装好）:</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/17/5tlA7n.png\" alt=\"container station\"></p>\n<p>打开之后选择创建(create)，右上角选择create application:<br><img src=\"https://z3.ax1x.com/2021/10/17/5tlyNt.png\" alt=\"创建\"></p>\n<p>弹出一个窗口，随便取个名字，然后把下面的代码粘贴到YAML一栏（这段代码在官方文档里有）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  service.rss:</span><br><span class=\"line\">    image: wangqiru/ttrss:latest</span><br><span class=\"line\">    container_name: ttrss</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 181:80</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - SELF_URL_PATH=http://ip:181/ # please change to your own domain</span><br><span class=\"line\">      - DB_PASS=ttrss # use the same password defined in `database.postgres`</span><br><span class=\"line\">      - PUID=1000</span><br><span class=\"line\">      - PGID=1000</span><br><span class=\"line\">      - ALLOW_PORTS=1200</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - feed-icons:/var/www/feed-icons/</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - public_access</span><br><span class=\"line\">      - service_only</span><br><span class=\"line\">      - database_only</span><br><span class=\"line\">    stdin_open: true</span><br><span class=\"line\">    tty: true</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page</span><br><span class=\"line\">    image: wangqiru/mercury-parser-api:latest</span><br><span class=\"line\">    container_name: mercury</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - public_access</span><br><span class=\"line\">      - service_only</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page</span><br><span class=\"line\">    image: wangqiru/opencc-api-server:latest</span><br><span class=\"line\">    container_name: opencc</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - NODE_ENV=production</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - service_only</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  database.postgres:</span><br><span class=\"line\">    image: postgres:13-alpine</span><br><span class=\"line\">    container_name: postgres</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - POSTGRES_PASSWORD=ttrss # feel free to change the password</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - 数据库路径:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - database_only</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  # utility.watchtower:</span><br><span class=\"line\">  #   container_name: watchtower</span><br><span class=\"line\">  #   image: containrrr/watchtower:latest</span><br><span class=\"line\">  #   volumes:</span><br><span class=\"line\">  #     - /var/run/docker.sock:/var/run/docker.sock</span><br><span class=\"line\">  #   environment:</span><br><span class=\"line\">  #     - WATCHTOWER_CLEANUP=true</span><br><span class=\"line\">  #     - WATCHTOWER_POLL_INTERVAL=86400</span><br><span class=\"line\">  #   restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">volumes:</span><br><span class=\"line\">  feed-icons:</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  public_access: # Provide the access for ttrss UI</span><br><span class=\"line\">  service_only: # Provide the communication network between services only</span><br><span class=\"line\">    internal: true</span><br><span class=\"line\">  database_only: # Provide the communication between ttrss and database only</span><br><span class=\"line\">    internal: true</span><br></pre></td></tr></table></figure>\n\n<p>粘贴后，修改ip、数据库路径。ip即nas的ip地址，数据库路径即在第一步中创建的文件夹路径。</p>\n<p>注意：其中allow_ports为除80,443端口外ttrss可以访问的端口号，这里设置为1200是为了rsshub能够正常订阅。</p>\n<p>设置完成后，点确定就可以创建ttrss了。等待一段时间，装好后访问<code>http://ip:181/</code>就可以访问到ttrss界面了。</p>\n<h3 id=\"设置ttrss\"><a href=\"#设置ttrss\" class=\"headerlink\" title=\"设置ttrss\"></a>设置ttrss</h3><p>打开ttrss后，默认账号<code>admin</code>，密码<code>password</code>。在右上角偏好设置-用户里可以改。</p>\n<h3 id=\"启用fever插件\"><a href=\"#启用fever插件\" class=\"headerlink\" title=\"启用fever插件\"></a>启用fever插件</h3><p>为了让客户端可以访问ttrss，必须借助fever插件。<br>偏好设置-偏好设置-Fever Emulation里设个密码：<br><img src=\"https://z3.ax1x.com/2021/10/17/5t8ZtI.png\" alt=\"fever\"></p>\n<h3 id=\"连接fever（以开源的fluent-reader为例，支持windows-ios-android等平台）\"><a href=\"#连接fever（以开源的fluent-reader为例，支持windows-ios-android等平台）\" class=\"headerlink\" title=\"连接fever（以开源的fluent reader为例，支持windows,ios,android等平台）\"></a>连接fever（以开源的<a href=\"https://github.com/yang991178/fluent-reader\">fluent reader</a>为例，支持windows,ios,android等平台）</h3><p>打开设置，选择服务，fever api。在“端点”中填入<code>http://ip:181/plugins/fever/</code>。用户名为ttrss用户名，<strong>密码是fever插件中设置的密码，不是ttrss的密码！</strong></p>\n<p>到此，ttrss设置完毕，可以正常订阅、阅读rss内容了。下面配置rsshub。</p>\n<h2 id=\"rsshub（文档）\"><a href=\"#rsshub（文档）\" class=\"headerlink\" title=\"rsshub（文档）\"></a>rsshub（<a href=\"https://docs.rsshub.app/\">文档</a>）</h2><h3 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>一个可以为不提供rss站点生成rss的项目。</p>\n<h3 id=\"docker搭建\"><a href=\"#docker搭建\" class=\"headerlink\" title=\"docker搭建\"></a>docker搭建</h3><p>因为这次不需要多个容器（ttrss需要有数据库和本体），所以不需要输入代码，所有操作都可以在图形界面进行，首先安装rsshub容器（从左到右按照图示操作）：<br><img src=\"https://z3.ax1x.com/2021/10/17/5t4xL8.png\" alt=\"安装rsshub\"></p>\n<p>版本选latest，到最后选择<code>advanced settings&gt;&gt;</code>，选择network一栏，把network mode调成bridge，选择use static IP，把ip address改成不同于nas的（一般改最后一位即可）。</p>\n<p><strong>注意：请根据实际网络情况配置该项。</strong></p>\n<p><em>为什么要这么做？</em></p>\n<p>实际测试无法自己访问自己，所以将容器独立出来，为它在局域网内分配一个单独ip，即可正常访问。</p>\n<p>接下来建立容器，等待一段时间后访问<code>ip:1200</code>，若出现welcome to rsshub即建立成功。</p>\n<p>到此，所有配置全部完成，应该可以正常使用了。</p>\n",
            "tags": [
                "qnap",
                "rss"
            ]
        }
    ]
}