<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>SamHou&#39;s blog • Posts by &#34;winform&#34; tag</title>
        <link>https://blog.samhou.top</link>
        <description>A blog</description>
        <language>zh-CN</language>
        <pubDate>Fri, 08 Dec 2023 15:12:38 +0800</pubDate>
        <lastBuildDate>Fri, 08 Dec 2023 15:12:38 +0800</lastBuildDate>
        <category>winform</category>
        <category>AI</category>
        <category>csharp</category>
        <category>csharp图解教程</category>
        <category>hfc</category>
        <category>窗口控制</category>
        <category>焦点</category>
        <category>obsidian</category>
        <category>hexo</category>
        <category>qnap</category>
        <category>rss</category>
        <category>Steam</category>
        <category>手机游戏</category>
        <category>电脑游戏</category>
        <category>单机游戏</category>
        <category>网络游戏</category>
        <category>windows</category>
        <category>UAC</category>
        <category>小说</category>
        <category>蔚蓝档案</category>
        <category>科幻</category>
        <category>任务计划程序</category>
        <category>拖延症</category>
        <category>学习方法</category>
        <category>Bing</category>
        <item>
            <guid isPermalink="true">https://blog.samhou.top/Winform%20Csharp%E5%A4%9A%E6%98%BE%E7%A4%BA%E5%99%A8%E7%AA%97%E5%8F%A3%E6%8E%A7%E5%88%B6%E8%AF%A6%E8%A7%A3/</guid>
            <title>Winform C#多显示器窗口控制详解</title>
            <link>https://blog.samhou.top/Winform%20Csharp%E5%A4%9A%E6%98%BE%E7%A4%BA%E5%99%A8%E7%AA%97%E5%8F%A3%E6%8E%A7%E5%88%B6%E8%AF%A6%E8%A7%A3/</link>
            <category>winform</category>
            <category>csharp</category>
            <category>窗口控制</category>
            <pubDate>Fri, 08 Dec 2023 15:12:38 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;写Winform程序的时候，有将一个窗口放置到特定的显示器，并且全屏的需求。于是借此机会，好好研究了一番这个Screen类[1]，总结了一些方法。&lt;/p&gt;
&lt;h2 id=&#34;Windows的窗口逻辑&#34;&gt;&lt;a href=&#34;#Windows的窗口逻辑&#34; class=&#34;headerlink&#34; title=&#34;Windows的窗口逻辑&#34;&gt;&lt;/a&gt;Windows的窗口逻辑&lt;/h2&gt;&lt;p&gt;首先我们需要知道窗口定位的逻辑。以2个窗口为例，下面的图片展示了显示器和坐标的对应关系。注意，使用深色模式可能看不清，可以点击上方的切换按钮切换为浅色。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.samhou.top/1702026494796.png&#34; alt=&#34;显示器与坐标对应&#34; srcset=&#34;data:image/svg+xml,%3Csvg%20xmlns=&#39;http://www.w3.org/2000/svg&#39;%20viewBox=&#39;0%200%20300%20300&#39;%3E%3C/svg%3E&#34; data-src=&#34;https://img.samhou.top/1702026494796.png&#34; class=&#34;lozad post-image&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，连接多个显示器后，每个显示器的每个点都有一个唯一的坐标。我们要做的，就是把Form的坐标设置到显示器上面去。&lt;/p&gt;
&lt;h2 id=&#34;获取显示器列表&#34;&gt;&lt;a href=&#34;#获取显示器列表&#34; class=&#34;headerlink&#34; title=&#34;获取显示器列表&#34;&gt;&lt;/a&gt;获取显示器列表&lt;/h2&gt;&lt;p&gt;首先确保引用了&lt;code&gt;using System.Windows.Forms;&lt;/code&gt;，这样才有Screen类可以用。&lt;/p&gt;
&lt;p&gt;文档指出，可以用&lt;code&gt;Screen.AllScreens&lt;/code&gt;获取所有显示器的数组。那么这个里面有什么呢？我们来看看文档是怎么说的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Property Value&lt;br&gt;&lt;a href=&#34;https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.screen?view=windowsdesktop-8.0&#34;&gt;Screen&lt;/a&gt;[]&lt;br&gt;An array of type &lt;a href=&#34;https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.screen?view=windowsdesktop-8.0&#34;&gt;Screen&lt;/a&gt;, containing all displays on the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也就是说，返回的数组是个Screen数组。数组里面每一个元素都是个Screen对象，分别对应用户的每个显示设备。因此，我们可以通过这些对象来访问每个显示器。比如：&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;span class=&#34;line&#34;&gt;Screen scr1=Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &lt;span class=&#34;comment&#34;&gt;//获取第1个显示器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Screen scr2=Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;span class=&#34;comment&#34;&gt;//第二个显示器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;

&lt;h2 id=&#34;设置窗口位置&#34;&gt;&lt;a href=&#34;#设置窗口位置&#34; class=&#34;headerlink&#34; title=&#34;设置窗口位置&#34;&gt;&lt;/a&gt;设置窗口位置&lt;/h2&gt;&lt;p&gt;为了设定窗口位置，我们需要知道一个显示器左上角对应的坐标，这样才可以把窗口放进去。&lt;/p&gt;
&lt;p&gt;比如，以下代码可以设置Form位置为第2个显示器的左上角，然后设置窗口覆盖全屏幕（包括任务栏：&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;span class=&#34;line&#34;&gt;Location = Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].Bounds.Location;&lt;span class=&#34;comment&#34;&gt;//设定目标坐标，结合上面的图片，这里是（1920，28）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Width = Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].Bounds.Width;&lt;span class=&#34;comment&#34;&gt;//设定窗口的宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Height = Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].Bounds.Height;&lt;span class=&#34;comment&#34;&gt;//设定窗口高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;

&lt;p&gt;但大部分情况下，我们只需要覆盖任务栏之上的部分，因此稍作修改：&lt;/p&gt;
&lt;pre class=&#34;highlight&#34;&gt;&lt;span class=&#34;line&#34;&gt;Location = Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].WorkingArea.Location;&lt;span class=&#34;comment&#34;&gt;//设定目标显示器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Width = Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].WorkingArea.Width;&lt;span class=&#34;comment&#34;&gt;//设定窗口的宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Height = Screen.AllScreens[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].WorkingArea.Height;&lt;span class=&#34;comment&#34;&gt;//设定窗口高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;

&lt;p&gt;注意到了吗？这里我们用的是&lt;code&gt;WorkingArea&lt;/code&gt;来获取长宽高，以及位置。&lt;code&gt;WorkingArea&lt;/code&gt;不包括任务栏，所以高度较少，这两种需要看情况使用。&lt;/p&gt;
&lt;h2 id=&#34;参考资料&#34;&gt;&lt;a href=&#34;#参考资料&#34; class=&#34;headerlink&#34; title=&#34;参考资料&#34;&gt;&lt;/a&gt;参考资料&lt;/h2&gt;&lt;p&gt;[1] &lt;a href=&#34;https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.screen&#34;&gt;System.Windows.Forms.Screen&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://blog.samhou.top/Csharp-winform%E7%AA%97%E5%8F%A3%E6%8B%96%E5%8A%A8%E8%AF%A6%E8%A7%A3/</guid>
            <title>Csharp-winform窗口拖动详解</title>
            <link>https://blog.samhou.top/Csharp-winform%E7%AA%97%E5%8F%A3%E6%8B%96%E5%8A%A8%E8%AF%A6%E8%A7%A3/</link>
            <category>winform</category>
            <pubDate>Sun, 29 May 2022 16:05:02 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;代码实现&#34;&gt;&lt;a href=&#34;#代码实现&#34; class=&#34;headerlink&#34; title=&#34;代码实现&#34;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先，在设计器里双击增加以下三个方法，然后填入以下代码&lt;pre class=&#34;highlight&#34;&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Point mouseLocation;&lt;span class=&#34;comment&#34;&gt;//表示鼠标对于窗口左上角的坐标的负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt; isDragging;&lt;span class=&#34;comment&#34;&gt;//标识鼠标是否按下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MainWindow_MouseDown&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.Button == MouseButtons.Left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              mouseLocation = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Point(-e.X, -e.Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//表示鼠标当前位置相对于窗口左上角的坐标，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//并取负数,这里的e是参数，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//可以获取鼠标位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              isDragging = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//标识鼠标已经按下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MainWindow_MouseMove&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isDragging)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              Point newMouseLocation = MousePosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//获取鼠标当前位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              newMouseLocation.Offset(mouseLocation.X, mouseLocation.Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//用鼠标当前位置加上鼠标相较于窗体左上角的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//坐标的负数，也就获取到了新的窗体左上角位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              Location = newMouseLocation;&lt;span class=&#34;comment&#34;&gt;//设置新的窗体左上角位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MainWindow_MouseUp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isDragging)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              isDragging = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//鼠标已抬起，标识为false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;详解&#34;&gt;&lt;a href=&#34;#详解&#34; class=&#34;headerlink&#34; title=&#34;详解&#34;&gt;&lt;/a&gt;详解&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;鼠标在窗体上按下时，窗体跟随鼠标，鼠标抬起时，窗体停止移动&lt;/li&gt;
&lt;li&gt;窗体的Location属性为&lt;strong&gt;左上角&lt;/strong&gt;的坐标&lt;/li&gt;
&lt;li&gt;为了实现拖动，需要获取2个坐标：鼠标相较于窗体左上角的位置，以及鼠标现在的坐标&lt;/li&gt;
&lt;li&gt;举个例子：按下鼠标时，鼠标位置(300,400)，获取鼠标相较于窗体左上角位置为(150,100)，那么此时窗体位置是(150,300)，鼠标移动到(300,401)，那么此时窗体位置应该是(150,301)。也就是说，新的窗体位置就是新的鼠标位置减去一开始鼠标相较于窗体左上角位置&lt;/li&gt;
&lt;li&gt;调用.OffSet()，就是把前面的坐标加上括号里的坐标，比如上面的例子，newMouseLocation是(300,401)，mouseLocation把鼠标相较于窗体左上角位置作为负数存储，mouseLocation是(-150,-100)，那么新的newMouseLocation就是(150,301)了~&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
