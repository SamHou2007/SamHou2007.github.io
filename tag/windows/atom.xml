<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blog.samhou.top</id>
    <title>SamHou&#39;s blog • Posts by &#34;windows&#34; tag</title>
    <link href="https://blog.samhou.top" />
    <updated>2024-11-22T11:11:57.000Z</updated>
    <category term="AI" />
    <category term="csharp" />
    <category term="窗口控制" />
    <category term="焦点" />
    <category term="hfc" />
    <category term="csharp图解教程" />
    <category term="winform" />
    <category term="小说" />
    <category term="English" />
    <category term="Steam" />
    <category term="手机游戏" />
    <category term="电脑游戏" />
    <category term="单机游戏" />
    <category term="网络游戏" />
    <category term="obsidian" />
    <category term="hexo" />
    <category term="qnap" />
    <category term="rss" />
    <category term="windows" />
    <category term="UAC" />
    <category term="蔚蓝档案" />
    <category term="科幻" />
    <category term="任务计划程序" />
    <category term="拖延症" />
    <category term="学习方法" />
    <category term="Gal" />
    <category term="同人" />
    <category term="夏日口袋" />
    <category term="Bing" />
    <category term="css" />
    <category term="flexbox" />
    <category term="web" />
    <category term="象征" />
    <category term="规则" />
    <category term="Hyper-V" />
    <category term="卸载" />
    <entry>
        <id>https://blog.samhou.top/say-goodbye-to-hyper-v/</id>
        <title>和 Hyper-V 说再见——完全迁移&amp;卸载指南</title>
        <link rel="alternate" href="https://blog.samhou.top/say-goodbye-to-hyper-v/"/>
        <content type="html">&lt;p&gt;花了点时间，终于摆脱了 Hyper-V 这个恶心的东西，用上了 VirturalBox，遂记录在此。&lt;/p&gt;
&lt;h2 id=&#34;转换磁盘&#34;&gt;&lt;a href=&#34;#转换磁盘&#34; class=&#34;headerlink&#34; title=&#34;转换磁盘&#34;&gt;&lt;/a&gt;转换磁盘&lt;/h2&gt;&lt;p&gt;hyper-v 和 virtualbox 的虚拟硬盘不是同一个格式，需要进行转换。同时，还要进行合并操作。这里已经有大佬写过了，看&lt;a href=&#34;https://blog.dowhat.top/archives/1340&#34;&gt;这个&lt;/a&gt;吧。&lt;/p&gt;
&lt;p&gt;转换成功后，创建新的虚拟机，导入磁盘。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.samhou.top/1731768839789.png&#34; alt=&#34;选择虚拟硬盘&#34;&gt;&lt;/p&gt;
&lt;p&gt;调整下 vm 的内存和 cpu，启动然后开机，搞定。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：你的虚拟电脑可能卡到爆炸，因为 virtualbox 使用 hyper-v 时性能很低，需要完全关闭它才能发挥全部性能。如果实在卡到无法操作，请先&lt;a href=&#34;#%E5%85%B3%E9%97%AD-hyper-v&#34;&gt;关闭 hyper-v&lt;/a&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：由于环境变化，你需要重新在虚拟机中进行某些操作，例如登录各种软件，以及重新激活 Windows。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;del&gt;一个小小的提示：请不要运行 &lt;code&gt;irm https://get.activated.win | iex&lt;/code&gt; 参见&lt;a href=&#34;https://github.com/massgravel/Microsoft-Activation-Scripts&#34;&gt;此处&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;关闭-hyper-v&#34;&gt;&lt;a href=&#34;#关闭-hyper-v&#34; class=&#34;headerlink&#34; title=&#34;关闭 hyper-v&#34;&gt;&lt;/a&gt;关闭 hyper-v&lt;/h2&gt;&lt;p&gt;因为&lt;a href=&#34;https://forums.virtualbox.org/viewtopic.php?f=25&amp;t=99390&#34;&gt;某些原因&lt;/a&gt;，hyper-v 和 virtualbox 一起用实在太卡。你也许注意到了，右下角的海龟图标。&lt;img src=&#34;https://www.virtualbox.org/export/80012/vbox/trunk/src/VBox/Frontends/VirtualBox/images/vm_execution_engine_native_api_16px.png&#34;&gt;这表明它在运行，但非常缓慢。是时候关闭没用的 hyper-v 了！&lt;/p&gt;
&lt;h3 id=&#34;卸载功能&#34;&gt;&lt;a href=&#34;#卸载功能&#34; class=&#34;headerlink&#34; title=&#34;卸载功能&#34;&gt;&lt;/a&gt;卸载功能&lt;/h3&gt;&lt;p&gt;win+r 输入 control 打开控制面板，导航到程序-程序和功能-启用或关闭 Windows 功能，然后取消勾选 hyper-v，重启。&lt;/p&gt;
&lt;p&gt;好的，看起来我们已经摆脱了它，然而……&lt;/p&gt;
&lt;p&gt;还是海龟图标！&lt;/p&gt;
&lt;p&gt;这是因为，某些服务依赖于 hyper-v。你需要关闭它们。&lt;/p&gt;
&lt;h3 id=&#34;关闭虚拟化安全&#34;&gt;&lt;a href=&#34;#关闭虚拟化安全&#34; class=&#34;headerlink&#34; title=&#34;关闭虚拟化安全&#34;&gt;&lt;/a&gt;关闭虚拟化安全&lt;/h3&gt;&lt;p&gt;win+r 输入 gpedit.msc，打开组策略，导航到本地计算机策略-计算机配置-管理模板-系统-Device Guard-打开基于虚拟化的安全，设置为“已禁用”。&lt;/p&gt;
&lt;p&gt;重启电脑，然后打开设置-隐私和安全性-Windows 安全中心-打开 Windows 安全中心-主页-设备安全性-内核隔离-内核隔离详细信息-内存完整性-关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://img.samhou.top/1732273948535.png&#34; alt=&#34;内核隔离&#34;&gt;&lt;/p&gt;
&lt;p&gt;重启设备。&lt;/p&gt;
&lt;p&gt;再打开 VirtualBox，谢天谢地，它好了。&lt;img src=&#34;https://img.samhou.top/1732274115722.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="windows" />
        <category term="Hyper-V" />
        <category term="卸载" />
        <updated>2024-11-22T11:11:57.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.samhou.top/Csharp%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E7%84%A6%E7%82%B9(%E5%89%8D%E5%8F%B0%E7%AA%97%E5%8F%A3)/</id>
        <title>Csharp强制设置系统焦点(前台窗口)</title>
        <link rel="alternate" href="https://blog.samhou.top/Csharp%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E7%84%A6%E7%82%B9(%E5%89%8D%E5%8F%B0%E7%AA%97%E5%8F%A3)/"/>
        <content type="html">&lt;h2 id=&#34;系统焦点&#34;&gt;&lt;a href=&#34;#系统焦点&#34; class=&#34;headerlink&#34; title=&#34;系统焦点&#34;&gt;&lt;/a&gt;系统焦点&lt;/h2&gt;&lt;p&gt;在Windows中，系统的焦点就是当前处于前台的窗口。通过设置焦点，可以控制用户正在使用的应用程序。这里以winform应用为例。&lt;/p&gt;
&lt;h2 id=&#34;Api调用&#34;&gt;&lt;a href=&#34;#Api调用&#34; class=&#34;headerlink&#34; title=&#34;Api调用&#34;&gt;&lt;/a&gt;Api调用&lt;/h2&gt;&lt;p&gt;C#需要调用Win32 Api才可以控制焦点，这里用到的是user32.dll中的SetForegroundWindow()函数&lt;/p&gt;
&lt;p&gt;在微软提供的文档中[1]，可以看到C++里的用法：&lt;/p&gt;
&lt;figure class=&#34;highlight cpp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;BOOL &lt;span class=&#34;title&#34;&gt;SetForegroundWindow&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;  [in] HWND hWnd&lt;span class=&#34;comment&#34;&gt;//窗口句柄&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;)&lt;/span&gt;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;C#里没有HWND类型，与之对应的是IntPtr类型，所以可以这样导入Api[2]&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;using&lt;/span&gt; System.Runtime.InteropServices;&lt;span class=&#34;comment&#34;&gt;//这是调用所必须的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;meta&#34;&gt;DllImport(&lt;span class=&#34;string&#34;&gt;&amp;quot;user32.dll&amp;quot;&lt;/span&gt;)&lt;/span&gt;]&lt;span class=&#34;comment&#34;&gt;//调用dll&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extern&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;SetForegroundWindow&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;IntPtr handle&lt;/span&gt;)&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//这个函数签名必须和文档一模一样&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;下面来调用导入的内容（以设置edge浏览器为例子）&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Process[] processes = Process.GetProcessesByName(&lt;span class=&#34;string&#34;&gt;&amp;quot;msedge&amp;quot;&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//查找edge浏览器进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;IntPtr handle = processes[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].MainWindowHandle;&lt;span class=&#34;comment&#34;&gt;//获取主窗口句柄&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SetForegroundWindow(handle);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是，文档上指出这样设置需要满足几个条件中的任意一个：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;此过程是前台进程。&amp;#x2F;进程由前台进程启动。&amp;#x2F;进程收到了最后一个输入事件。&amp;#x2F;没有前台进程。&amp;#x2F;正在调试该过程。&amp;#x2F;前台进程不是新式应用程序或“开始”屏幕。&amp;#x2F;前台未锁定， (请参阅 &lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/desktop/api/winuser/nf-winuser-locksetforegroundwindow&#34;&gt;LockSetForegroundWindow&lt;/a&gt;) 。&amp;#x2F;前台锁定超时已过期， (在 &lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/desktop/api/winuser/nf-winuser-systemparametersinfoa&#34;&gt;SystemParametersInfo&lt;/a&gt;) 中看到&lt;strong&gt;SPI_GETFOREGROUNDLOCKTIMEOUT&lt;/strong&gt;。&amp;#x2F;没有活动菜单。&amp;#x2F;当用户使用另一个窗口时，应用程序无法强制将窗口强制到前台。 相反，Windows 会闪烁窗口的任务栏按钮以通知用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这样就不能说是强制设置了（注意，调试程序时系统允许强制设置，但只要离开调试器，就不行了），所以下面给出一个特别的方法。&lt;/p&gt;
&lt;h2 id=&#34;强制设置&#34;&gt;&lt;a href=&#34;#强制设置&#34; class=&#34;headerlink&#34; title=&#34;强制设置&#34;&gt;&lt;/a&gt;强制设置&lt;/h2&gt;&lt;p&gt;Windows中，只要是新启动的窗口，总是能够获得系统的焦点。所以只要让程序重新启动，就能拿到焦点，变成前台进程，此时就可以设置焦点，达到强制的效果。&lt;/p&gt;
&lt;p&gt;这里还用到了另一个Api &lt;code&gt;GetForegroundWindow()&lt;/code&gt;用于获取当前焦点[3]，调用方式同上，此处不再解释。&lt;/p&gt;
&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[&lt;span class=&#34;meta&#34;&gt;DllImport(&lt;span class=&#34;string&#34;&gt;&amp;quot;user32.dll&amp;quot;&lt;/span&gt;)&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extern&lt;/span&gt; IntPtr &lt;span class=&#34;title&#34;&gt;GetForegroundWindow&lt;/span&gt;()&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Process[] processes = Process.GetProcessesByName(&lt;span class=&#34;string&#34;&gt;&amp;quot;msedge&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;IntPtr handle = processes[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].MainWindowHandle;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SetForegroundWindow(handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (handle!=GetForegroundWindow())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     Process.Start(Application.ExecutablePath);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     Environment.Exit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;span class=&#34;comment&#34;&gt;//重启&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;注意，该方法仅30%成功率，若连续10次重启仍未获得焦点，建议放弃(&lt;/p&gt;
&lt;h2 id=&#34;参考文献&#34;&gt;&lt;a href=&#34;#参考文献&#34; class=&#34;headerlink&#34; title=&#34;参考文献&#34;&gt;&lt;/a&gt;参考文献&lt;/h2&gt;&lt;p&gt;[1] &lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-setforegroundwindow&#34;&gt;https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-setforegroundwindow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[2] &lt;a href=&#34;https://www.cnblogs.com/code1992/p/5965997.html&#34;&gt;https://www.cnblogs.com/code1992/p/5965997.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[3] &lt;a href=&#34;https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-getforegroundwindow&#34;&gt;https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-getforegroundwindow&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="csharp" />
        <category term="窗口控制" />
        <category term="焦点" />
        <category term="windows" />
        <updated>2023-01-27T01:01:20.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.samhou.top/Csharp-winform%E7%AA%97%E5%8F%A3%E6%8B%96%E5%8A%A8%E8%AF%A6%E8%A7%A3/</id>
        <title>Csharp-winform窗口拖动详解</title>
        <link rel="alternate" href="https://blog.samhou.top/Csharp-winform%E7%AA%97%E5%8F%A3%E6%8B%96%E5%8A%A8%E8%AF%A6%E8%A7%A3/"/>
        <content type="html">&lt;h2 id=&#34;代码实现&#34;&gt;&lt;a href=&#34;#代码实现&#34; class=&#34;headerlink&#34; title=&#34;代码实现&#34;&gt;&lt;/a&gt;代码实现&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先，在设计器里双击增加以下三个方法，然后填入以下代码&lt;figure class=&#34;highlight csharp&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; Point mouseLocation;&lt;span class=&#34;comment&#34;&gt;//表示鼠标对于窗口左上角的坐标的负数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;bool&lt;/span&gt; isDragging;&lt;span class=&#34;comment&#34;&gt;//标识鼠标是否按下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MainWindow_MouseDown&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (e.Button == MouseButtons.Left)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              mouseLocation = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Point(-e.X, -e.Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//表示鼠标当前位置相对于窗口左上角的坐标，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//并取负数,这里的e是参数，&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//可以获取鼠标位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              isDragging = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//标识鼠标已经按下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MainWindow_MouseMove&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isDragging)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              Point newMouseLocation = MousePosition;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//获取鼠标当前位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              newMouseLocation.Offset(mouseLocation.X, mouseLocation.Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//用鼠标当前位置加上鼠标相较于窗体左上角的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;comment&#34;&gt;//坐标的负数，也就获取到了新的窗体左上角位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              Location = newMouseLocation;&lt;span class=&#34;comment&#34;&gt;//设置新的窗体左上角位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MainWindow_MouseUp&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;object&lt;/span&gt; sender, MouseEventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (isDragging)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              isDragging = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;span class=&#34;comment&#34;&gt;//鼠标已抬起，标识为false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;详解&#34;&gt;&lt;a href=&#34;#详解&#34; class=&#34;headerlink&#34; title=&#34;详解&#34;&gt;&lt;/a&gt;详解&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;鼠标在窗体上按下时，窗体跟随鼠标，鼠标抬起时，窗体停止移动&lt;/li&gt;
&lt;li&gt;窗体的Location属性为&lt;strong&gt;左上角&lt;/strong&gt;的坐标&lt;/li&gt;
&lt;li&gt;为了实现拖动，需要获取2个坐标：鼠标相较于窗体左上角的位置，以及鼠标现在的坐标&lt;/li&gt;
&lt;li&gt;举个例子：按下鼠标时，鼠标位置(300,400)，获取鼠标相较于窗体左上角位置为(150,100)，那么此时窗体位置是(150,300)，鼠标移动到(300,401)，那么此时窗体位置应该是(150,301)。也就是说，新的窗体位置就是新的鼠标位置减去一开始鼠标相较于窗体左上角位置&lt;/li&gt;
&lt;li&gt;调用.OffSet()，就是把前面的坐标加上括号里的坐标，比如上面的例子，newMouseLocation是(300,401)，mouseLocation把鼠标相较于窗体左上角位置作为负数存储，mouseLocation是(-150,-100)，那么新的newMouseLocation就是(150,301)了~&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="winform" />
        <category term="windows" />
        <updated>2022-05-29T08:05:02.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.samhou.top/windowsUAC%E8%B7%B3%E8%BF%87%E6%95%99%E7%A8%8B/</id>
        <title>windows UAC跳过教程</title>
        <link rel="alternate" href="https://blog.samhou.top/windowsUAC%E8%B7%B3%E8%BF%87%E6%95%99%E7%A8%8B/"/>
        <content type="html">&lt;h1 id=&#34;什么是UAC&#34;&gt;&lt;a href=&#34;#什么是UAC&#34; class=&#34;headerlink&#34; title=&#34;什么是UAC&#34;&gt;&lt;/a&gt;什么是UAC&lt;/h1&gt;&lt;p&gt;安装软件时、运行部分程序时弹出的窗口就是UAC，比如下面这个以管理员权限运行的记事本&lt;br&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/10/07/5p3kxf.png&#34; alt=&#34;管理员运行记事本&#34;&gt;&lt;/p&gt;
&lt;p&gt;有时候，运行一些程序可能需要管理员权限，比如某些电脑清理软件。&lt;/p&gt;
&lt;h1 id=&#34;第一种方法：直接关闭UAC&#34;&gt;&lt;a href=&#34;#第一种方法：直接关闭UAC&#34; class=&#34;headerlink&#34; title=&#34;第一种方法：直接关闭UAC&#34;&gt;&lt;/a&gt;第一种方法：直接关闭UAC&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;打开控制面板-系统和安全-安全和维护&lt;/li&gt;
&lt;li&gt;在用户账户控制那里点击更改设置&lt;/li&gt;
&lt;li&gt;下拉到“从不通知”&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;第二种方法：使用任务计划程序&#34;&gt;&lt;a href=&#34;#第二种方法：使用任务计划程序&#34; class=&#34;headerlink&#34; title=&#34;第二种方法：使用任务计划程序&#34;&gt;&lt;/a&gt;第二种方法：使用任务计划程序&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;右键windows图标&lt;/li&gt;
&lt;li&gt;选择计算机管理&lt;/li&gt;
&lt;li&gt;选择左侧的任务计划程序-任务计划程序库&lt;/li&gt;
&lt;li&gt;点击右侧“创建任务…”&lt;/li&gt;
&lt;li&gt;名称随便填，勾选&lt;img src=&#34;https://z3.ax1x.com/2021/10/07/5p3iGt.png&#34; alt=&#34;最高权限运行&#34;&gt;&lt;/li&gt;
&lt;li&gt;操作一栏中选择新建，弹出这么个窗口：&lt;br&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/10/07/5pIiY4.png&#34; alt=&#34;新建操作&#34;&gt;&lt;/li&gt;
&lt;li&gt;这里就选择启动程序，点浏览，选择要跳过UAC的程序，确定保存&lt;/li&gt;
&lt;li&gt;根据需要设定剩下的条件、设置、触发器&lt;/li&gt;
&lt;li&gt;如果需要开机启动，请选择&lt;strong&gt;登录时&lt;/strong&gt;，不要选择&lt;del&gt;启动时&lt;/del&gt;（因为要登陆再启动程序）&lt;/li&gt;
&lt;li&gt;设置完成，现在添加一个对于新建的任务的快捷方式：在电脑桌面上右键新建-快捷方式，位置一栏输入&lt;code&gt;SCHTASKS /RUN /TN 任务名称&lt;/code&gt;，把任务名称改为在第5步中创建的名称&lt;/li&gt;
&lt;li&gt;现在建立了快捷方式，双击桌面上的图标即可跳过UAC运行软件~&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="windows" />
        <category term="UAC" />
        <updated>2021-10-04T16:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://blog.samhou.top/%E4%BD%BF%E7%94%A8windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AE%9E%E7%8E%B0%E6%8F%92%E5%85%A5%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/</id>
        <title>使用windows计划任务实现插入移动硬盘自动运行程序</title>
        <link rel="alternate" href="https://blog.samhou.top/%E4%BD%BF%E7%94%A8windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AE%9E%E7%8E%B0%E6%8F%92%E5%85%A5%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/"/>
        <content type="html">&lt;h2 id=&#34;思路&#34;&gt;&lt;a href=&#34;#思路&#34; class=&#34;headerlink&#34; title=&#34;思路&#34;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;在系统计划任务中，有一个“发生事件时”的触发器。这让插入移动硬盘自动运行程序成为了可能。所以只要找到插入硬盘时触发的系统事件，即可实现。在事件查看器中，通过筛选，我发现插入硬盘时，触发了来源为DistributedCOM的警告事件，ID为10016。&lt;/p&gt;
&lt;h2 id=&#34;实现方法&#34;&gt;&lt;a href=&#34;#实现方法&#34; class=&#34;headerlink&#34; title=&#34;实现方法&#34;&gt;&lt;/a&gt;实现方法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;插入移动硬盘&lt;/li&gt;
&lt;li&gt;右键开始菜单图标，选择计算机管理，选择系统工具-事件查看器-windows日志-系统，找到刚刚插入硬盘发生的DistributedCOM事件，如下图&lt;br&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/10/07/5p3FRP.png&#34; alt=&#34;DistributedCOM&#34;&gt;&lt;/li&gt;
&lt;li&gt;右键这个警告事件，选择将“任务附加到此事件”，通过这个向导即可创建一个自动任务。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;用途&#34;&gt;&lt;a href=&#34;#用途&#34; class=&#34;headerlink&#34; title=&#34;用途&#34;&gt;&lt;/a&gt;用途&lt;/h2&gt;&lt;p&gt;这个功能用途很多，比如插入后自动运行备份程序，关键看需求。&lt;/p&gt;
</content>
        <category term="windows" />
        <category term="任务计划程序" />
        <updated>2021-09-04T16:00:00.000Z</updated>
    </entry>
</feed>
