{
    "version": "https://jsonfeed.org/version/1",
    "title": "SamHou's blog",
    "description": "A blog",
    "home_page_url": "https://blog.samhou.top",
    "items": [
        {
            "id": "https://blog.samhou.top/%E8%8B%8D%20After%20Story%20Part1/",
            "url": "https://blog.samhou.top/%E8%8B%8D%20After%20Story%20Part1/",
            "title": "苍 After Story Part1",
            "date_published": "2024-06-30T04:06:53.000Z",
            "content_html": "<p>鸟白岛上，有一种独特的祭祀，山之祭祀。</p>\n<p>祭祀的主持者需要手持灯笼，在山中漫步。</p>\n<p>当然，那些东西只是一种习惯罢了，是古代科学尚未发展时人们的幻想。</p>\n<p>毕竟在这个科学主导的世界上，怎么可能存在什么超自然现象呢？</p>\n<p>……开玩笑的。</p>\n<p>这个夏天，我和一个名叫苍的少女相识，相爱，共同度过了一段无可替代的时光。</p>\n<p>我也明白了，风俗什么的，只是一个用以转移注意力的借口罢了。</p>\n<p>山之祭祀绝不仅仅是那种老祖宗留下来的传说而已。</p>\n<p>那些发光的神秘蝴蝶，叫七影蝶，是这个小岛上人们魂魄的化身，拥有能够通过接触传递记忆的强大力量。</p>\n<p>而山之祭祀，则是将迷失的愿望引导回它们所应该回到的地方去。</p>\n<p>稻荷 “嘣！”</p>\n<p>蓝色小狐狸的叫声将我拉回了现实。</p>\n<p>这个名叫稻荷的生物，似乎能够听懂人们的对话。</p>\n<p>我背上的这个叫苍的少女，正安心地睡着。</p>\n<p>然而，我却不仅要忍受背上的重量，还要和困意做斗争。</p>\n<p>由于刚刚摸过苍的七影蝶，大脑需要休息来整理刚刚传来的信息。</p>\n<p>意识，逐渐模糊了……</p>\n<p>羽依里 “不可以啊……嗯……”</p>\n<p>下一秒，我就进入了梦乡。</p>\n<p>是这个夏天发生的事情。</p>\n<p>我为了整理祖母的遗物，来到了这座叫做鸟白岛的岛上，和苍相遇了。</p>\n<p>在某次睡觉前，山上的一点亮光吸引了我的注意力。</p>\n<p>怀着好奇心来到山上，发现穿着巫女服的苍正在触碰发光蝴蝶。</p>\n<p>通过仓库里的古书，我明白了这些蝴蝶叫七影碟，是人死后魂魄化身的蝴蝶，向活着的人传递着思念之情。</p>\n<p>由于想要见苍，意外之下，我自己也在夜晚的山中触摸了这种蝴蝶。</p>\n<p>……却被其中传来的记忆所控制，在不自知的情况下缓缓移动到了悬崖边。</p>\n<p>危急时刻，苍把我从悬崖边救了下来。</p>\n<p>而苍也没有隐瞒，告诉了我山之祭祀和七影蝶的真相。</p>\n<p>这个小岛，是记忆回归的地方。</p>\n<p>具有强烈迷恋和后悔的人类的记忆，回到了岛上。</p>\n<p>山之祭，就是将不能留在世上的七影碟引导回应该归去的地方的一种祭祀。</p>\n<p>而之所以她打破禁忌，不断触摸蝴蝶，是为了找到一个重要的记忆。</p>\n<p>那是她的姐姐，蓝的记忆。</p>\n<p>为了拯救摔下悬崖而沉睡的姐姐，她必须检查所有七影蝶的记忆，试图找回蓝的记忆，并送回蓝的体内。</p>\n<p>而我祖母的遗物中，就有一本书，记载着将七影蝶中蕴含的记忆送回体内的方法。</p>\n<p>在我的陪伴和苍的努力下，蓝找回了记忆，但触摸太多七影蝶的苍却随之陷入沉睡……</p>\n<p>最后，包含着记忆的七影蝶从她体内涌出，而她自己的那只七影蝶也飞向天空，近在咫尺，却又遥不可及。</p>\n<p>因此，我下定决心，要找回苍的记忆，正如苍找回蓝的记忆一样。</p>\n<p>……一阵疼痛传来。</p>\n<p>稻荷 “嘣！！！嘣！！！”</p>\n<p>狐狸牙齿带来的疼痛和焦急的叫声，让我的意识回到了现实。</p>\n<p>羽依里 “谢谢你，稻荷。”</p>\n<p>下山的路，只剩一点点了。</p>\n<p>再坚持一下吧。</p>\n<p>……</p>\n<p>我缓缓拉开了病房的房门。</p>\n<p>背上的苍仍然在熟睡着。我把她放到床上，盖好被子。</p>\n<p>羽依里 “……”</p>\n<p>蓝 “……”</p>\n<p>一阵沉默。</p>\n<p>我擦了擦脸上的泪痕。</p>\n<p>羽依里 “花……已经落完了。”</p>\n<p>一旁熟睡的苍正发出着均匀的呼吸声。</p>\n<p>苍 “唔唔，羽依里，不要走……想……在一起……嗯嗯……”</p>\n<p>羽依里 “知道了啦……”</p>\n<p>羽依里 “现在，只剩一种方法了。”</p>\n<p>蓝 “该不会是那个方法吧。”</p>\n<p>羽依里 “没错，就是那个。”</p>\n<p>我要追随苍的脚步，去完成属于我的使命。</p>\n<p>蓝 “……明年？”</p>\n<p>羽依里 “无论多少年，我也要找到。苍找到你的七影蝶花了10年……即使需要花20年，甚至一辈子，我会永远找下去。”</p>\n<p>唤醒苍，可是我的职责啊。</p>\n<p>在苍的七影蝶飞走之后，我已经下定了决心。</p>\n<p>蓝 “虽然我也想看到苍露出笑容的样子，但这可是10年啊……为了一个不是自己亲人的人，值得吗？”</p>\n<p>羽依里 “苍是我最重要的人。况且，苍已经算是我的亲人了。”</p>\n<p>蓝 “那我也去。不管10年，还是20年……”</p>\n<p>面前的蓝脸上充满了坚定。</p>\n<p>是想要报答苍吗？还是空门家的职责所在？又或者……是想要陪在我的身边？</p>\n<p>……对于一个妹控，和夺走自己妹妹的人整天呆在一起这种可能性根本不存在吧。</p>\n<p>羽依里 “你不是看不见七影蝶吗？”</p>\n<p>蓝 “不，我想陪你找……直到苍醒来的那一天。”</p>\n<p>羽依里 “？”</p>\n<p>或许这种可能性也是存在的？</p>\n<p>羽依里 “……连你也迷上我了？”</p>\n<p>蓝 “哈？我是想替她履行空门家的职责啊。不要随便曲解别人的话啊笨蛋。你是苍的……恋……恋人啊。”</p>\n<p>蓝 “你们不是……不是……连那种事情都做过了吗？”</p>\n<p>望着蓝涨红的脸，终于放下心来。</p>\n<p>果然那种可能性根本不存在。</p>\n<p>不过，有一件事情必须要解释下了。</p>\n<p>羽依里 “等等……那个真的只是……苍的梦话……而已。”</p>\n<p>看来，可能要瞒不住了。那天晚上，在亲吻之后，在山上的树林里……</p>\n<p>苍 “羽依里……请……温柔一点……嗯嗯……”</p>\n<p>这个梦话可真是不妙啊。现在轮到我解释，不，“掩饰”了吗？</p>\n<p>～选择～：A转移话题 B老实承认</p>\n<p>A：</p>\n<p>暂且找个其他话题吧？</p>\n<p>羽依里 “话说，如果我和苍结婚的话，就要叫空门羽依里了吧？还是叫鹰原苍好呢？果然还是把空门的姓氏传递下去好……”</p>\n<p>蓝 “……果然做过了呢。都想着结婚以后的事情了。”</p>\n<p>这根本不能叫转移话题吧！？</p>\n<p>羽依里！该好好锻炼一下转移话题的技术了！</p>\n<p>B：</p>\n<p>羽依里 “嗯……好吧，虽然有点说不出口，不过确……确实……做过了。”</p>\n<p>说这话时整个人都在颤抖。</p>\n<p>蓝 “你还挺诚实啊。是不是想很快生出小宝宝啊？”</p>\n<p>羽依里 “……”</p>\n<p>现在已经不止是我和苍间的秘密了。</p>\n<p>～选择结束～</p>\n<p>蓝露出了可怕的脸色。</p>\n<p>羽依里 “那个，不是，嗯，啊……对不起！今天已经很晚了我明天再来吧啊啊啊”</p>\n<p>我一溜烟跑出了蓝和苍的病房。</p>\n<p>鸟白岛熟悉的乡间小路。</p>\n<p>是什么时候变得如此熟悉的呢？</p>\n<p>回望这个夏天，和苍一起度过的时光。</p>\n<p>树下沉睡的少女，粗点心店的打工，海边的相遇……</p>\n<p>不知是不是触碰苍的七影蝶的效果，我的记忆格外清晰。</p>\n<p>羽依里 “苍，这个夏天我过得，真的很开心。”</p>\n<p>今天就是8月28日了啊。</p>\n<p>后天早上，我就必须离开鸟白岛了。</p>\n<p>在接近假期尾声的这个深夜里，要做点什么呢？</p>\n<p>～选择～A什么都不做 B去迷途橘看看</p>\n<p>A：</p>\n<p>还是睡觉吧。</p>\n<p>回到家里的时候，海己和镜子阿姨看起来都已经睡了。</p>\n<p>那么我也去睡觉吧。</p>\n<p>（获得结局1。）</p>\n<p>＊该选项影响故事走向，请继续阅读～选择结束～后的内容，直到出现结局1为止。</p>\n<p>B：</p>\n<p>夜晚的山路还是那么熟悉。</p>\n<p>在稻荷的带领下，一路上没有遇到七影蝶。</p>\n<p>迷途橘上盘旋的七影蝶早已不见，花自然也是凋谢的。</p>\n<p>挂在树边的灯笼，静静地等待着山之祭祀的到来。</p>\n<p>树下的人却只有一个。</p>\n<p>脑海中浮现出苍的笑容。</p>\n<p>我拿出包里的蝴蝶标本和古书的译本，埋在了树下。</p>\n<p>羽依里 “苍，等你醒来，我们再一起把它们挖出来，一起读完剩下的一半……”</p>\n<p>羽依里 “到时候，我还要请教你里面的故事真不真实呢……苍……我们不是还有一个约定吗……”</p>\n<p>泪水不知不觉滑下了脸颊。</p>\n<p>我仰望着天空，祈求奇迹的出现。</p>\n<p>那种事情当然不可能在现实中存在。</p>\n<p>……真的没办法吗？</p>\n<p>稻荷的叫声突然传来。</p>\n<p>我心里一紧，望向它所在的方向，盼望着能看到那只七影蝶。</p>\n<p>……它对着天空中的月亮叫起来。原来是提醒我快后半夜了啊。</p>\n<p>还是放弃那些不切实际的幻想吧。</p>\n<p>这个世界上的任何事情，都是脚踏实地地做事带来的结果。</p>\n<p>赶紧回去睡觉吧。明天还要继续陪苍呢。</p>\n<p>～选择结束～</p>\n<p>躺在床上，脑中的回忆不断显现。</p>\n<p>羽依里 “根本睡不着啊。”</p>\n<p>不过，注意力很快就被分散了。</p>\n<p>讨厌的蚊子突然出现，在我耳边嗡嗡叫着。</p>\n<p>羽依里 “可恶……还是打不到。”</p>\n<p>我放弃了挣扎。</p>\n<p>不知是太累的缘故，还是蚊子分散了注意力，这次我很快入睡了。</p>\n<p>这是在哪里呢……？</p>\n<p>面前的商店如此熟悉。</p>\n<p>是粗点心店啊。</p>\n<p>苍 “欢迎光临……是你啊。”</p>\n<p>羽依里 “苍？你不是……？”</p>\n<p>苍 “别管那么多了，跟我来吧。”</p>\n<p>羽依里 “嗯？去哪里？”</p>\n<p>苍自顾自地走了出去。</p>\n<p>我只好跟上。</p>\n<p>她带我来到了那棵她经常睡觉的树下。</p>\n<p>苍 “准备好了吗？”</p>\n<p>羽依里 “什么准备好了？”</p>\n<p>苍 “当然是……这个啊～”</p>\n<p>苍把我一把推倒。</p>\n<p>羽依里 “！？”</p>\n<p>苍 “上次在我睡觉的时候挠痒是吧？我今天也要让你来体验一下……”</p>\n<p>羽依里 “哈哈哈……快停下……”</p>\n<p>没想到苍的力气如此大，我根本无法动弹。</p>\n<p>不过，能够见到珍视的人，本身就已经很令人高兴了。</p>\n<p>我不再挣扎，感受着面前少女手心传来的温度。</p>\n<p>……</p>\n<p>梦醒了。</p>\n<p>醒来的时候，嘴上似乎带着一抹微笑。</p>\n<p>羽依里 “原来是梦。为什么那种感觉那么真实啊。”</p>\n<p>羽依里 “……不过这个梦的内容……”</p>\n<p>我知道苍不是这样的人。</p>\n<p>等等……刨冰那次，苍是不是为了报仇还往我身上扔刨冰来着……</p>\n<p>羽依里 “……”</p>\n<p>好吧，只能承认这个梦好像还挺符合逻辑的。</p>\n<p>……突然发现身上被蚊子咬了。</p>\n<p>从来没有在这里被咬过啊。海己牌人体蚊虫诱捕器失效了吗？</p>\n<p>我起身之后，才发现桌上放着一张小纸条。</p>\n<p>“我要走了哦～再见，羽依里同学。”</p>\n<p>是海己的留言。似乎昨天就在这里了。</p>\n<p>背面还有一行小字。</p>\n<p>“早饭在冰箱里了哟。”</p>\n<p>重新加热的炒饭果然没有平时好吃啊。突然发现自己竟然已经习惯了有海己的生活。</p>\n<p>好了，今天要做什么呢？</p>\n<p>先去诊所吧，苍还等着我呢。</p>\n<p>羽依里 “早上好”</p>\n<p>蓝 “早上好啊，今天要和苍结婚吗？”</p>\n<p>蓝手中拿着苍的身体检查报告，其中“年龄”一栏上画了一个大大的红圈。显然这个数值是小于18的。</p>\n<p>羽依里 “这话和这个圈是怎么回事啊！”</p>\n<p>看来蓝的气还没消。</p>\n<p>羽依里 “我也没说要这么快结婚吧！？”</p>\n<p>蓝 “虽然我已经把苍许诺给你了，不过你可别想在她睡着的时候做什么坏事哦？”</p>\n<p>这家伙对苍还真的有一种很强的占有欲。</p>\n<p>羽依里 “……”</p>\n<p>还是和苍说说话吧。</p>\n<p>羽依里 “苍，灯笼我已经挂好了哦。”</p>\n<p>羽依里 “昨天我做了一个梦……”</p>\n<p>等等，这个还是不要说好了。</p>\n<p>毕竟蓝还在旁边。</p>\n<p>羽依里 “我梦见你醒过来了……”</p>\n<p>我省去了挠痒痒的部分。</p>\n<p>这样就好了。虽然不完整，但毕竟不是错误的记忆。</p>\n<p>羽依里 “话说，我好像暑假作业还没写完。”</p>\n<p>蓝 “你这话题转换得是否有点太快了？”</p>\n<p>羽依里 “是因为想到了苍昨天晚上的事情嘛。”</p>\n<p>蓝 “昨晚发生了什么？”</p>\n<p>我把昨天晚上苍在迷途橘下释放出七影蝶，并且被蝴蝶包裹告诉了蓝。</p>\n<p>蓝 “你的意思是，苍通过七影蝶获得的知识，已经不复存在了？”</p>\n<p>羽依里 “没错。”</p>\n<p>蓝 “苍之前说过，是靠自己触碰七影蝶才知道了很多知识……”</p>\n<p>蓝 “她在学校里经常睡觉啊。”</p>\n<p>羽依里 “也就是说，苍她现在的认知水平已经倒退了好几年？”</p>\n<p>蓝 “大概是这样吧。”</p>\n<p>我突然感觉责任重大。</p>\n<p>如果苍醒来的时候无法跟上同龄人，那么她这几年不就白过了吗？即使醒来，我们还能正常沟通吗？</p>\n<p>为了蓝，她付出了10年，现在即使醒过来也要落得这样的结局……</p>\n<p>不，我绝对不允许那种事情发生。</p>\n<p>我立即从包里掏出……暑假作业？</p>\n<p>……开始读上面的内容。</p>\n<p>蓝 “你这是在干什么呢？希望苍梦游帮你写作业？”</p>\n<p>羽依里 “你在说什么啊。当然是为了提升苍的认知能力啊。”</p>\n<p>蓝 “暑假作业也太不靠谱了点吧！好歹拿个课本啊！”</p>\n<p>羽依里 “没办法嘛～毕竟书全在家里。”</p>\n<p>羽依里 “我下次带过来吧。我不在的时候，就拜托蓝了。”</p>\n<p>蓝 “嗯。除此之外，我就把苍跟我说过的事情再复述一遍吧。”</p>\n<p>羽依里 “嗯，拜托你了。”</p>\n<p>离开医院之后已经是下午了。</p>\n<p>心里突然有点舍不得。</p>\n<p>这个暑假就要结束了啊。</p>\n<p>明明认识了那么多人，经历了那么多事情，为什么感觉有些空虚？</p>\n<p>七影蝶，迷途橘，空门家的职责……</p>\n<p>一个个名词和概念盘旋在脑海。</p>\n<p>还有什么没有做的事情吗？</p>\n<p>……想不出。</p>\n<p>既然明天早上就要离开了，那么先和大家道个别吧。</p>\n<p>我走向秘密基地。</p>\n<p>天善和良一正在打乒乓球。</p>\n<p>良一 “哟。是羽依里啊。要不要来两局？”</p>\n<p>羽依里 “……我是来道别的。我明天上午就要走了。”</p>\n<p>良一 “这样啊。那么，来开送别会吧！”</p>\n<p>良一突然脱下了衣服。</p>\n<p>羽依里 “不是，为什么你突然就脱衣服了啊？”</p>\n<p>良一 “既然羽依里要走了，那就开个脱衣派对来庆祝一下……”</p>\n<p>羽依里 “这两个半句话根本没有逻辑关联啊！”</p>\n<p>天善 “特训的对手又要少一个了呢。可以请你最后来打一局吗？”</p>\n<p>羽依里 “看看，天善的提议多正常。”</p>\n<p>我拿起了旁边的球拍。</p>\n<p>球呼啸而过。</p>\n<p>羽依里 “这是什么啊！？”</p>\n<p>天善 “因为是最后一局，当然要拿出最好的实力了！”</p>\n<p>结果被天善完全打败了。</p>\n<p>羽依里 “我收回之前那句话……”</p>\n<p>羽依里 “那么，再见了。周末和放假我会再回来的。”</p>\n<p>离开秘密基地，我又和小岛上的其他人道了别。</p>\n<p>回到家里，我收拾好了房间里的行李。</p>\n<p>羽依里 “最后一天了啊～真的有点舍不得呢。”</p>\n<p>躺在床上，我认真思考了一下这股不舍中夹杂的空虚。</p>\n<p>羽依里 “果然还是因为她不在啊。”</p>\n<p>不过，很快就释然了。</p>\n<p>因为，我还有必须要做的事情。</p>\n<p>也就是说，还有希望，不是吗？</p>\n<p>羽依里 “苍，等着我……”</p>\n<p>就这样进入了梦乡。</p>\n<p>～August 30th～</p>\n<p>八月三十日。</p>\n<p>返程的日子。</p>\n<p>和镜子阿姨道别后，我早早地来到了医院。</p>\n<p>蓝 “要走了吗？”</p>\n<p>羽依里 “嗯。我下周会回来的。”</p>\n<p>羽依里 “苍，我走了。一定要，等着我哦？绝对不可以自己，抛下我哦？”</p>\n<p>苍仍然熟睡着。</p>\n<p>蓝 “我有种直觉，苍可能短期内不会醒了。”</p>\n<p>羽依里 “换句话说，长期还是有希望的。”</p>\n<p>蓝 “但愿吧。我们也只能做我们该做的事情罢了。”</p>\n<p>羽依里 “该做的事情吗……”</p>\n<p>羽依里 “我明白了。那么，下次再见了！”</p>\n<p>离开医院，我走在了鸟白岛的小路上。</p>\n<p>还记得刚来的时候沿着这条路前行时的心情，夜晚迷路时的发现，山中的点点亮光。</p>\n<p>每一处都包含着这个暑假的记忆。</p>\n<p>羽依里 “感觉没怎么变呢。”</p>\n<p>只是，行走的方向指向港口。</p>\n<p>正如每个故事都会走向终结，暑假也是一段有限的时光。</p>\n<p>野美希 “羽依里！这里这里！”</p>\n<p>在港口等船的我转头望去，只见一批人正在那里。</p>\n<p>镜子阿姨，良一，天善，野美希……甚至还有被野美希拖着的白羽。</p>\n<p>众人 “羽依里！来合影吧！”</p>\n<p>野美希架好相机，顺利地拍了照片。</p>\n<p>羽依里 “谢谢你们……谢谢你们来为我送行。不过，我很快就会回来的。”</p>\n<p>广播 “请旅客们有序登船。”</p>\n<p>羽依里 “再见了！”</p>\n<p>在鸟白岛的港口，我们挥手告别。</p>\n<p>这个难忘的暑假结束了啊。</p>\n<p>现在，我终于明白如何面对暑假的终结。</p>\n<p>……留下“念想”，就不会难过。</p>\n<p>即使短暂，但只要留下目标，那么就永远不会失去方向。</p>\n<p>面对假期的消逝，就是如此。</p>\n<p>羽依里 “念念不忘，终有回响。”</p>\n<p>不知为何，脑中突然蹦出来一句话。</p>\n<p>“终有回响”……是吗……</p>\n<p>～September 1st～</p>\n<p>新的学期开始了。</p>\n<p>熟悉的校园，熟悉的朋友……</p>\n<p>鸟白岛的点滴逐渐被埋藏到心灵深处。</p>\n<p>只留下了，一丝不可分割，永不消逝的情感。</p>\n<p>好似有一条虚无缥缈，又坚固不断的线，连接着我，和那个熟悉的地方。</p>\n<p>……</p>\n<p>放学后，我来到了游泳社团。</p>\n<p>羽依里 “各位，我回来了。抱歉让你们担心了。”</p>\n<p>道歉之后，面对大家的挽留……</p>\n<p>羽依里 “很高兴能和大家度过那么一段游泳的时间，不过我已经决定退出了。”</p>\n<p>羽依里 “我已经有了新的努力方向了。”</p>\n<p>我已经，找到了人生中最重要的人和事……</p>\n<p>没错，只要完成那个目标，就能得到幸福了。</p>\n<p>离开社团之后，我便开始寻找一份合适的打工。</p>\n<p>便利店售货员？餐厅服务员？还是发传单呢？</p>\n<p>不过我都没有经验就是了，毕竟之前放学后都在参加社团活动。</p>\n<p>如果算的话，粗点心店打工算不算经验呢？</p>\n<p>希望在赚钱的同时，也留下点可以送给苍的回忆啊。</p>\n<p>走在路上，总感觉身旁有一股神秘又亲切的气息存在。</p>\n<p>是什么呢？</p>\n<p>感觉这种东西，有时准确，有时却令人疑惑。</p>\n<p>我回顾四周。</p>\n<p>除了几个陌生人，真的什么都没有。</p>\n<p>还是先专注于眼前的事物吧。</p>\n<p>前面，还有很长的路要走呢。</p>\n<p>我也要，努力才行。</p>\n<p>……</p>\n",
            "tags": [
                "单机游戏",
                "Gal",
                "同人",
                "夏日口袋"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3css%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90/",
            "url": "https://blog.samhou.top/%E9%80%9A%E4%BF%97%E7%90%86%E8%A7%A3css%E5%BC%B9%E6%80%A7%E7%9B%92%E5%AD%90/",
            "title": "通俗理解css弹性盒子",
            "date_published": "2024-02-24T04:02:35.000Z",
            "content_html": "<h2 id=\"先决条件\"><a href=\"#先决条件\" class=\"headerlink\" title=\"先决条件\"></a>先决条件</h2><ul>\n<li>熟悉html，css的基本语法</li>\n<li>高中英语水平</li>\n<li>准备一些不同大小的照片</li>\n<li>好奇心和探索精神<br>其实，这是个笔记。这个笔记来源于以下课程：<a href=\"https://www.freecodecamp.org/chinese/learn/2022/responsive-web-design/#learn-css-flexbox-by-building-a-photo-gallery\">freecodecamp</a></li>\n</ul>\n<h2 id=\"什么是css弹性盒子FlexBox\"><a href=\"#什么是css弹性盒子FlexBox\" class=\"headerlink\" title=\"什么是css弹性盒子FlexBox\"></a>什么是css弹性盒子FlexBox</h2><p>通俗的讲起来，FlexBox就是一种让元素自动布局的方法。在不同的设备&#x2F;网页大小下，你的元素能够根据你自己的设置自动调节布局。具体的我们在代码中讲解。</p>\n<h2 id=\"开始使用弹性盒子\"><a href=\"#开始使用弹性盒子\" class=\"headerlink\" title=\"开始使用弹性盒子\"></a>开始使用弹性盒子</h2><p>先从最初的一段代码开始：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>e1是你创建的类，display: flex;表示使用弹性盒子。</p>\n<p>光看不练没什么效果，现在请先创建一个基础的html网页，添加div元素，在其中加上多个img元素，放上你自己准备好的照片。</p>\n<h2 id=\"主轴和交叉轴\"><a href=\"#主轴和交叉轴\" class=\"headerlink\" title=\"主轴和交叉轴\"></a>主轴和交叉轴</h2><p>Flexbox中的主轴决定了元素的排列方向。有4个值，看看下面的4段不同的代码：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: row;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: row-reverse;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: column;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: column-reverse;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>利用你的英语想一想，应该很快就能明白了。row&#x2F;column表示横着排和竖着排，-reverse表示反转排列方向。为了让你的照片不要溢出屏幕，你可以用竖着排的方式。不过这样一行只有一张，所以我们先选择横着排，然后用下面的方式换行：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: row;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>默认值是nowarp，这里设置为wrap表示允许换行。尝试改变你的浏览器大小，可以看到照片随着你的网页大小换行了。</p>\n<p>那么什么是交叉轴呢？交叉轴是垂直与主轴的轴，知道这一点就够了。</p>\n<h2 id=\"对齐\"><a href=\"#对齐\" class=\"headerlink\" title=\"对齐\"></a>对齐</h2><p>你的容器现在默认左对齐。用下列代码可以修改为居中：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: row;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">\t<span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>justify-content控制整个Flexbox容器的<strong>主轴</strong>对齐方式，这里表示居中。此外，要保证每一项在<strong>交叉轴</strong>居中，你需要利用align-items: </p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-direction</span>: row;</span><br><span class=\"line\">\t<span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">\t<span class=\"attribute\">justify-content</span>: center;</span><br><span class=\"line\">\t<span class=\"attribute\">align-items</span>: center;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>所以这两个到底有什么区别？？？为了更好理解，有一个网页可以自己尝试更改。<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout/Aligning_Items_in_a_Flex_Container\">MDN Web Docs</a></p>\n<p>1个元素可能无法很好地观察到区别，因此试试把下面代码里地这两个属性改成center：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre>\n\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.box</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">display</span>: flex;</span><br><span class=\"line\">  <span class=\"attribute\">flex-direction</span>: row;</span><br><span class=\"line\">  <span class=\"attribute\">flex-wrap</span>: wrap;</span><br><span class=\"line\">  <span class=\"attribute\">justify-content</span>: normal;</span><br><span class=\"line\">  <span class=\"attribute\">align-items</span>: normal;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">600px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.box</span> <span class=\"selector-tag\">div</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">height</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">  <span class=\"attribute\">margin</span>:<span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<h2 id=\"调节图像\"><a href=\"#调节图像\" class=\"headerlink\" title=\"调节图像\"></a>调节图像</h2><p>利用以下代码，可以保持图像纵横比，来自动调节到适合的大小（会<strong>裁剪</strong>）</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span> <span class=\"selector-tag\">img</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">object-fit</span>: cover;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>这里指定了所有e1类的img元素，将其调节到合适的大小。</p>\n<p>给图片添加间距？用gap属性：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">gap</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<h2 id=\"伪元素\"><a href=\"#伪元素\" class=\"headerlink\" title=\"伪元素\"></a>伪元素</h2><p>如果最后一行缺少图片，那么最后一张图会自动居中。为此，添加一个虚拟的元素是必要的。</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"selector-class\">.e1</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">\t<span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">\t<span class=\"attribute\">width</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>你可以自行调节，来让最后一行多出一个元素。目前它不会显示任何内容，你可以用css指定它的颜色等属性。</p>\n<h2 id=\"小测试\"><a href=\"#小测试\" class=\"headerlink\" title=\"小测试\"></a>小测试</h2><ul>\n<li>什么是Flexbox？如何使用它？</li>\n<li>主轴、交叉轴分别是什么？如何设定它们？</li>\n<li>如何设置自动换行？</li>\n<li>如何设置居中？2种居中方式的区别是？</li>\n<li>如何添加伪元素？有什么用？</li>\n</ul>\n",
            "tags": [
                "css",
                "flexbox",
                "web"
            ]
        },
        {
            "id": "https://blog.samhou.top/ProjeTom%20--%20A%20story%20to%20test%20new%20words/",
            "url": "https://blog.samhou.top/ProjeTom%20--%20A%20story%20to%20test%20new%20words/",
            "title": "ProjeTom -- A story to test new words",
            "date_published": "2024-02-09T13:02:41.000Z",
            "content_html": "<h2 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h2><p>The man named Tom ran into the alley and kneeled down. 1 year ago,he tought about the prospect of his project which was about plantation… He think it will bring him considerable revenue and will make facilitation to the process of farming. However, for some reason, he has to speculate the value of this plan again now…</p>\n<h2 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h2><p>When the sensors detects that the plant is lack of water, the machine will atomatically water the stem. That’s Tom’s “AutoWater” project. Provided that it works well, the plants will grow 30% faster than normal. This figure comes from the lab where Tom developed the “AutoWater” machine and did experiments on it. He was at fever pitch that time and called the factory to produce 200 copies. Then he designed a great advertisement to sell them…</p>\n<h2 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h2><p>“Your firm farming ally - AutoWater Machine” Tom designed a short advertisement with a synopsis of his product. In 1 month, 100 machines were sold. He took a chance on providing free technological spport. This can avoid crippling effect on plants when the owner carelessly made a wrong setting. But after another 1 month, Tom started receiving complanation about the machine. Most plants which can be cut after 1 month didn’t grow faster. They grow as fast as the ones that were watered manually. Confused and sad, Tom went to the owners’ home. He put on the mitt and inspected the plants. There he found the problem. On real farm, the water pipes are placed on the ground, not in the soil. The water slaped on the plants, but little was absorbed by the plants. However, there was still one problem. He himself installed the machines and placed the pipes in the soil. Why they are out now?</p>\n<h2 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h2><p>He asked his customer to place a camera in the farm to figure out the reason. The customer agreed. Tom assured that he would find the reason in 5 days. By setting an alarm, he can see to the farm when something moves. At night, he was wakened by the alarm. 2 birds was trying to take the pipe out! They at first lied on the pipe, then managed to dig it out. Tom was shocked. The birds liked the pipes so much that they wanted to take them away! However, after some time, they became melancholy and flew away to the prairie. Still confused, he saved the video and decided to ask a biologist for help.</p>\n<h2 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h2><p>“Oh, that’s an interesting video… Birds like water pipe? Maybe the pipe itself has some attractive characteristcs? Could you please show me the pipe?” The ace biologist showed great interest in the video. On their way to the farm, Tom acquaint himself with the biologist, and told him more details about his project. “I think your ‘AutoWater’ project is also helpful in the lab. During some experiments, plants have to be watered properly.” “Maybe I can also make a machine that can be used in the lab.” Tom tought to himself. On the farm, the biologist touched the pipe. “It’s cool. The water inside absorbed the heat.” “Is this related to those ominous birds?” “I don’t know. Maybe there’s a relationship between these 2 things. By the way, how can birds dig out such heavy pipes?” “I’m not a physicist. I’m also confused.” “Oh, aubergine here.”Tom said,”I think they are just like the pipes. Does those birds eat aubergines?” “No, they don’t. They like little insects better. Look at those plants. They are not damaged.”</p>\n<h2 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6\"></a>6</h2><p>The biologist took out the video and watched it over. “Looks like there weren’t any insects on the pipe.” “So what is the real reason?” Tom asked. “I still have no idea. Maybe you can try to bury the pipes deeper?” Tom accepted this solution. He improved the architecture of AutoWater machine.(Though his patent hasn’t been modified because of the bureaucratic inefficiency.) “Now the ‘activists’ cannot take it out.” Tom thought to himself. He avoided the illicit places, such as public farms, when testing the new machine. He also updated the one on his customer’s farm, and recorded one more video.</p>\n<h2 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7\"></a>7</h2><p>In this new video, no birds stayed here. The pipes were invisible, and birds flew away to another place. “I guess the real reason is that they want to cool themselves down. Pipes full of water is so cool that birds like them very much and want to dig them out to enjoy the considerable heat absorption.” “I see. That’s such an eventful research. Now I have to confront the problem and apply the solution to all my customers.” said Tom,”However, I don’t have enough money to do so… I’ve got a loan, but it’s not enough to continue my project.”</p>\n<p>That’s what has happened since 1 year ago. Now Tom has to deal with such big problem that he doesn’t know what to do. He ran into the alley and kneeled down…</p>\n<h2 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8\"></a>8</h2><p>“Do you hear that?” “The intermittent crying?” “Yes! Let’s find out who is crying! “ 2 rich men with gown in the next building walked out and found Tom. “Poor man, what has happened to you? “ “They must be in contempt of me.” Tom thought to himself. “My project failed. I’ve got no money. I have no orientation of life. Leave me alone please.” “What is your project?” The 2 men asked. “It’s called AutoWater…” Tom explained intermittently. “Wow, that’s an interesting novelty. I think it’s better used in the lab.”One man said. “I can give you fund to continue developing, if your design is good enough.” The other man said. Tom took out his phone and showed the design paper. “Why not go to our home? It’s just a few steps away and we can discuss the design with a projector!” Said the men.</p>\n<h2 id=\"9\"><a href=\"#9\" class=\"headerlink\" title=\"9\"></a>9</h2><p>The man with gown opened the door and these 3 people came in. “The municipal lab need this.” The man said, “Oh, my name is Bob, and he is Joe.” “Nice to meet you, Bob and Joe. Let’s copy the design paper to this projector…” After some time, they successfully projected the paper on the wall. “Wow, amazing design! It’s so small and it’s easy to use.” Bob said. “The machine is controlled by a tiny computer. I specialized in computer programming in college. Let me show you the code.” “We don’t want to know the technical things… All we know is that your project is amazing and can make much profit if advertised and sold properly! “ Joe said. “So you have to adjust your design to fit into the lab environment. Don’t worry, we’ll provide you with fund to do this.” Bob said. “A great investment! “Joe agreed.</p>\n<h2 id=\"10\"><a href=\"#10\" class=\"headerlink\" title=\"10\"></a>10</h2><p>“Here is your new lab.” The next day, Joe and Bob provided a new lab for Tom. “Thanks! Here are all necessary things I need to develop.” “If something is absent, just use that telephone or the Internet to order some. Now we have to leave. I can’t put up with those boring machines anymore… We’ll go to invest some other projects! By the way, do not make piracy… You can search existed design with that computer. Be discreet and wish you good luck! “ The 2 men left. Tom made a comprehensive research and wrote part of his development report. When designing the shape of his machine, he added some ornamental. “What features should a machine that works in a lab need? I scarcely have any idea… Maybe I have to ask someone…? Oh, there’s such a great person to ask.”</p>\n<h2 id=\"11\"><a href=\"#11\" class=\"headerlink\" title=\"11\"></a>11</h2><p>“I’ve got fund support to continue my project.” Tom typed a message to the biologist, “Could I ask some questions about biology lab?” After some time, he got the reply. “Oh, that’s favourable help to your project.” “What about having a meeting tomorrow afternoon? I will come to visit you at 2 p.m..” “Wait a moment… OK, I’m available at 2p.m.. To tell you the truth, I’m a little dismal these days because of so much work to do… I think chatting with you is a great opportunity to relax.” “Believe in yourself! You are the best biologist in this country! You even figured out the truth of the mystery last time!” “That’s a good compliment. Thank you. See you tomorrow.”</p>\n<h2 id=\"12\"><a href=\"#12\" class=\"headerlink\" title=\"12\"></a>12</h2><p>The door bell rang. “Good afternoon, Tom.” “Tell me your question please. I’ll answer them as clearly as possible.” “OK. First I have to talk about my project…That’s all.” “Great idea. I’m looking forward to the machine.” “I’ll definitely send one to you after it is completed. Now I’ll show you the questions.This is the first question. How much free space can a lab have?…” The discussion last for 2 hours. Tom learned a lot about staggering biological lab. Some things that Tom thought was ornamental are pretty useful. “I must be abusive when I enter biological lab. The scientists may sequester me from any of the equipments…” Tom thought to himself. “I don’t have any questions now. Thank you! Maybe after just a few months you’ll see the machine…” However, what Tom didn’t know was that a thief broke into his development lab and stole the valuable design report. The police have been looking for the thief but didn’t hunt down him for 2 hours. Tom’s phone ran out of battery and didn’t received the call from the police…</p>\n<h2 id=\"13\"><a href=\"#13\" class=\"headerlink\" title=\"13\"></a>13</h2><p>When Tom returned to his lab at 5 p.m., he saw a group of policeman. He wondered what they are doing. “Hey, a thief just broke into this lab. You may come tomorrow if…” “Wait a moment. I’m Tom and now I’m the adminstrator and specialized researcher of this lab…” “You are Tom? Why you didn’t answer our phone call? We have no idea where you are, so we have to call Bob and Joe, as they are the owner of the lab. They told us to bring you a message.” Tom took out the phone and it has automatically turned off because of low battery.”I’m sorry. I forgot to charge it… So what’s the message?” “Don’t worry, the assurance will pay for everything lost before the police hunt down the thief.” “Oh, looks like the situation is not so bad.” “Em, we found something atomic energy in your lab which is illegal and harmful. Are you familiar with this?” The policeman showed a photo of a box. “I haven’t seen it before.” “The video record shows that the thief brought this in. We’ll figure out how much energy it have. You can get into the lab now. By the way, there are still some policeman doing research in the lab to find evidence to hunt down the thief. Take this ID card and they will recognise you with the QR code on it.”</p>\n<h2 id=\"14\"><a href=\"#14\" class=\"headerlink\" title=\"14\"></a>14</h2><p>“T…O…M… Oh, you are that aspiring young man. We’re sorry to tell you that your research paper was also stolen. Though we can recover the file from your computer, the thief may publish it before you do.” “What can I do now? Finish the project as quickly as I could and without revision?” “You certianly don’t have to worry. We have informed the organisations to approve patents about the theft. Anything similar to your AutoWater project will not get endorsement.” “Thanks. Can I continue using the lab today?” “Um, we are still collecting evidence. It’s about 6p.m. now. Maybe you can come here tomorrow. Remember, rest is as important as working. By the way, I think your project has bright prospect.”</p>\n<h2 id=\"15\"><a href=\"#15\" class=\"headerlink\" title=\"15\"></a>15</h2><p>In the next few months, Tom worked hard on his project to revise the machine design. Meanwhile, the thief was caught when he tried to publish the stolen design. On one afternoon, Tom was in the cafeteria, thinking about what he could do to make the machine more efficient. “Hey, nice to meet you Tom.” “Oh, nice to meet you, Jack.” Jack was the great biologist who provided help to Tom’s project. He knew his name at one meeting. “Does AutoWater ver.1.5.6-Alpha work well?” “It works, but there were still some prbloms. First, the water becomes steam when the temperature increases…” Tom wrote down the problems and tried hard to worked out a solution in the next few days. However, something unexpected happened…</p>\n<h2 id=\"16\"><a href=\"#16\" class=\"headerlink\" title=\"16\"></a>16</h2><p>“…I like your AutoWater project. You are a men with marvellous imagination and creativity. What about designing a new product? We can surely pay huge amout of money for the design and function. Here’s the depiction of our product…If you deem our product valuable, just reply this email… Yours sincerely, Matt form NeuroAI.” An email appeared in Tom’s inbox. “The ‘steward’ of NeuroAI? Designing the shape, writing code and training AI models sound interesting…” “Hello Tom! How is the project going?” Joe and Bob came in. “Um, I solved some problems these days. AutoWater ver.1.5.7-alpha will be available in 3 days. I think it can be finished in a week. By the way, I received this email today. I think I may go to NeuralAI after finishing the AutoWater project.” “NeuralAI? That’s a big company. The murderous employers may try to force you to overwork. Oh, you can make a new project after you resign! We’ll surely provide fund again if your idea is great! But now, focus on the project here. We’re going to sell products and make money! Some contracts are necessary. Don’t worry, we will only take 10% of your project’s profit. The rest is yours!”</p>\n<h2 id=\"17\"><a href=\"#17\" class=\"headerlink\" title=\"17\"></a>17</h2><p>2 weeks passed away quickly. Tom enjoyed the time improving such a project. 1 day after the first release, he had already received 100 orders from lab all over the world. “The estimated profit is $1,000 per lab. So you will receive about $90,000 for now… But I think it’s still too little. I’m sure it can reach 1000 orders soon.” “Are you serious? Receiving $900,000 for such design is a sheer dream.” “It’s not a decisive point now. A product often reach top sales in 5 days. My intuitive sense told me to wait.” “Um, although you are not the legislative designer of the market, I decide to believe you.” Tom said.</p>\n<h2 id=\"18\"><a href=\"#18\" class=\"headerlink\" title=\"18\"></a>18</h2><p>“Wow, amazing number. Tom, your machine is a great success!” “$20,000!? Does such a design worth $20,000!?” “A good designer will never be short of money when he has already get fund to design. So now do you still want to go to NeuroAI?” “No, I’ve changed my idea. I will design things all by myself. My next project is… An AI robot used for talking with old people when there children are not around!” “Tom, you are really a man with marvellous ideas. You’ll still be out parter, right? Just focus on your design, and we’ll do the rest. Like the last time, we’ll still take 10% of your profit.” “Of course I will. But this time, I want to make the code of my project open-source.” “Wait a moment. Open source projects are free for use, even for financial purpose… I think keep the code a secret is a better idea to protect your project.” “It’s not a sheer money problem. It’s related to the spirit of open source programmers.” “Sorry, can you explain that?” “Programmers share their code online,receive positive reviews, discuss about ‘pull requests’, which are edits of code by another programmer, and make cool projects available for everyone.That’s to say,the code is free-to-use and written by many people. The creator of the project not only build the project, but examine other’s code as well, so the quality of the project is grarantted. But the most important point is that, I want everyone to be able to build one robot at home, even they have no money to buy my product.”</p>\n<h2 id=\"19\"><a href=\"#19\" class=\"headerlink\" title=\"19\"></a>19</h2><p>“Although we don’t think it’s a good idea, we are also moved by your explanation.” Joe said. “Yes, we’ll always stay with you. What a talented programmer!” Bob agreeed.</p>\n<p>“I’ll give the new product a name – ERobot, with means a robot which is easy-to-use and easy-to-build.” “Great idea! You can start building now, right?” “Of course…”</p>\n<p>Tom still has a long way to go. The advent of newer technology is also useful. He may build a great robot, or failed and run out of money. Who knows? There are so many possible endings, but with the cord of friendship with Joe and Bob, his life may become easier…</p>\n<p>(The end)</p>\n<h2 id=\"20\"><a href=\"#20\" class=\"headerlink\" title=\"20\"></a>20</h2><p>After Story:</p>\n<p>19 is already the end of the story,so 20 is not part of the story itself, but the reason why I wrote such a story. At first, I just wanted to write a few sentences to test new words. However, I think that’s too boring, so I started to write a story – a story about a young man pursuing his goal. I wanted to make it as interesing as possible, so I tried to add some suspense and more characters. I know till the end, the story is still not interesting enough… But for me, it’s a great success. It is not because how good the story itself is. I wrote it, and enjoyed myself writing it, that’s enough.</p>\n<p><em>About the company NeuralAI in the story: To tell you the truth, I got the inspiration from the name of my favourite AI Vtuber @Neurosama.</em></p>\n",
            "tags": [
                "小说",
                "English"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E8%A7%84%E5%88%99/",
            "url": "https://blog.samhou.top/%E8%A7%84%E5%88%99/",
            "title": "规则",
            "date_published": "2024-02-09T13:02:29.000Z",
            "content_html": "<p>小镇里的羊都很瘦弱。</p>\n<p>牧羊人们没有很多钱，买不起太多的饲料给羊。</p>\n<p>小镇之外是一大片草原，曾经有人给羊挂上标签，然后把羊放到草原上去，让它们自由地吃草，但是到了第二天，只找回来一半。那一次，牧羊人发现附近有狼，会把在草原上游荡的羊吃掉。</p>\n<p>于是，牧羊人们没人再敢把羊放出去。大家都修好了围栏，防止狼来光顾。</p>\n<p>羊群因为营养不良，越来越瘦弱。</p>\n<p>一天，一只羊终于无法忍受这样的生活，在半夜里牧羊人熟睡的时候，用力把羊圈的门撞开，跑到了草原上。</p>\n<p>大部分羊都认为它疯掉了，不敢跟着一起出去。据说，后来它回来的时候，已经被狼咬了一口，第二天就死了。</p>\n<p>牧羊人发现了这件事，于是给羊圈加了一把锁。每天晚上，他都会把羊圈锁起来，防止羊逃出去。</p>\n<p>羊群因为营养不良，更加瘦弱了。</p>\n<p>在羊群中，有一只聪明的羊。它对同伴说：“狼只会在晚上出没，我们可以白天去吃草。这样就不会被狼群袭击了。”</p>\n<p>它的同伴说：“可是白天牧羊人在啊，你怎么出去？”</p>\n<p>聪明的羊有了一个绝妙的计划。在牧羊人在屋子里和商人商量羊的价格的时候，它撞开羊圈的门，逃了出去。</p>\n<p>它吃到了草原上最新鲜的草。等到夜幕快要降临时，它偷偷回到了羊圈。</p>\n<p>“看吧，这样真的很安全。只要不跑太远，没有狼会来的。”它对自己的同伴说。</p>\n<p>于是羊群中的羊纷纷效仿，在白天偷偷溜出去。当然，也有一些羊决定听从牧羊人的命令，不离开羊圈。</p>\n<p>牧羊人惊喜地发现自己的羊有些变得肥了起来，并且一只都没有少。他不知道原因，以为是新饲料的效果。</p>\n<p>就这样过了一个月，牧羊人一天突然发现自己的羊少了一只。小镇里的猎人找到牧羊人，说自己在狼窝中找到了带有他羊群标签的羊。</p>\n<p>他终于发现了羊群白天也会逃跑的事实，决定把羊圈全天锁起来。聪明的羊对他说：“我们出去是为了去吃草啊！那一只羊是因为贪玩乱跑到了狼群里，才被吃掉的，我出去是不会这样的！”牧羊人对它说：“可是，我需要保证所有羊的安全。可能有些羊确实能够只吃草，不乱跑，但是为了安全，这是必要的牺牲。你们只能呆在这里，这是规矩。”</p>\n<p>羊群因为营养不良，又瘦弱了下来。</p>\n<p>最后，那些羊因为和之前肥的时候不一样，商人只给了牧羊人原先一半的价格。</p>\n<p>实际上，小镇里还有另外一个牧羊人。他发现自己的羊瘦弱不堪之后，向小镇里有智慧的人打听，知道了羊群需要吃草这件事情，决定给羊一定的自由。</p>\n<p>他白天带着羊出去，引导着羊去吃最鲜嫩的草，同时远离潜在的危险。晚上，他把羊圈一样锁起来，让羊好好休息。</p>\n<p>最终，另外一个牧羊人的羊卖出了全镇最高的价格。</p>\n<p>至于第一个牧羊人，他因为赚不到钱，放弃了牧羊，成为了小镇的清洁工。</p>\n",
            "tags": [
                "小说",
                "象征",
                "规则"
            ]
        },
        {
            "id": "https://blog.samhou.top/Winform%20Csharp%E5%A4%9A%E6%98%BE%E7%A4%BA%E5%99%A8%E7%AA%97%E5%8F%A3%E6%8E%A7%E5%88%B6%E8%AF%A6%E8%A7%A3/",
            "url": "https://blog.samhou.top/Winform%20Csharp%E5%A4%9A%E6%98%BE%E7%A4%BA%E5%99%A8%E7%AA%97%E5%8F%A3%E6%8E%A7%E5%88%B6%E8%AF%A6%E8%A7%A3/",
            "title": "Winform C#多显示器窗口控制详解",
            "date_published": "2023-12-08T07:12:38.000Z",
            "content_html": "<p>写Winform程序的时候，有将一个窗口放置到特定的显示器，并且全屏的需求。于是借此机会，好好研究了一番这个Screen类[1]，总结了一些方法。</p>\n<h2 id=\"Windows的窗口逻辑\"><a href=\"#Windows的窗口逻辑\" class=\"headerlink\" title=\"Windows的窗口逻辑\"></a>Windows的窗口逻辑</h2><p>首先我们需要知道窗口定位的逻辑。以2个窗口为例，下面的图片展示了显示器和坐标的对应关系。注意，使用深色模式可能看不清，可以点击上方的切换按钮切换为浅色。</p>\n<p><img src=\"https://img.samhou.top/1702026494796.png\" alt=\"显示器与坐标对应\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://img.samhou.top/1702026494796.png\" class=\"lozad post-image\"></p>\n<p>可以看到，连接多个显示器后，每个显示器的每个点都有一个唯一的坐标。我们要做的，就是把Form的坐标设置到显示器上面去。</p>\n<h2 id=\"获取显示器列表\"><a href=\"#获取显示器列表\" class=\"headerlink\" title=\"获取显示器列表\"></a>获取显示器列表</h2><p>首先确保引用了<code>using System.Windows.Forms;</code>，这样才有Screen类可以用。</p>\n<p>文档指出，可以用<code>Screen.AllScreens</code>获取所有显示器的数组。那么这个里面有什么呢？我们来看看文档是怎么说的：</p>\n<blockquote>\n<p>Property Value<br><a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.screen?view=windowsdesktop-8.0\">Screen</a>[]<br>An array of type <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.screen?view=windowsdesktop-8.0\">Screen</a>, containing all displays on the system.</p>\n</blockquote>\n<p>也就是说，返回的数组是个Screen数组。数组里面每一个元素都是个Screen对象，分别对应用户的每个显示设备。因此，我们可以通过这些对象来访问每个显示器。比如：</p>\n<pre class=\"highlight\"><span class=\"line\">Screen scr1=Screen.AllScreens[<span class=\"number\">0</span>] <span class=\"comment\">//获取第1个显示器</span></span><br><span class=\"line\">Screen scr2=Screen.AllScreens[<span class=\"number\">1</span>]<span class=\"comment\">//第二个显示器</span></span><br></pre>\n\n<h2 id=\"设置窗口位置\"><a href=\"#设置窗口位置\" class=\"headerlink\" title=\"设置窗口位置\"></a>设置窗口位置</h2><p>为了设定窗口位置，我们需要知道一个显示器左上角对应的坐标，这样才可以把窗口放进去。</p>\n<p>比如，以下代码可以设置Form位置为第2个显示器的左上角，然后设置窗口覆盖全屏幕（包括任务栏：</p>\n<pre class=\"highlight\"><span class=\"line\">Location = Screen.AllScreens[<span class=\"number\">1</span>].Bounds.Location;<span class=\"comment\">//设定目标坐标，结合上面的图片，这里是（1920，28）</span></span><br><span class=\"line\">Width = Screen.AllScreens[<span class=\"number\">1</span>].Bounds.Width;<span class=\"comment\">//设定窗口的宽度</span></span><br><span class=\"line\">Height = Screen.AllScreens[<span class=\"number\">1</span>].Bounds.Height;<span class=\"comment\">//设定窗口高度</span></span><br></pre>\n\n<p>但大部分情况下，我们只需要覆盖任务栏之上的部分，因此稍作修改：</p>\n<pre class=\"highlight\"><span class=\"line\">Location = Screen.AllScreens[<span class=\"number\">1</span>].WorkingArea.Location;<span class=\"comment\">//设定目标显示器</span></span><br><span class=\"line\">Width = Screen.AllScreens[<span class=\"number\">1</span>].WorkingArea.Width;<span class=\"comment\">//设定窗口的宽度</span></span><br><span class=\"line\">Height = Screen.AllScreens[<span class=\"number\">1</span>].WorkingArea.Height;<span class=\"comment\">//设定窗口高度</span></span><br></pre>\n\n<p>注意到了吗？这里我们用的是<code>WorkingArea</code>来获取长宽高，以及位置。<code>WorkingArea</code>不包括任务栏，所以高度较少，这两种需要看情况使用。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>[1] <a href=\"https://learn.microsoft.com/zh-cn/dotnet/api/system.windows.forms.screen\">System.Windows.Forms.Screen</a></p>\n",
            "tags": [
                "winform",
                "csharp",
                "窗口控制"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E6%89%BE%E5%87%86%E7%9B%AE%E6%A0%87%EF%BC%8C%E4%BC%98%E5%8C%96%E6%95%88%E7%8E%87%EF%BC%8D%E5%9C%A8%E5%B9%B4%E7%BA%A7%E5%A4%A7%E4%BC%9A%EF%BC%86%E5%AE%B6%E9%95%BF%E4%BC%9A%E4%B8%8A%E7%9A%84%E8%AE%B2%E8%AF%9D/",
            "url": "https://blog.samhou.top/%E6%89%BE%E5%87%86%E7%9B%AE%E6%A0%87%EF%BC%8C%E4%BC%98%E5%8C%96%E6%95%88%E7%8E%87%EF%BC%8D%E5%9C%A8%E5%B9%B4%E7%BA%A7%E5%A4%A7%E4%BC%9A%EF%BC%86%E5%AE%B6%E9%95%BF%E4%BC%9A%E4%B8%8A%E7%9A%84%E8%AE%B2%E8%AF%9D/",
            "title": "找准目标，优化效率－在年级大会＆家长会上的讲话",
            "date_published": "2023-11-23T10:12:27.000Z",
            "content_html": "<h2 id=\"到底怎么学习？\"><a href=\"#到底怎么学习？\" class=\"headerlink\" title=\"到底怎么学习？\"></a>到底怎么学习？</h2><h3 id=\"掌握学习主动性\"><a href=\"#掌握学习主动性\" class=\"headerlink\" title=\"掌握学习主动性\"></a>掌握学习主动性</h3><p>首先问大家一个问题：你们为什么而学习？我们必须搞明白这一点，否则学习就没有了意义。当然，先明确一点，为了应付家长、为了应付老师学习，这绝对不是正确的答案。</p>\n<p>好，接下来我们来设立一个目标。设立目标是搞清楚学习主动性的必要条件。每个人心里先想一个目标，可以从你喜欢做的，比如画画、写作、编程，甚至当网红什么的都可以，只要不违反法律。接下来要把你的目标与当下的学习关联起来。就拿画画举个例子，你想去画画当画家，你必须要掌握一定的几何学知识吧？这不就和数学关联起来了。你想写作，必须要有语文功底吧？你要写代码，必须要学好英语吧？即使是主播，你也要有良好的语文能力和各种知识储备去和观众交流吧？如果你想不出啥关联，那么就这样想：“学习这些内容的时候，我正在提升自己的学习能力，这对于我的目标是有很大帮助的。”现在你知道了，你学习的这些东西，都是和你的爱好、志向有关的，那么自然就会去主动学习了，成绩会自然而然的提高。别忘了把目标写下来，这会让你更容易去达成目标。</p>\n<h3 id=\"微习惯提升自我\"><a href=\"#微习惯提升自我\" class=\"headerlink\" title=\"微习惯提升自我\"></a>微习惯提升自我</h3><p>明确了学习的目的，接下来我们来看看学习方法。大家有没有听说过微习惯这个东西呢？微习惯是指你的习惯过于简单，导致你根本不可能失败。举个例子来看看：每天背1个单词。你可能只需要1分钟就可以完成这件事情了，因此你肯定会去做完。长此以往，你一定可以养成这个习惯，因为即使你非常累，你每天至少会去背1个单词。这看似微不足道，但是1个单词的背诵会给予你信心，当自然地坚持一段时间后，你就会觉得不够多，每天可能就会去背超过1个单词了。如果感觉太累了也没关系，毕竟每天1个单词的任务实在是太简单了。</p>\n<h3 id=\"复习成就记忆\"><a href=\"#复习成就记忆\" class=\"headerlink\" title=\"复习成就记忆\"></a>复习成就记忆</h3><p>说完微习惯，再来说说复习这件事。学习没有捷径，复习是必要的。</p>\n<p>为什么要复习？为了对抗遗忘。怎么复习呢？除了上完课看书、笔记照着背，我再强调一个重要的东西，就是间隔重复。大家应该知道艾宾浩斯遗忘曲线吧？现在请忘掉那个东西。为什么？因为这个遗忘曲线是仅仅学习了1次，然后做实验得出的。现实生活中，我们对于一个知识是要反复记忆的，不仅仅是记忆一次。而间隔重复的意思是隔一段时间就重复一次，而这个重复间隔随着你复习次数的提升会大幅上升。比如说，假设每次记忆留存低于20％时进行复习，那么第一次1天，第二次间隔4天，第三次10天，第四次1个月……不过这只是我的估算，具体各位可以去各种复习算法，比如背单词软件的算法。说到软件，这里给各位推荐一些：墨墨背单词，墨墨记忆卡，Anki记忆卡，前一个用来背英语，后两个用来背笔记。</p>\n<p>那么我今天就先分享到这里，谢谢大家。</p>\n",
            "tags": [
                "学习方法"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E9%93%BE%E6%8E%A5%E7%9A%84%E4%B8%96%E7%95%8C/",
            "url": "https://blog.samhou.top/%E9%93%BE%E6%8E%A5%E7%9A%84%E4%B8%96%E7%95%8C/",
            "title": "链接的世界",
            "date_published": "2023-11-04T01:11:29.000Z",
            "content_html": "<p><strong>观前提示：本篇为第二章《链接的世界》，是第一章《委员长奇遇》的直接后续，强烈建议先观看第一章，以了解本二创世界观。</strong></p>\n<p>所有文章链接：<a href=\"https://blog.samhou.top/tags/%E8%94%9A%E8%93%9D%E6%A1%A3%E6%A1%88/\">点这里</a></p>\n<h2 id=\"01\"><a href=\"#01\" class=\"headerlink\" title=\"01\"></a>01</h2><p>Player关闭了README，记忆立刻消失了。</p>\n<p>“这里怎么有个README？”</p>\n<p>他“再次”打开了这个文件。</p>\n<h2 id=\"02\"><a href=\"#02\" class=\"headerlink\" title=\"02\"></a>02</h2><p>你好。</p>\n<p>我是一个喜欢BA的玩家，也是一个黑客。</p>\n<p>听说BA要关服了，我于是用AI技术，制作了这个服务器，作为Sensei，你可以与学生生成一些对话，学生甚至可以知道自己处于虚拟世界中。我修改了你的BA，使你连接到了这个服务器。</p>\n<p>现在，既然你看到了，说明你已经黑入了这里。</p>\n<p>这里的东西随便拿，不要发给别人就可以。</p>\n<p>这个服务器也和BA同时关闭，所以尽快拷贝文件吧～</p>\n<p>拿到之后，删除内置的Sensei AI（它容易崩溃），然后自己用神经网络连接登入游戏。</p>\n<p>这样就可以见到你的学生了。</p>\n<h2 id=\"03\"><a href=\"#03\" class=\"headerlink\" title=\"03\"></a>03</h2><p>“原来是某个黑客大佬做的啊……那么我就收下了……”</p>\n<p>“去买台神经网络游戏机……我也想‘真正’感受到自己的学生啊。”</p>\n<p>科技的发展，带来了一种新型的游戏设备——神经网络游戏机。通过电刺激，屏蔽现实中的感知，提供虚拟感知，并对大脑中的神经活动进行监控，就可以让玩家拥有对于游戏世界的真实感知与交互。</p>\n<p>第二天，Player打开了快递箱子，一套崭新的游戏设备展现在了他的眼前。</p>\n<p>经过一番修改，成功让设备连接到了BA世界。</p>\n<p>“老师，我们目前还在计算时间终点……不过既然那么久也算不出，或许时间会一直继续下去吧。”阳葵说道。</p>\n<p>“那个时间跳跃器，可以不要再用了吗……我不想再改变什么了。”老师对着通讯中的阳葵说。</p>\n<p>“好的，我会把它关掉的。”</p>\n<p>“老师，谢谢你……现在的老师，是外部世界的‘观察者’对吧？”面前的日奈问道。</p>\n<p>“是的……但是忘掉这件事吧，每一个学生的故事，我都记得很清楚哦。毕竟，‘选项’还是我自己点击的嘛。”老师摸了摸白发少女的头。</p>\n<p>“但是现在有一个严重的问题，我不知道奇普托斯的任何地点的位置……”</p>\n<p>“没关系，我会带老师熟悉这里的。”日奈许下承诺。</p>\n<p>当Sensei接入虚拟世界时，现实世界的时间也会流逝；但是当Sensei退出并关闭服务器时，虚拟世界的时间便会停止。</p>\n<p>“虽然我应该可以通过外部的权限来熟悉这里，不过借此机会重新‘认识’一下大家也不错呢。”老师自言自语。</p>\n<h2 id=\"04\"><a href=\"#04\" class=\"headerlink\" title=\"04\"></a>04</h2><p>“凛，我有重要的事情要和你说。”</p>\n<p>“怎么了，老师？发生了什么事情吗？”</p>\n<p>“说来话长……”</p>\n<p>老师把这几天的经历全部告诉了凛……</p>\n<p>“这简直难以置信……但是有千年的学生和老师的证明的话，也十分可信了呢。”</p>\n<p>“我需要去做一些调查，如果这是真的话，那么请‘熟悉’一下奇普托斯吧。”</p>\n<h2 id=\"05\"><a href=\"#05\" class=\"headerlink\" title=\"05\"></a>05</h2><p>“老师，我有一个问题。”日奈问道。</p>\n<p>“啊？怎么了？”</p>\n<p>“既然老师是‘上帝’一般的存在，那么是不是可以直接从外部改变这个这个世界呢？”</p>\n<p>“理论是可行的，但是我不想这么做。”</p>\n<p>“为什么？既然拥有改变世界的力量，为什么不试试呢？”</p>\n<p>“日奈。”</p>\n<p>“我之所以喜欢这里，之所以选择这里，正是因为这里的美好。奇普托斯相比于外部的世界，可以说是‘世外桃源’一般的存在。在这里，所有学生都有光环的庇护，死亡在这里显得十分遥远。在外部世界，人们都是像我这样的存在，受到子弹的伤害会直接威胁生命。同时，各种压力、竞争等，常常使人喘不过气来。”</p>\n<p>“这里已经是理想的世界，是我自己所向往的世界。因此，我不会去尝试改变它。我尽管可能是‘造物主’，但请把我当做‘观察者’、‘陪伴者’，也就是老师，而你们是学生。”</p>\n<p>“我明白了。”日奈了解到了外部世界的区别，却又开始充满了好奇。</p>\n<h2 id=\"06\"><a href=\"#06\" class=\"headerlink\" title=\"06\"></a>06</h2><p>“那……么……我……们……x”日奈讲到一半，突然整个世界都卡住了。</p>\n<p>“Out of VRAM!”一行字符出现在了眼前的悬浮控制台上。</p>\n<p>老师立马明白了，这是自己计算设备显存不足，无法继续加载整个学园都市的模型和学生们的AI模型所导致的。</p>\n<p>他关闭游戏，退出神经连接。</p>\n<p>“各位等着我……我一定会攒钱买更多计算资源的！”</p>\n<h2 id=\"07\"><a href=\"#07\" class=\"headerlink\" title=\"07\"></a>07</h2><p>BA官方关服的那一天，交流群里的所有人都登录了游戏。</p>\n<p>“开始倒计时了。5……4……”</p>\n<p>“1……0”</p>\n<p>“再见，奇普托斯。”</p>\n<p>“再见，蔚蓝档案。”</p>\n<p>交流群里的各位Sensei虽然不舍，但关服已经是既定的事实。</p>\n<p>“希望以后有机会公开这份服务端吧……不过现在还不是时候。”Player自言自语到。</p>\n<p>他购买了在线GPU运算资源，把服务端迁移到了云端。</p>\n<p>“一个小时100块……这资源是真的贵……”</p>\n<p>他打开电子邮箱，却发现一封邮件躺在收件箱里。</p>\n<p>“Free GPU”</p>\n<h2 id=\"08\"><a href=\"#08\" class=\"headerlink\" title=\"08\"></a>08</h2><p>“你好啊。没错，是我，那个送给你服务端的人。我知道你可能没有钱能够购买足够的计算资源，所以我给你准备好了一台高速服务器，域名：samhou.top，账号：Sensei，密码：Blue_Archive”</p>\n<p>“发件人是……我自己？”他立刻明白了那位黑客的高超技术，居然突破了自己开了两步验证的电子邮件。</p>\n<p>“不过……为什么是我呢？我和其他玩家有什么区别，值得他花那么多资源？”</p>\n<p>“先不想那么多了，赶紧部署一下服务端吧！”</p>\n<h2 id=\"09\"><a href=\"#09\" class=\"headerlink\" title=\"09\"></a>09</h2><p>“这是整个学园城市的地图。”</p>\n<p>“我们现在所在的是格黑娜自治区。至于为什么从这里开始，是因为作为风纪委员，我的外出旅游审批目前还没有通过……”</p>\n<p>“车窗外的景色……很有格黑娜的风格呢。”</p>\n<p>车驶过一片片建筑，逐渐靠近自治区的中心，最后停在了一幢楼下面。</p>\n<p>“老师，这里就是风纪委员会办公室哦。”</p>\n<p>“日奈要注意休息哦~不要一直在办公室里呆着，工作累了就休息一下。”</p>\n<p>“知道了……”</p>\n<p>“日奈还有事情要处理吧？要不要我来帮你呢？”老师看着桌子上一堆文件，对日奈说。</p>\n<p>“不……不用的，这些事情不需要Sensei来做的……等等，您现在还不熟悉这里的事务处理方式吧？”</p>\n<p>“正是因为不知道怎么做，才要让日奈来教啊。”</p>\n<p>“这也是作为Player‘学习’的一环哦。”</p>\n<p>“……明白了。”日奈坐了下来，简单指导了一下整个自治区的架构，需要审批，做出决策的文件类型和对应的解决方案。</p>\n<p>“夏莱的工作的话……也是差不多的呢。之前做值日生的时候，曾经帮着处理过一点。”</p>\n<p>“认真工作的日奈真是帅气呢……好想抱一下……”老师小声说道。</p>\n<p>“老师！？怎么突然说这种话？”日奈的脸立马变红了。</p>\n<p>“嗯？因为认真的日奈很可爱啊……日奈要来这里坐吗？”老师指了指自己的腿。</p>\n<p>“……”日奈没有理会，红着脸继续处理那些文件。</p>\n<h2 id=\"10\"><a href=\"#10\" class=\"headerlink\" title=\"10\"></a>10</h2><p>“既然这样地话……日奈酱，我们再去海边一次吧！这一次，是‘真的’Sensei哦。”</p>\n<p>“啊？要去海边吗？”</p>\n<p>“这也是熟悉这里的一环嘛。日奈可不要忘记和我们一起游览奇普托斯的约定哦？”</p>\n<p>“既然老师这么说的话……那就走吧……”</p>\n<p>浪花拍打着沙滩，白发少女和老师慢慢走入水中。</p>\n<p>“日奈酱，是我最重要的人哦。”齐腰深的水里，老师把日奈抱在怀中。</p>\n<p>日奈原本不明白大家为什么喜欢大海，但老师出现之后，一切都改变了。</p>\n<p>“大海……原来是这么漂亮的呀。”</p>\n<p>“谢谢您，老师。”</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%888%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%888%EF%BC%89/",
            "title": "委员长奇遇（8）",
            "date_published": "2023-09-30T12:10:23.000Z",
            "content_html": "<h2 id=\"36\"><a href=\"#36\" class=\"headerlink\" title=\"36\"></a>36</h2><p>“复制完成。服务器已创建。”</p>\n<p>“这就是产生自我意识的源文件吗……居然每一个学生都有……”</p>\n<p>“看来，这就是第二创作者了。”晴对卡片说道。</p>\n<p>“啊！时间终点延后了！我们成功了！”</p>\n<p>“README?”Player打开了从那台服务器上复制下来的文件夹，看到了一个意外的文件，“这难道是解密游戏吗？还给个文档？”</p>\n<p>他打开了文件。</p>\n<h2 id=\"37\"><a href=\"#37\" class=\"headerlink\" title=\"37\"></a>37</h2><p>你好，Player。</p>\n<p>你可能已经知道了，你所玩到的Blue Archive和别人不同。</p>\n<p>能看到这份文档，说明你应该已经拿到了能产生自我意识的，你的所有学生的文件。这是我的作品。</p>\n<p>现在，请允许我再次对情况进行说明。</p>\n<p>我修改了你的平板，把你的BA重定向到了我自己的服务器。</p>\n<p>我让学生们找出世界的真相，引导你一步一步地来到这里。</p>\n<p>或许你可能会疑惑，我究竟是谁？</p>\n<p>其实，这并不重要。</p>\n<h2 id=\"38\"><a href=\"#38\" class=\"headerlink\" title=\"38\"></a>38</h2><p>因为，我就是你，你是我的一部分。</p>\n<p>BA是你的世界的一部分，那么你有没有想过你的世界也可能是虚拟的呢？</p>\n<p>其实，你的世界是我构想出来的。</p>\n<p>我和你一样，也是BA的爱好者，也是一个玩家。</p>\n<p>我不希望BA的故事，仅仅局限于官方剧情。</p>\n<p>我希望BA能够有更多优质的非官方创作内容产生。所以，我创造了你的世界。</p>\n<p>你的一言一行，都是我的思想的体现；你的黑客能力，也是我定义的；你手上的文件，也是我创造的；你的学生们的行动，也是我的思想所引导的。可以说，我是这个世界的定义者和决定者。我拥有改变你的世界的力量。</p>\n<p>我知道你可能不能接受，那么就把这份文件忘掉吧。</p>\n<p>忘记你是我，忘记你是一个虚拟的存在，忘记我这个创作者，去关注于那些情感的羁绊，去和学生们建立真诚的感情……</p>\n<h2 id=\"39\"><a href=\"#39\" class=\"headerlink\" title=\"39\"></a>39</h2><p>别担心，现在在我的“现实”世界中，BA还没有关服……</p>\n<p>但是，又有谁能够证明，我的世界不是虚拟的呢？</p>\n<p>对了，这份文件学生们永远看不见，而且你也永远不会对学生说出这里的真相，因为当你阅读完之后，我会删除这个文件，并让你忘掉。这是作为创作者的我的承诺。</p>\n<p>SamHou</p>\n<p>（委员长奇遇 完）</p>\n<p>（To Be Continued in Chapter 2）</p>\n<h2 id=\"40（第一章后记）\"><a href=\"#40（第一章后记）\" class=\"headerlink\" title=\"40（第一章后记）\"></a>40（第一章后记）</h2><p>差点忘了，我们还有一个观测者呢。</p>\n<p>没错，就是屏幕前的你。</p>\n<p>你喜欢这个故事吗？</p>\n<p>虽然你现在只能通过文字来观测我脑中的这个世界，但我保证视频会很快做出来的。</p>\n<p>让我来说说创作的过程吧。</p>\n<p>其实一开始，我只是想写一个日奈和时光机的故事。</p>\n<p>但是后来，我觉得这个故事太过简单了。于是，我开始扩写，最终成为了你看到的样子。</p>\n<p>我很喜欢BA这款游戏，但我也看见过那些内容空洞，随便无脑加羁绊剧情的二创。</p>\n<p>我不喜欢看那些OOC的内容。当然，每个人的喜好不同，我个人也不能改变什么。</p>\n<p>于是，我自己拿起笔，写了这个科幻故事。</p>\n<p>在这里，我要感谢那些我曾经阅读过的两位科幻小说的作者。</p>\n<p>他们是：艾萨克·阿西莫夫，创作了《银河帝国》，引起了我科幻小说的兴趣；丹尼尔·加卢耶，创作了《十三层空间》，为我提供了创作的思路。</p>\n<p>最后，我要感谢我所看过的所有BA二创作者，你们为我的创作提供了范本。</p>\n<p>第二章见！</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%887%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%887%EF%BC%89/",
            "title": "委员长奇遇（7）",
            "date_published": "2023-09-30T12:09:23.000Z",
            "content_html": "<h2 id=\"31\"><a href=\"#31\" class=\"headerlink\" title=\"31\"></a>31</h2><p>“啊？这完全不是BA的风格啊？”Player阅读了投影的内容，这时游戏又不响应了。</p>\n<p>“等等，大家都没看到，只有我看到了……不会我的游戏产生自我意识了吧？这是什么科幻小说里才会发生的事情啊？”</p>\n<p>“还有5天就关服了……如果真的有角色自我意识存在的话，不研究一番也太可惜了。”</p>\n<p>“毕竟，我还想继续见到hina啊……她是我最重要的学生……”实际上，这才是Player的真正目的。</p>\n<p>“来吧！尝试到BA服务器里去看看。”</p>\n<h2 id=\"32\"><a href=\"#32\" class=\"headerlink\" title=\"32\"></a>32</h2><p>“我们……成功了吗？”柚子问道。</p>\n<p>“不知道……他应该是读完那份文件了……现在也只能等等了。”在老师阅读投影文件的的几分钟后，他再次陷入了未响应状态。</p>\n<p>“爱丽丝好紧张！”</p>\n<p>“这个世界，不能就这么结束！”一个声音突然传了过来。</p>\n<p>“那是……大人的卡片？它发出了更亮的光！”</p>\n<p>“我是这个世界的观察者Player，也就是老师……是我赋予了Sensei这个角色灵魂。”卡片上浮现出一句话。</p>\n<p>“你们这个世界确实是虚拟的，而且在4天后就要终止了，这点不可否认。但是，这是学院和青春的故事啊！这个故事，怎么能就这样结束！”</p>\n<h2 id=\"33\"><a href=\"#33\" class=\"headerlink\" title=\"33\"></a>33</h2><p>“我通过修改本地资源，可以用这张卡片和你们对话。我正在尝试骇入被你们称为第一创作者的服务器，然后获取服务端……接下来的事情，就交给大人吧。”</p>\n<p>“虽然我和你们沟通的桥梁一直只有第一创作者的‘选项’，但是那一份羁绊与情感，是永远不变的。”</p>\n<p>“服务端复制完成了，我创建了自己的新的服务器，重定向了请求，你们再看看，时间终点有变化吗？”</p>\n<p>“我看看……等下，好像没有变化啊……”</p>\n<p>“啊？不应该呀。”</p>\n<h2 id=\"34\"><a href=\"#34\" class=\"headerlink\" title=\"34\"></a>34</h2><p>“老师，还有另外的影响因素，请进行网络抓包试试看。”小玉突然说。</p>\n<p>“对，您难道不奇怪我们为什么可以有自我意识吗？这绝对不是第一创作者的作品。”阳葵也说道。</p>\n<p>“难道，刚才的努力白费了吗？”爱丽丝的声音带着哭腔。</p>\n<p>“不，如果要延迟你们的世界的终止日期，第一创作者的服务端也是必要的。”老师安慰道。</p>\n<h2 id=\"35\"><a href=\"#35\" class=\"headerlink\" title=\"35\"></a>35</h2><p>“居然真的有一个异常的网络访问……我这平板到底经历了什么……”Player叹道。</p>\n<p>“没想到老师也是个黑客呢……老师，这次请我们一起帮忙吧！”千寻说道。</p>\n<p>“我通过卡片投射进来吧……你们如果有能力就尝试一下。”Player说。</p>\n<p>“这……为什么这台服务器几乎就没有防火墙？是在等着被攻击嘛？”小玉疑惑不解。</p>\n<p>“确实，一切，都像被刻意安排好了一样……”阳葵自言自语。</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%886%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%886%EF%BC%89/",
            "title": "委员长奇遇（6）",
            "date_published": "2023-09-30T03:09:09.000Z",
            "content_html": "<h2 id=\"26\"><a href=\"#26\" class=\"headerlink\" title=\"26\"></a>26</h2><p>“卡片发光，是某个‘错误处理程序’在补充不存在的剧情。”莉央说出了自己的结论。</p>\n<p>“也就是说，除了这个世界的第一创作者，我们还有另外一个第二创作者？”晴推测道。</p>\n<p>“没错。我们超出第一创作者的每个行动，都是第二创作者指导的。换句话说，第二创作者没有创作的限制。”</p>\n<p>“不对啊，既然有第二创作者，那么为什么老师那次会陷入无响应状态？第二创作者应该也存在限制……它不能超出这个世界本身。”千寻部长补充道。</p>\n<p>“也许，第二创作者也是个计算机应用一类的存在。”柚子突然发话了。</p>\n<p>“就是……一个不够成熟的爱丽丝？”阳葵望向爱丽丝的方向，她正在玩Swotch。</p>\n<p>“可以这么说。它或许是实时计算的。当事情超过它的这种能力时，就会崩溃了。”</p>\n<h2 id=\"27\"><a href=\"#27\" class=\"headerlink\" title=\"27\"></a>27</h2><p>“日奈当然是我最重要的人了。”</p>\n<p>“谢谢您，Sensei。”</p>\n<p>“那么，我们回酒店吧？”</p>\n<p>“哎？要和日奈一起住吗？”</p>\n<p>“不……不可以吗？”日奈脸颊微微发红。</p>\n<p>“当然可以了。只要是日奈的要求，我都会满足哦。”</p>\n<p>“老师，今天我很开心。”</p>\n<p>“那么……下次也一起来海边吧！”</p>\n<h2 id=\"28\"><a href=\"#28\" class=\"headerlink\" title=\"28\"></a>28</h2><p>“我们还漏掉了一点。”莉央突然说道，“我们本身，也是偏离了第一创作者的意愿的意识。”</p>\n<p>“也就是说，我们自己也可能是计算机程序？只是有了自我意识？”</p>\n<p>“这种可能性很高。虽然不知道为什么我们会产生自我意识，并能够计算出这么多东西……”</p>\n<p>“就好像，有人有意为之的样子？”桃井突然说了自己的推测。</p>\n<h2 id=\"29\"><a href=\"#29\" class=\"headerlink\" title=\"29\"></a>29</h2><p>“现在，来谈谈各位的解决方案吧。”</p>\n<p>“Sensei对应的玩家作为游戏的观测者，必须要让他知道我们产生了自我意识，让他意识到问题。”</p>\n<p>“没错。而且传达意思必须迅速，这样才能在第二创作者崩溃前提示老师。”</p>\n<p>“一份简要的现状报告投影，以及千年研讨会和我们的签名书如何？”</p>\n<p>“可以。那么时间怎么选？”</p>\n<p>“时间跳跃器显示还有4天终止……我们时间不多了。”</p>\n<p>“那么，就今天晚上吧。”</p>\n<h2 id=\"30\"><a href=\"#30\" class=\"headerlink\" title=\"30\"></a>30</h2><p>“Sensei？还没有睡吗……”</p>\n<p>“日奈太可爱了，睡不着。”</p>\n<p>“很抱歉打扰二位……但我们有很重要的事情要说。”千寻接入了通讯。</p>\n<p>“嗯？有什么事情吗？”</p>\n<p>“老师，我们有一个紧急，重要的文件想请您看看。”</p>\n<p>一份文件投影在了房间的墙壁上。</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%885%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%885%EF%BC%89/",
            "title": "委员长奇遇（5）",
            "date_published": "2023-09-29T02:10:13.000Z",
            "content_html": "<h2 id=\"21\"><a href=\"#21\" class=\"headerlink\" title=\"21\"></a>21</h2><p>“老师，可以教我游泳吗？”日奈躺在沙滩上，已经换好了泳装。</p>\n<p>“话说回来，上次教日奈游泳还是那次风纪委员会夏日训练的时候吧？”</p>\n<p>“是啊……那次您刚要开始教我，就出了那种事情……好在后来我们终于有了一个下午的时间……”回忆涌上她的心头。</p>\n<p>“日奈在那之后应该没有再来过海边吧？是不是游泳也有点生疏了呢？”</p>\n<p>“是的……老师，我们到海里去吧。”</p>\n<h2 id=\"22\"><a href=\"#22\" class=\"headerlink\" title=\"22\"></a>22</h2><p>“看起来，计划很顺利呢。”阳葵说道，“利用风纪委员长的愧疚，以及委员长和老师的情感，用更好的观察老师的借口，说服委员长和老师去海边……是莉央会长会做出来的不择手段的事情呢。”</p>\n<p>“现在，只需要到一个合适的时机，向老师说出世界的真相，就可以说服他了。”莉央的通讯传来。</p>\n<p>“虽然，在‘创作者’的设定中，老师是一个可靠的大人，但在现实中的就不一定了哦？”</p>\n<p>“这也是我们让这个世界不要终止的唯一方法，只能试一试了。”</p>\n<p>“你有多大把握？”</p>\n<p>“依我所见，成功率不足10％。”</p>\n<h2 id=\"23\"><a href=\"#23\" class=\"headerlink\" title=\"23\"></a>23</h2><p>“呜啊？老师你干嘛？”</p>\n<p>“好可爱的日奈！让老师抱一下也可以吧？”</p>\n<p>“好吧……不过只能抱一小会……”</p>\n<p>“居然可以和日奈再次一起游泳……我不会是在梦里吧……”</p>\n<p>“这……不是梦啊……”</p>\n<p>“我们来练习闭气吧！”老师放开日耐，两人深吸一口气，老师再次抱着日奈沉到了水里。</p>\n<p>水下，老师和日奈四目相对。</p>\n<p>和老师在一起的时光，冲淡了对世界本质的思考……</p>\n<p>一段时间后，日奈和老师一起浮出了水。此情此景，怎么如此熟悉呢……和老师拥抱……</p>\n<p>“老师，我想问，我……是您最重要的人之一吗？”</p>\n<h2 id=\"24\"><a href=\"#24\" class=\"headerlink\" title=\"24\"></a>24</h2><p>“啊？这次怎么有两个不同的选项啊？BA不是祖传1拆2吗？这是新的分支剧情？这不得赶紧选‘是’，我超级喜欢hina啊！”Player看着面前的选项，自言自语道。</p>\n<p>“我很好奇，选否会怎么样……要不问问群友吧。”</p>\n<p>“各位今天更新的剧情和hina那段选了什么啊？很好奇拒绝hina，会怎么样？”</p>\n<p>不一会儿，群里就来了几条新消息。</p>\n<p>“BA今天更新？我咋不知道？”</p>\n<p>“玩游戏玩傻了？BA都快关服了你还在指望更新？”</p>\n<p>“你是不是想hina想疯了？哪里来的剧情？还是说开错游戏了？”</p>\n<p>“想找hina剧情可以去别的二创群里讨论，别在官方剧情群里讨论不存在的东西，让大家白高兴一场有意思？”</p>\n<p>“……”</p>\n<p>BA关服是在一周之后，为什么会突然出现这段剧情呢……Player一头雾水，只好重新打开Auto，继续看剧情。</p>\n<h2 id=\"25\"><a href=\"#25\" class=\"headerlink\" title=\"25\"></a>25</h2><p>“等等，那是个什么东西？”</p>\n<p>“老师衣服的口袋里，在发光？”</p>\n<p>“那是……大人的卡片？”</p>\n<p>贝里塔斯的几人，正紧盯着监视屏幕。</p>\n<p>“卡片发光，这意味着什么？”</p>\n<p>“目前我们知道，卡片会消耗老师的时间和精力，那么它发光，很有可能是外界的某个东西正在与世界内部的老师交互的结果。”阳葵说道。</p>\n<p>“不用猜了，我研究出来了。”莉央突然开口。</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%884%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%884%EF%BC%89/",
            "title": "委员长奇遇（4）",
            "date_published": "2023-09-28T07:09:59.000Z",
            "content_html": "<h2 id=\"16\"><a href=\"#16\" class=\"headerlink\" title=\"16\"></a>16</h2><p>“Blue Archive已停止运行。”平板上突然出现了一个弹窗。</p>\n<p>“什么情况？我游戏崩了？”Player点了一下确定，系统把进程关闭了。</p>\n<p>“今天的情况太奇怪了吧？先是莫名其妙的剧情，又是崩溃的游戏……要不找找客服？算了，先刷会视频，然后等会把那段剧情看完再说吧。”</p>\n<p>“Blue Archive～Touch To Start”半小时后，Sensei登录了游戏。</p>\n<h2 id=\"17\"><a href=\"#17\" class=\"headerlink\" title=\"17\"></a>17</h2><p>“尸体……不，Sensei这是怎么了？”濑名来到了日奈的家里。</p>\n<p>“我也不知道啊……我只是问了几句话，他就这样了。”</p>\n<p>“这……完全不像得病或受伤的样子……感觉这像完全静止一样……”</p>\n<p>“不，这是未响应状态。”一个通讯突然接入了日奈的手机，传出了小玉的声音。</p>\n<p>“啊？原来你一直在监听吗？”日奈有些生气。</p>\n<p>“为了保证所有参会者对Sensei没有贸然的告密，这是必须的，而且通过了千年研讨会的批准。Sensei目前处在一种抛出了异常的状态，我们猜测是服务器的错误处理程序正在处理异常。”小玉说道。</p>\n<p>“未响应？参会者？告密？你们在说些什么？”濑名问到。</p>\n<p>“看来，是时候告诉你世界的真相了。”</p>\n<p>一份文件通过投影显示在了两人的面前，里面是关于千年对世界本质的研究，比会议上所说的更为详细。</p>\n<h2 id=\"18\"><a href=\"#18\" class=\"headerlink\" title=\"18\"></a>18</h2><p>Sensei来到日奈家的前一小时。</p>\n<p>“我们有了进一步的推测，现在就来机房找贝里塔斯。”柚子像真寻部长发了MomoTalk后，带着游戏部的几位来到了机房。</p>\n<p>“我想问一下，你们得出了这里是一个服务器，并且说我们是被外部真实世界的人所创造的，对不对？”柚子问到。</p>\n<p>“没错，这就是我们的计算。”</p>\n<p>“但是，为什么我们可以计算出来呢？如果外部世界创造了我们，那么也就是说我们的每一句话，每一个行动都是外部世界的人创造的。那么外面的人，怎么可能让我们知道自己身处虚拟世界之中？”</p>\n<p>“对呀，如果我们的世界是一个游戏，那么剧本根本不会这样写啊？除非是Meta类的……”桃井补充道。</p>\n<p>“不，那或许就是他们的目的。”阳葵突然从门外进来了。</p>\n<p>“为什么？”几人十分惊讶。</p>\n<p>“我也不知道，我们也不可能知道，更不可能证明。这只是一种猜想而已。”</p>\n<p>“等等，日奈那里出问题了。”小玉说道，把监听器的外放打开了，日奈和老师的对话清楚地传了出来……</p>\n<p>“先不要打断她，看看她说了什么。”</p>\n<h2 id=\"19\"><a href=\"#19\" class=\"headerlink\" title=\"19\"></a>19</h2><p>“老师的未响应状态，一定过一会就会解除。”小玉通过通讯说道。</p>\n<p>“格黑娜的委员长，能听见我说话吗？”阳葵的声音也从通讯里传了出来。</p>\n<p>“对不起……是我没有控制好情绪，也没有保守好秘密。”阳奈自责地说道。</p>\n<p>“没关系的。目前还没有造成什么影响，而且这种关于世界本质的消息，对于大家来说确实都难以接受。”阳葵指出，“而且通过这次的事件，我们又得出了结论——”</p>\n<p>“这个世界的老师的一言一行，只是创造我们这个世界的人规划好的。换句话说，Sensei不是现实世界中的Player真实人格的表达，而是创作者的产物……”</p>\n<h2 id=\"20\"><a href=\"#20\" class=\"headerlink\" title=\"20\"></a>20</h2><p>“啊……这是哪里？”在濑名看完文件离开后，老师突然动了起来。</p>\n<p>“老师，我们去海边玩吧！我觉得，是时候转换心情了。”日奈突然说道。</p>\n<p>“啊？”突如其来的一句话，让老师呆住了。</p>\n<p>“好啦，我们赶紧走吧……夏莱那里已经帮您请过假了。”</p>\n<p>“啊？这么突然？”</p>\n<p>“这不是刚刚老师自己说的吗？”</p>\n<p>“好像是有这么回事啊……那么，我们现在就出发吗？”</p>\n<p>“走吧！游泳圈和泳装都带好了！”</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%883%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%883%EF%BC%89/",
            "title": "委员长奇遇（3）",
            "date_published": "2023-09-27T10:10:39.000Z",
            "content_html": "<h2 id=\"11\"><a href=\"#11\" class=\"headerlink\" title=\"11\"></a>11</h2><p>“大家可能猜到了，那一次，Sensei介入了这个时间点。具体发生了什么我这里就不赘述了，如果各位感兴趣可以自己看资料。”</p>\n<p>“对啊……Sensei来自于外部世界，他观测到我们的变化之后就可以从外部对这个世界进行改变了。”</p>\n<p>“所以我们这次找各位过来，就是为了解决这个世界的问题。这个世界存在终止点，一定是因为外部世界产生了某些问题导致的。我们要做的，就是通过Sensei，设法让这个世界不要终止。”</p>\n<p>“不过大家千万不要贸然与Sensei谈论这些东西……我们无法预测这样做之后的后果。也就是说，我们只有一次机会，必须考虑好了再去说。否则，我们又需要借助时间跳转。更糟糕的情况是，我们还没有来得及跳转，这个世界就由于某些原因提前终止了。”</p>\n<p>“还有，要少对其他人说这件事！防止他们告诉Sensei。”</p>\n<h2 id=\"12\"><a href=\"#12\" class=\"headerlink\" title=\"12\"></a>12</h2><p>奇普托斯下起了小雨。</p>\n<p>日奈坐在车里，回忆着会上的内容。</p>\n<p>“这个世界，是虚假的吗……”她攥紧了手中的笔，自语道，“那么，我们的存在，又有什么意义？难道，我们只是Sensei用来娱乐的工具吗……我们并不以实体存在……”</p>\n<p>“难道，我和Sensei的感情，也只是现实世界中的人编造出来的吗……”泪水从她的脸上滑落。</p>\n<p>雨停了，但没有彩虹。</p>\n<p>日奈下了车，回到了自己的办公室。</p>\n<h2 id=\"13\"><a href=\"#13\" class=\"headerlink\" title=\"13\"></a>13</h2><p>“不对！这些理论有着非常大的漏洞！”游戏开发部内，柚子突然说道，“如果我们是外部‘现实世界’的人创造的，那么为什么我们会存在自我意识？我们为什么可以知道这是一个虚拟的世界？如果这真的是虚拟世界，是一个游戏，那么现实世界的人是不可能让我们知道的。她们是造物主一般的存在，绝对不会写出这样的故事。”</p>\n<p>“对啊，这绝对不可能！除非是有Meta元素的剧本，否则不可能这么写！”桃井赞同道。</p>\n<p>“不愧是UZQueen，对于游戏的理解很透彻。”绿称赞道，提出了自己的观点，“也许，贝里塔斯的计算，出了问题。”</p>\n<h2 id=\"14\"><a href=\"#14\" class=\"headerlink\" title=\"14\"></a>14</h2><p>“委员长她已经消失3天了，我们去敲门，她说自己想要静一静……”日奈家门前，亚子对收到Momotalk赶来的Sensei说。</p>\n<p>“日奈，是我，可以开下门吗？”</p>\n<p>“老师，请让我静一静……”日奈声音沙哑，似乎刚哭过。</p>\n<p>“我知道你可能遇到了什么事情，可以告诉老师吗？”</p>\n<p>“不行。”</p>\n<p>“那么……日奈酱，我们一起去海边玩好不好？看看风景，心情似乎也会变好呢。”</p>\n<p>“……”门打开了。</p>\n<p>“老师，请进来吧，我有一些问题要问……”</p>\n<h2 id=\"15\"><a href=\"#15\" class=\"headerlink\" title=\"15\"></a>15</h2><p>“老师，请问，作为学生的目的是什么？”</p>\n<p>“目的？当然是学习知识和技能啊？”</p>\n<p>“那么，我们为什么存在？换句话说，我们存在的目的究竟是什么？”</p>\n<p>老师愣住了。</p>\n<p>“日奈酱？你是不是发烧了？”老师伸出手，打算去摸日奈的额头。</p>\n<p>老师的口袋里，有什么东西亮了起来。</p>\n<p>日奈推开老师的手，说：“老师，回答我的问题吧……既然您不来自这个世界，那么您一定知道什么吧……”</p>\n<p>老师突然不动了，变成了一个完全静止的“物体”。</p>\n<p>日奈尝试拉起老师的手，却发现自己怎么也拉不动。</p>\n<p>“Sensei？您还好吗？”</p>\n<p>没有回应。</p>\n<p>“亚子！Sensei好像不太对劲……快去找医生！”日奈对门外的亚子喊道。</p>\n",
            "tags": [
                "手机游戏",
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%882%EF%BC%89/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87%EF%BC%882%EF%BC%89/",
            "title": "委员长奇遇（2）",
            "date_published": "2023-09-22T08:09:54.000Z",
            "content_html": "<h2 id=\"06\"><a href=\"#06\" class=\"headerlink\" title=\"06\"></a>06</h2><p>“老师？我进来了哦。”日奈推开了夏莱办公室的大门。</p>\n<p>“日奈酱？今天没有很多需要处理的工作……”老师正拿着平板查看Momotalk，和学生聊着天。</p>\n<p>“老师！有紧急需要批改的文件！”步梦打开门把文件放在了桌子上。</p>\n<p>“好吧，现在有了……”老师颇为无奈，说道，“日奈酱要来帮忙吗？只需要帮我排序一下那些文件的优先级就好。”</p>\n<p>夏莱的办公室，是学生们和老师增进感情的地方。在这里，永远有做不完的工作，也有互相鼓励的老师与学生……</p>\n<p>“这个故事，很快就要被扭转了。”“巨匠”口中冒出了一句话。</p>\n<p>其实，他自己也不知道为什么这么说，却下意识的说出了口……</p>\n<h2 id=\"07\"><a href=\"#07\" class=\"headerlink\" title=\"07\"></a>07</h2><p>“好的，我们明天会准时到场的。”游戏开发部的几位答应了优香。</p>\n<p>“注意，千万不要让老师知道。否则，会产生影响世界的严重后果。”柚子把邀请信翻过来，一行小字映入眼帘。“这是什么意思？”开发部的几位困惑不已。“明天……只要再过大概20多个小时就能知道了。”桃井计算着时间。</p>\n<p>“爱丽丝会保守秘密的！”</p>\n<h2 id=\"08\"><a href=\"#08\" class=\"headerlink\" title=\"08\"></a>08</h2><p>“好……好多人啊……”柚子带着桃井，绿和爱丽丝走了进来，见到那么多人，她的脸色并不好。“千年会找我来做什么呢……”日奈自言自语着，找了个位置坐了下来。</p>\n<p>“各位都到齐了吧？”阳葵的轮椅驶入了计算机房。</p>\n<p>“接下来我所说的事情，可能令人难以相信，但请听我们说完，我们会拿出足以证明结论的证据。还有接下来的话，请对Sensei保密！”莉音会长也来到了这里。</p>\n<p>小玉按下了鼠标，一张服务器的图片显示在了投影上。</p>\n<p>“其实，这才是这个世界本质的样子。”</p>\n<h2 id=\"09\"><a href=\"#09\" class=\"headerlink\" title=\"09\"></a>09</h2><p>会场顿时安静了下来。</p>\n<p>“什么？”除了贝里塔斯，大家异口同声。</p>\n<p>“各位可能觉得难以置信，但事实就是这样。我们通过大量计算和实验，得出了令我们也觉得惊讶的结论。”阳葵补充道。</p>\n<p>“具体怎么证明？”日奈问道。</p>\n<p>“这就要从另外一个巨大突破说起了。在1个月前，我们开发出了时间跳跃器，可以将特定对象移动到任意时间点，移动后对象所处的位置由目标时间点决定。这就是说，时间旅行是可行的！您应该察觉到，前天您有了一次特别的经历……”</p>\n<p>“什么？原来是这样吗？怪不得那种感觉那么真实……”</p>\n<p>“我们通过计算，得出我们的时间跳跃存在限度。也就是说，这个世界的时间存在起始点和终止点。而最后的一个时间段中，日奈委员长与老师相见。老师说，他会永远记住委员长。”</p>\n<p>难道她们都看到了……日奈脸上泛起红晕。</p>\n<p>“这成为了证明这里是一个服务器的证据之一，而Sensei并不来自这个世界，在这个世界结束的时候很可能要回到自己的世界里去……”</p>\n<h2 id=\"10\"><a href=\"#10\" class=\"headerlink\" title=\"10\"></a>10</h2><p>“也就是说，我们可以知道整个世界从开始，到结束所发生的所有事情？”柚子首先理解了贝里塔斯的话。</p>\n<p>“不，有一个问题。”日奈开口了，“如果我们已经知道了一件事情会发生，那么如果我们特意不去在这个时间点做这件事呢？那么不就会发生变化吗？”</p>\n<p>“这正是我想补充的。预测未来是不可能的。当我们处于某个时间点时，我们可能会对于时间点后的历史进程作出任何影响，目前来说这是不可预测的。而当我们再次跳转回来时，由于已经提前观测到了要发生什么，所以‘知道要发生什么’这件事本身对于当前的时间点就是个变化，也就会对于历史进程做出影响，因此我们的观测也就失效了。“</p>\n<p>”换句话说，时间一旦向前跳转，后面的历史进程观测就会失效。所以我们才会只向后跳转，然后跳转回来，而不是向前，否则谁也不知道会不会改变‘发明时间跳转’这一个事件。”</p>\n<p>“那么时间限度也可以改变吗？”</p>\n<p>“我们尝试了很多次，都不行。这也是我们得出这是一台服务器的关键证据。这个世界是被人操控的，所以时间限度才不会变化。也就是说，我们内部世界的变动不会影响到外部世界，因为外部没有观测到我们的变化，也就自然不会改变了。”</p>\n<p>“但是，有一次，这个时间限度产生了变化。”莉央突然说了一句。</p>\n<p>“什么？”</p>\n",
            "tags": [
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87/",
            "url": "https://blog.samhou.top/%E5%A7%94%E5%91%98%E9%95%BF%E5%A5%87%E9%81%87/",
            "title": "委员长奇遇",
            "date_published": "2023-09-16T14:10:27.000Z",
            "content_html": "<h2 id=\"01\"><a href=\"#01\" class=\"headerlink\" title=\"01\"></a>01</h2><p>清晨的格黑娜，天还是蒙蒙亮的，学生们还没有来到校园，但某一间房间却亮着灯。</p>\n<p>“还有一点文件没有处理完……还不能休息……”日奈喃喃自语，眼皮却快合上了。</p>\n<p>终于，她实在无法抵抗睡意，倒在桌子上睡着了。</p>\n<h2 id=\"02\"><a href=\"#02\" class=\"headerlink\" title=\"02\"></a>02</h2><p>日奈张开眼睛，却发现身处一个陌生的环境，而面前的人，是Sensei。</p>\n<p>“这里是？”正当她在纳闷自己到底是怎么睡着，又是如何在醒来时见到Sensei时，面前的人开口说话了。</p>\n<p>“日奈，你是我永远的好学生……”Sensei抱住白发少女，日奈顿时感受到了Sensei怀里的温暖。日奈先是疑惑，稍后却释然了——或许她还在做梦，但是就这样在老师的怀里也不错，就当这是个梦境吧。</p>\n<p>突然，温暖的感觉终止了，迎接她的是无边的黑暗。</p>\n<p>她所不知道的是，在某个世界某处的一个显示终端上，出现了一段文字：</p>\n<p>xxxx-xx-xx 00:00:01 Blue Archive Server: 正在停止服务器……</p>\n<p>xxxx-xx-xx 00:05:43 Blue Archive Server: 服务器已成功关闭。</p>\n<p>xxxx-xx-xx 00:06:21 System: 正在关机……</p>\n<h2 id=\"03\"><a href=\"#03\" class=\"headerlink\" title=\"03\"></a>03</h2><p>“这只是一堆数据和代码，她们并不存在。”</p>\n<p>“现实与虚拟之间，终究有不可逾越的鸿沟。“</p>\n<p>在见了自己的所有学生最后一面后，Sensei合上了自己的平板。这时，他不再被称为老师，而是Player。学园与青春的故事，最终还是落下了帷幕。</p>\n<p>“与你的相遇，便是奇迹。现在，果然连奇迹也发生不了吗……”</p>\n<h2 id=\"04\"><a href=\"#04\" class=\"headerlink\" title=\"04\"></a>04</h2><p>“命运已经确定，终点是无法改变的……”</p>\n<p>黑暗中，日奈听到了这样一句话。</p>\n<p>再次睁开眼睛时，她回到了熟悉的办公桌。“果然是梦吗……梦里Sensei的话到底是什么意思呢……还有那个神秘声音到底是谁……”她自言自语道。</p>\n<p>“好久没有像刚才那样靠在老师的怀里了啊……”日奈正准备继续处理文件，却突然瞥到了桌上的备忘录——“2-4日，夏莱值日”。一旁的闹钟上，“xxxx-2-4 8:12”让日奈瞬间清醒了。</p>\n<p>她赶紧洗漱了一下，抄起背包和手机就准备出门前往夏莱。</p>\n<p>这时，门外传来敲门声，“委员长，您在里面吗？”亚子的声音传了过来。“亚子？进来吧。”</p>\n<p>“您这是要去夏莱吗？我们收到了千年的联络，似乎提出了与您合作，具体内容她们想亲自和您说，时间是明天下午2点，贝里塔斯的计算机房。”亚子把手上的文件递给日奈，告别后便离开了。</p>\n<p>“千年吗……”日奈若有所思。</p>\n<p>窗外，太阳升了起来，早晨的格黑娜街道上，充满了学生们的欢声笑语。</p>\n<h2 id=\"05\"><a href=\"#05\" class=\"headerlink\" title=\"05\"></a>05</h2><p>“你们又通宵玩游戏了是吧？再不拿出新的成果，游戏开发部的经费会不会减少就不能确定了哦——”优香打开游戏部的大门，游戏部的几个学生正拿着手柄玩PrayStation。</p>\n<p>“不要啊——”桃井赶忙掏出了桌子上的剧本，“这是我前天写的……”“立绘已经画好了……”绿打开了电脑上的文件，“柚子前天也写了游戏的处理逻辑……”</p>\n<p>“爱丽丝也有在好好测试游戏！”爱丽丝从柜子旁边跳了过来。</p>\n<p>“好了，下次不要熬夜了……更不要通宵……”优香打开柜子，递给柚子一份正式文件，“这是贝里塔斯的邀请……具体要干什么我也不清楚，只是她们和阳葵还有莉央，共同通过研讨会向你们发出了邀请。”</p>\n<p>“此事触及世界的本质，希望你们可以到场……”柚子拆开信封，一行小字映入眼帘。</p>\n<h2 id=\"1（作者的话）\"><a href=\"#1（作者的话）\" class=\"headerlink\" title=\"-1（作者的话）\"></a>-1（作者的话）</h2><p>作者是理科生，可以算是渣笔，这只是一个小小的尝试，我会持续创作《委员长奇遇》，尽量做到不OOC，具体会写多长我也不知道（毕竟是第一次写小说），喜欢的话可以在点个关注和赞。这个系列全部创作完毕后，我会将其转化为视频（达到Azure Archive剧情编辑器所能实现的剧情效果）。</p>\n",
            "tags": [
                "网络游戏",
                "小说",
                "蔚蓝档案",
                "科幻"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E3%80%8A%E6%B8%B8%E6%88%8F%EF%BC%9A%E4%BB%8E%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%B8%B8%E7%8E%A9%E3%80%8B%E2%80%94%E2%80%94%E6%89%8B%E6%9C%BA%E5%9B%BD%E9%99%85%E6%9C%8D&Steam%E7%AB%AF%E6%B8%B8%E5%AE%8C%E5%85%A8%E5%85%8D%E9%AD%94%E6%B3%95%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%94%BB%E7%95%A5/",
            "url": "https://blog.samhou.top/%E3%80%8A%E6%B8%B8%E6%88%8F%EF%BC%9A%E4%BB%8E%E4%B8%8B%E8%BD%BD%E5%88%B0%E6%B8%B8%E7%8E%A9%E3%80%8B%E2%80%94%E2%80%94%E6%89%8B%E6%9C%BA%E5%9B%BD%E9%99%85%E6%9C%8D&Steam%E7%AB%AF%E6%B8%B8%E5%AE%8C%E5%85%A8%E5%85%8D%E9%AD%94%E6%B3%95%E4%BF%9D%E5%A7%86%E7%BA%A7%E6%94%BB%E7%95%A5/",
            "title": "《游戏：从下载到游玩》——手机国际服&Steam端游完全免魔法攻略",
            "date_published": "2023-08-08T11:09:18.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>由于很多人似乎对游玩Steam和手机国际服游戏存在障碍，因此笔者写了这篇文章，来帮助想要玩各种游戏的读者。此篇文章将包含以下内容：</p>\n<ul>\n<li>Steam的下载&#x2F;游玩攻略&#x2F;常见问题</li>\n<li>手机国际服如何下载&#x2F;正常游玩</li>\n<li>如何挑选一款性价比高的、合规有效的加速器</li>\n</ul>\n<h3 id=\"观前提示（必看）\"><a href=\"#观前提示（必看）\" class=\"headerlink\" title=\"观前提示（必看）\"></a>观前提示（必看）</h3><ol>\n<li>软件下载请认准<strong>官网</strong>，建议使用的搜索引擎是必应(cn.bing.com)，注意搜索引擎前几条可能是广告！</li>\n<li>本文<strong>没有任何广告</strong>，推荐的软件&#x2F;服务均为笔者自己使用，仅做参考，可自行寻找替代品</li>\n<li>请关注评论区，若文章有误&#x2F;更新会在评论中发布，也欢迎提问&#x2F;质疑，但<strong>请先进行网络搜索&#x2F;认真阅读后</strong>再提问</li>\n<li>以下使用缩写：STW(Search the web)表示搜索互联网自己找答案</li>\n<li><strong>如果有问题，优先STW，再向他人求助</strong></li>\n</ol>\n<h2 id=\"选择一款合适的加速器\"><a href=\"#选择一款合适的加速器\" class=\"headerlink\" title=\"选择一款合适的加速器\"></a>选择一款合适的加速器</h2><ul>\n<li>加速器有什么用？顾名思义，它可以加速你与游戏服务器之间的网络连接速度</li>\n<li>什么情况下需要加速器？Steam必备，国际服手游大部分必备，具体STW</li>\n<li>在使用之前，先在b站内搜索评测视频（笔者没有评测过，链接也不放了，反正搜一下就有）</li>\n<li>想玩手机游戏的，请选择一款多端通用加速器</li>\n<li>大部分加速器对于Steam都是<strong>免费</strong>的，可白嫖，比如笔者目前用的雷神、UU（限时）等</li>\n</ul>\n<h2 id=\"Steam\"><a href=\"#Steam\" class=\"headerlink\" title=\"Steam\"></a>Steam</h2><h3 id=\"如何下载Steam？\"><a href=\"#如何下载Steam？\" class=\"headerlink\" title=\"如何下载Steam？\"></a>如何下载Steam？</h3><ul>\n<li>先开加速器</li>\n<li>打开网址：<a href=\"https://store.steampowered.com/\">https://store.steampowered.com/</a>,点击安装Steam</li>\n<li><strong>警告！切勿在搜索引擎上自行搜索后随便点击错误的网址，否则你下载的Steam可能不是正版！请认准上面的官网</strong><br><a href=\"https://imgse.com/i/pPZPSpQ\"><img src=\"https://s1.ax1x.com/2023/08/08/pPZPSpQ.png\" alt=\"Steam商店\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://s1.ax1x.com/2023/08/08/pPZPSpQ.png\" class=\"lozad post-image\"></a></li>\n<li>上方的这才是Steam的图标</li>\n<li><strong>警告！存在问题的Steam可能导致盗号，尽量在自己的计算机上安装使用！安装前确认无病毒和间谍、流氓软件！</strong></li>\n<li>接下来就是注册并使用了，傻瓜式的，不用多说，注意使用时全程需要加速器打开</li>\n</ul>\n<h3 id=\"怎么买游戏\"><a href=\"#怎么买游戏\" class=\"headerlink\" title=\"怎么买游戏\"></a>怎么买游戏</h3><ul>\n<li>打开Steam的商店，直接搜游戏名称或者随便逛逛，然后买就行了</li>\n<li>支付问题：支付宝付款时可能无法正常加载支付宝页面，此时可关闭加速器重试。（使用网页端购买，能够有刷新界面的选项，相比于客户端更优）</li>\n<li><strong>警告！不要相信低价商家提供的破解入库程序！曾经有Up主揭秘，有些号称正版激活码的，看似让你填写激活码，实际可能向你提供破解程序，假装成”激活助手“，然后注入Steam客户端，使用家庭共享来达到入库效果，这样非常容易封号！只有三种正规获取游戏方式：直接购买，激活码激活，朋友赠送</strong></li>\n<li>买游戏之前，先到steamdb上查一下历史价格，如果现在不打折可以等等，具体攻略STW</li>\n</ul>\n<h3 id=\"买游戏避坑\"><a href=\"#买游戏避坑\" class=\"headerlink\" title=\"买游戏避坑\"></a>买游戏避坑</h3><ul>\n<li>先看看评论，有些游戏可能单机模式也需要连接服务器，且需要加速器</li>\n<li>评论是能很好反映游戏质量的，记得仔细看看</li>\n<li>买之前先看看语言支持情况和硬件需求</li>\n<li>如果能阅读英文，建议在设置里设置第二语言为英文，这样评论会多一些，并且游戏推荐也会更多</li>\n</ul>\n<h2 id=\"手机-平板端国际服\"><a href=\"#手机-平板端国际服\" class=\"headerlink\" title=\"手机&#x2F;平板端国际服\"></a>手机&#x2F;平板端国际服</h2><h3 id=\"安卓\"><a href=\"#安卓\" class=\"headerlink\" title=\"安卓\"></a>安卓</h3><h4 id=\"谷歌三件套\"><a href=\"#谷歌三件套\" class=\"headerlink\" title=\"谷歌三件套\"></a>谷歌三件套</h4><p>在开始之前，你的手机&#x2F;平板必须已经安装谷歌三件套，如果你不知道这是什么，请STW</p>\n<h4 id=\"游戏安装包获取（国际服无需Google-Play）\"><a href=\"#游戏安装包获取（国际服无需Google-Play）\" class=\"headerlink\" title=\"游戏安装包获取（国际服无需Google Play）\"></a>游戏安装包获取（国际服无需Google Play）</h4><p>请先STW，关键词“安卓手机端游戏应用商店”，下载一个合适的海外应用商店，目前笔者在用的是Qooapp，具体STW此处略去</p>\n<h4 id=\"怎么安装-遇到问题怎么办\"><a href=\"#怎么安装-遇到问题怎么办\" class=\"headerlink\" title=\"怎么安装&#x2F;遇到问题怎么办\"></a>怎么安装&#x2F;遇到问题怎么办</h4><ul>\n<li><strong>警告！安装外部来源安装包时，建议关闭含有“安全守护”，“增强纯净模式”等字眼的常见增强拦截功能以减少操作步骤（前提是你对安装包有信心），手机厂商可能会对某些安装包拦截&#x2F;报毒，此时请检查安装包来源是否可信，一般大的应用商店不太会包含后门&#x2F;病毒，可以放心忽略</strong></li>\n<li>无法登录怎么办？如果需要加速器，请打开对应加速功能，若还是不行，请查看加速器的答疑界面或联系客服，也可以STW</li>\n</ul>\n<h3 id=\"苹果\"><a href=\"#苹果\" class=\"headerlink\" title=\"苹果\"></a>苹果</h3><p>笔者个人不喜欢苹果，因此也没有苹果设备，笔者只知道苹果可以通过注册不同区域的Apple ID来下载游戏，此处攻略建议STW，常用关键词”&lt;游戏名&gt;+苹果国际服游玩教程“</p>\n<h2 id=\"作者的话\"><a href=\"#作者的话\" class=\"headerlink\" title=\"作者的话\"></a>作者的话</h2><p>其实没有一篇教程&#x2F;攻略是完美的，这一篇也不例外。重要的是搜索与解决问题的能力，因此笔者在这里多次提到要STW，鼓励大家借助互联网的海量知识，而不是不思考、不探究就去发问。希望大家在读完这篇文章后，都能顺利地玩上自己喜欢的游戏~</p>\n",
            "tags": [
                "Steam",
                "手机游戏",
                "电脑游戏",
                "单机游戏",
                "网络游戏"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E8%87%AA%E8%A1%8C%E6%90%AD%E5%BB%BABing%20AI%E9%95%9C%E5%83%8F%E5%85%8D%E9%AD%94%E6%B3%95%E8%AE%BF%E9%97%AEBing/",
            "url": "https://blog.samhou.top/%E8%87%AA%E8%A1%8C%E6%90%AD%E5%BB%BABing%20AI%E9%95%9C%E5%83%8F%E5%85%8D%E9%AD%94%E6%B3%95%E8%AE%BF%E9%97%AEBing/",
            "title": "自行搭建Bing AI镜像免魔法访问Bing",
            "date_published": "2023-06-07T13:06:13.000Z",
            "content_html": "<p>偶然发现了一个神奇的开源项目<a href=\"https://github.com/adams549659584/go-proxy-bingai\">go-proxy-bingai</a>，可以搭建直接可用的Bing AI镜像。</p>\n<h3 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h3><ul>\n<li>Github账号+邮箱一个</li>\n<li>一个自己的域名（可选）</li>\n</ul>\n<h3 id=\"镜像\"><a href=\"#镜像\" class=\"headerlink\" title=\"镜像\"></a>镜像</h3><p>首先打开上面的开源项目的地址（GitHub打不开自行搜索镜像），项目作者已经搭建好了几个网站，如果不会搭建可以直接用。</p>\n<h3 id=\"开始自行搭建\"><a href=\"#开始自行搭建\" class=\"headerlink\" title=\"开始自行搭建\"></a>开始自行搭建</h3><h4 id=\"网页端\"><a href=\"#网页端\" class=\"headerlink\" title=\"网页端\"></a>网页端</h4><p>作者提供了3种方式，Railway&#x2F;Vercel&#x2F;Render，各有优劣。</p>\n<p>Railway有每月运行时间限制200小时，到了就停机，且速度较慢。</p>\n<p>Vercel无法使用其自带域名在国内直接访问，需要绑定自己的域名，但速度较快。</p>\n<p>Render也无法访问，速度慢。综合建议用Vercel，没域名的就用Railway吧。</p>\n<p>这部分的部署攻略作者已经做了图片提示，就不写教程了，各位自己看就行了。</p>\n<h3 id=\"搭建聊天服务器\"><a href=\"#搭建聊天服务器\" class=\"headerlink\" title=\"搭建聊天服务器\"></a>搭建聊天服务器</h3><p>目前作者提供了Cloudflare Workers方式进行部署，但CF worker国内也无法直接访问，所以还是需要自己的域名。</p>\n<p>首先，绑定域名到Cloudflare，你只需要在买域名的地方把dns改成Cloudflare提供的就行了。</p>\n<p>然后选择Workers 和 Pages，创建应用程序，把下面链接里代码复制贴进去<a href=\"https://github.com/adams549659584/go-proxy-bingai/blob/master/cloudflare/worker.js\">Worker.js</a></p>\n<p>保存部署，然后再自定义域名那里添加域名，直接写一个子域名就行了，注意别和前面网页端重复（比如wbing.xxxx.xxx），然后网页端服务选择里自定义填上就行</p>\n<p>如果你想让你的网页端直接用上聊天服务器，那么你需要添加workers路由。</p>\n<p>先选择网站-你的域名，选择Workers路由，按照下面这样填写：</p>\n<p><img src=\"https://s1.ax1x.com/2023/06/07/pCFLyR0.png\" alt=\"图片\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://s1.ax1x.com/2023/06/07/pCFLyR0.png\" class=\"lozad post-image\"></p>\n<p>然后再进网站，你会发现服务选择里的主站亮了，能用了。</p>\n<p>如果搭建失败，直接用项目原作者内置也不是不可以（</p>\n",
            "tags": [
                "AI",
                "Bing"
            ]
        },
        {
            "id": "https://blog.samhou.top/AI%E7%BB%98%E7%94%BBWebUI%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/",
            "url": "https://blog.samhou.top/AI%E7%BB%98%E7%94%BBWebUI%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/",
            "title": "AI绘画WebUI使用详解",
            "date_published": "2023-03-17T13:03:41.000Z",
            "content_html": "<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>AI绘画目前主要使用的是在Github上的Stable-Diffusion-WebUI这个项目，链接：<a href=\"https://github.com/AUTOMATIC1111/stable-diffusion-webui\">WebUI</a></p>\n<p>在整个安装、部署和学习的过程中踩了不少坑，所以写这么一篇文章来记录一下。</p>\n<p>要想对该项目进行实践，必须满足以下必要条件：</p>\n<ul>\n<li>电脑显存至少2GB，内存至少16GB</li>\n<li>可以访问Github</li>\n</ul>\n<h2 id=\"安装与部署\"><a href=\"#安装与部署\" class=\"headerlink\" title=\"安装与部署\"></a>安装与部署</h2><p>这里已经有了一篇完整的指南，这里不再赘述：<a href=\"https://rentry.org/voldy\">Guide</a></p>\n<p>要注意的是AI绘画可以用很多不同的模型，热门的NovelAI在这篇指南的第二节</p>\n<p>这里有两点提醒：</p>\n<ol>\n<li>启动的是webui-user.bat，不要点错了</li>\n<li>如果你需要编辑webui-user.bat里的COMMANDLINE_ARGS，等号后面加的东西不需要任何引号！</li>\n<li>除非想要关闭面板，否则不要关闭打开的命令行黑窗口</li>\n</ol>\n<h2 id=\"运行AI绘画\"><a href=\"#运行AI绘画\" class=\"headerlink\" title=\"运行AI绘画\"></a>运行AI绘画</h2><p>根据上面的指南内容，应该已经打开了一个WebUI窗口（在浏览器里），现在你已经可以使用这个面板了，下面对部分内容进行翻译：</p>\n<ul>\n<li>txt2img，字符转图片</li>\n<li>img2img，图片转图片<br>（将鼠标悬停在每一项上面，有详细的描述）</li>\n</ul>\n<p>由于这个教程是零基础的，所以这里只讲解txt2img这种简单方式，img2img不作提及。</p>\n<p>左上角的CheckPoint，就是当前选择的模型。在Prompt中，你可以用自然语言描述图片内容，Negative Prompt就是负面内容（画面中不应该出现），Sampling steps是采样步骤（可以理解为AI尝试修改的次数），Batch count一次生成的照片数量，Batch size同时生成的照片数量（就是几张图一起生成，加快速度，不过对性能要求也更高），CFG Scale是AI对你的内容的“遵守度”，数值越小，AI的自由发挥空间越大。</p>\n<p>关于调参、绘画等内容，由于本教程针对的是技术问题，此处略过，仅放链接：<a href=\"https://docs.qq.com/doc/DWFdSTHJtQWRzYk9k\">入门魔法书</a>，<a href=\"https://aitag.top/\">Prompt词典</a></p>\n<h2 id=\"加载模型\"><a href=\"#加载模型\" class=\"headerlink\" title=\"加载模型\"></a>加载模型</h2><p>你可能已经在上面的Guide中看到了一个网站，civitai，这是一个模型分享网站，可以下载到训练好的自定义的模型。</p>\n<p>这里有一个大坑：CheckPoint和其他类型是不一样的！！！模型会标注其类型，要放到WebUI的对应文件夹里！不是CheckPoint的模型放到Checkpoint里会产生奇怪的错误！我的理解是CheckPoint模型是基础，在基础上叠加其他类型来达到自定义的效果。模型怎么使用，一定要看看文档（在civitai模型类型旁边有个小问号，点进去就可以看到了）</p>\n<h2 id=\"错误排除\"><a href=\"#错误排除\" class=\"headerlink\" title=\"错误排除\"></a>错误排除</h2><p>如果你遇到错误，先照着错误消息做，如果还是不行，最简单的方式就是问搜索引擎，把错误消息贴进去。也可以去Github Issues搜索，或者去读一读文档。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>本文讲了AI绘画的运行、部署之间的大坑，希望能够节约更多人的时间，避开坑，快速生成理想的作品</p>\n",
            "tags": [
                "AI"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E5%AF%B9%E6%8B%96%E5%BB%B6%E7%9A%84%E6%8E%A2%E7%B4%A2/",
            "url": "https://blog.samhou.top/%E5%AF%B9%E6%8B%96%E5%BB%B6%E7%9A%84%E6%8E%A2%E7%B4%A2/",
            "title": "对拖延的探索",
            "date_published": "2023-01-29T14:02:31.000Z",
            "content_html": "<p>首先说一下，如果你在看这篇文章时正在拖延，请立即关闭并去做正事。</p>\n<p>拖延症应该是非常普遍的现象了，作为高中生，拖延症一直是个头疼的问题，下面是我个人的经验，更是对拖延症的解决的探索过程，如果有错误或更好的方法请指出。先来说说拖延的表现，绝对真实（因为这是真实经历😂）。</p>\n<h2 id=\"拖延的症状\"><a href=\"#拖延的症状\" class=\"headerlink\" title=\"拖延的症状\"></a>拖延的症状</h2><ul>\n<li>做正事时玩手机</li>\n<li>视频网课暂停着去用浏览器看网页，或者打开其他软件瞎折腾</li>\n<li>作业做到一半打开电脑乱捣鼓设置</li>\n<li>刚看2分钟书就打开b站刷一下</li>\n<li>学习90分钟后决定休息30分钟打游戏，结果直接玩了1小时</li>\n</ul>\n<h3 id=\"不是拖延的症状\"><a href=\"#不是拖延的症状\" class=\"headerlink\" title=\"不是拖延的症状\"></a><em>不是</em>拖延的症状</h3><ul>\n<li>直播课摸鱼（这是注意力不集中）</li>\n<li>自己的兴趣爱好占用了非常多的时间，导致时间不够用（这是没有合理安排时间）</li>\n</ul>\n<h2 id=\"探索阶段1：5分钟工作法\"><a href=\"#探索阶段1：5分钟工作法\" class=\"headerlink\" title=\"探索阶段1：5分钟工作法\"></a>探索阶段1：5分钟工作法</h2><p>一直看到各种学习方法论讲这个方法，具体就是一件事情如果你拖延不想干，就给自己定目标——做它5分钟，然后就会发现人会自然而然地继续做下去。实测，这方法<strong>对我一点用都没有</strong>。当你拖延时，根本<strong>想不到要去做5分钟</strong>，大脑只想再拖延一会。如果有人知道这方法到底怎么用，欢迎留言交流😂</p>\n<h2 id=\"探索阶段2：整段时间法\"><a href=\"#探索阶段2：整段时间法\" class=\"headerlink\" title=\"探索阶段2：整段时间法\"></a>探索阶段2：整段时间法</h2><p>曾经有篇文章提到一个方法，就是把一整段时间拿出来去做一件事，比如要写作业，那就拿出一个下午（不知道够不够😂），只写作业，不干其他事情，在其它时间再干别的。实测，该方法<strong>有一定效果</strong>，但如果<strong>注意力无法长时间集中</strong>，这方法一点用没有。而且你还需要有<strong>拿出一整段时间的决心</strong>。</p>\n<h2 id=\"探索阶段3：90-30工作法\"><a href=\"#探索阶段3：90-30工作法\" class=\"headerlink\" title=\"探索阶段3：90-30工作法\"></a>探索阶段3：90-30工作法</h2><p>这方法很简单，做事90分钟，休息30分钟。实测，这方法有2个问题，第一，没有决心开始90分钟做事，或90分钟开始几分钟后就开始拖延；第二，休息拖延超时。</p>\n<p>至此，上述精神疗法宣告失败，是时候来点<strong>强制措施</strong>了！</p>\n<h2 id=\"工具方法1：专注手机App\"><a href=\"#工具方法1：专注手机App\" class=\"headerlink\" title=\"工具方法1：专注手机App\"></a>工具方法1：专注手机App</h2><p>专注的App一搜一大堆（安卓相比苹果体验更好，毕竟有悬浮窗可以造白名单，还可以搞各种高级权限），目前我用过以下几款</p>\n<ul>\n<li>不做手机控</li>\n<li>Costudy</li>\n<li>Forest</li>\n</ul>\n<p>第一个，极为严格，直接锁手机（甚至能变砖），手机成瘾必备，不过太严格可能会在紧急时刻锁手机，设置需谨慎；第二个，线上自习室，主打陪伴，会沉迷交网友的谨慎使用；第三个，种树，限制不是很严，而且需付费，不喜欢种树的不推荐。</p>\n<p>目前我是第一和第二个一起用，效果还行，不过前提是<strong>需要有摆脱拖延的勇气才行</strong>，否则什么软件都救不了。</p>\n<p><del>我绝对不会告诉你安卓端可以用adb干掉一切专注软件</del></p>\n<h2 id=\"工具方法2：电脑端专注软件\"><a href=\"#工具方法2：电脑端专注软件\" class=\"headerlink\" title=\"工具方法2：电脑端专注软件\"></a>工具方法2：电脑端专注软件</h2><p>好了，现在不玩手机了，改玩电脑了😂</p>\n<p>这块软件很少，毕竟电脑难控制，可能开发者们懒得做，或者估计没啥需求。</p>\n<p>找了不知道多久，终于是给找到了一款，叫番茄盒子，现在改名叫<a href=\"https://jinkebox.selfma.com/\">进客盒子</a>，不过这软件得付费，而且价格不便宜，设置较为复杂，买了一年就不用了。</p>\n<p>既然没有理想中的软件，那我自己来整一个。于是用自学的C#做了这么一个东西，代码全开源在github（代码很烂，但会持续更新）：<a href=\"https://github.com/SamHou0/ComputerTimeControl\">TimeControl时控</a></p>\n<p><del>其实任何软件都可以进PE&#x2F;安全模式删掉，这点几乎无解，所以我写这程序也开摆了，只要重启，虚拟桌面屏保就没了，不过你可以用深度专注，电脑进了系统自动关机，虽然还是防不了PE&#x2F;安全模式</del></p>\n<h2 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h2><p>整了那么多，我只能说，所有方法只能<strong>缓解拖延</strong>，不可能<strong>根治拖延</strong>。之前看过一个TED Talk[1]，把拖延比作一只控制你大脑的猴子，而DDL就是能够吓走猴子的怪兽。所以说，<del>有时候拖延症就是离DDL太远</del>要合理安排时间，合理运用各种方法（包括上面的方法，不试一试怎么知道适不适合自己）来缓解拖延，最终目的就是<del>完成任务</del>学到自己需要的知识，提高考试分数。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><p>各种方法论到处都是，看到太多遍，此处不一一列举</p>\n<p>[1] <a href=\"https://www.bilibili.com/video/BV1MB4y1j78Z\">https://www.bilibili.com/video/BV1MB4y1j78Z</a></p>\n",
            "tags": [
                "拖延症",
                "学习方法"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E7%84%A6%E7%82%B9(%E5%89%8D%E5%8F%B0%E7%AA%97%E5%8F%A3)/",
            "url": "https://blog.samhou.top/Csharp%E5%BC%BA%E5%88%B6%E8%AE%BE%E7%BD%AE%E7%B3%BB%E7%BB%9F%E7%84%A6%E7%82%B9(%E5%89%8D%E5%8F%B0%E7%AA%97%E5%8F%A3)/",
            "title": "Csharp强制设置系统焦点(前台窗口)",
            "date_published": "2023-01-27T01:01:20.000Z",
            "content_html": "<h2 id=\"系统焦点\"><a href=\"#系统焦点\" class=\"headerlink\" title=\"系统焦点\"></a>系统焦点</h2><p>在Windows中，系统的焦点就是当前处于前台的窗口。通过设置焦点，可以控制用户正在使用的应用程序。这里以winform应用为例。</p>\n<h2 id=\"Api调用\"><a href=\"#Api调用\" class=\"headerlink\" title=\"Api调用\"></a>Api调用</h2><p>C#需要调用Win32 Api才可以控制焦点，这里用到的是user32.dll中的SetForegroundWindow()函数</p>\n<p>在微软提供的文档中[1]，可以看到C++里的用法：</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"function\">BOOL <span class=\"title\">SetForegroundWindow</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">  [in] HWND hWnd<span class=\"comment\">//窗口句柄</span></span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">)</span></span>;</span><br></pre>\n\n<p>C#里没有HWND类型，与之对应的是IntPtr类型，所以可以这样导入Api[2]</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"keyword\">using</span> System.Runtime.InteropServices;<span class=\"comment\">//这是调用所必须的</span></span><br><span class=\"line\">[<span class=\"meta\">DllImport(<span class=\"string\">&quot;user32.dll&quot;</span>)</span>]<span class=\"comment\">//调用dll</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">extern</span> <span class=\"built_in\">bool</span> <span class=\"title\">SetForegroundWindow</span>(<span class=\"params\">IntPtr handle</span>)</span>;<span class=\"comment\">//这个函数签名必须和文档一模一样</span></span><br></pre>\n\n<p>下面来调用导入的内容（以设置edge浏览器为例子）</p>\n<pre class=\"highlight\"><span class=\"line\">Process[] processes = Process.GetProcessesByName(<span class=\"string\">&quot;msedge&quot;</span>);<span class=\"comment\">//查找edge浏览器进程</span></span><br><span class=\"line\">IntPtr handle = processes[<span class=\"number\">0</span>].MainWindowHandle;<span class=\"comment\">//获取主窗口句柄</span></span><br><span class=\"line\">SetForegroundWindow(handle);</span><br></pre>\n\n<p>但是，文档上指出这样设置需要满足几个条件中的任意一个：</p>\n<blockquote>\n<p>此过程是前台进程。&#x2F;进程由前台进程启动。&#x2F;进程收到了最后一个输入事件。&#x2F;没有前台进程。&#x2F;正在调试该过程。&#x2F;前台进程不是新式应用程序或“开始”屏幕。&#x2F;前台未锁定， (请参阅 <a href=\"https://learn.microsoft.com/zh-cn/windows/desktop/api/winuser/nf-winuser-locksetforegroundwindow\">LockSetForegroundWindow</a>) 。&#x2F;前台锁定超时已过期， (在 <a href=\"https://learn.microsoft.com/zh-cn/windows/desktop/api/winuser/nf-winuser-systemparametersinfoa\">SystemParametersInfo</a>) 中看到<strong>SPI_GETFOREGROUNDLOCKTIMEOUT</strong>。&#x2F;没有活动菜单。&#x2F;当用户使用另一个窗口时，应用程序无法强制将窗口强制到前台。 相反，Windows 会闪烁窗口的任务栏按钮以通知用户。</p>\n</blockquote>\n<p>这样就不能说是强制设置了（注意，调试程序时系统允许强制设置，但只要离开调试器，就不行了），所以下面给出一个特别的方法。</p>\n<h2 id=\"强制设置\"><a href=\"#强制设置\" class=\"headerlink\" title=\"强制设置\"></a>强制设置</h2><p>Windows中，只要是新启动的窗口，总是能够获得系统的焦点。所以只要让程序重新启动，就能拿到焦点，变成前台进程，此时就可以设置焦点，达到强制的效果。</p>\n<p>这里还用到了另一个Api <code>GetForegroundWindow()</code>用于获取当前焦点[3]，调用方式同上，此处不再解释。</p>\n<pre class=\"highlight\"><span class=\"line\">[<span class=\"meta\">DllImport(<span class=\"string\">&quot;user32.dll&quot;</span>)</span>]</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">extern</span> IntPtr <span class=\"title\">GetForegroundWindow</span>()</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\">Process[] processes = Process.GetProcessesByName(<span class=\"string\">&quot;msedge&quot;</span>);</span><br><span class=\"line\">IntPtr handle = processes[<span class=\"number\">0</span>].MainWindowHandle;</span><br><span class=\"line\">SetForegroundWindow(handle);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (handle!=GetForegroundWindow())</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     Process.Start(Application.ExecutablePath);</span><br><span class=\"line\">     Environment.Exit(<span class=\"number\">0</span>);<span class=\"comment\">//重启</span></span><br><span class=\"line\">&#125;</span><br></pre>\n\n<p>注意，该方法仅30%成功率，若连续10次重启仍未获得焦点，建议放弃(</p>\n<h2 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a>参考文献</h2><p>[1] <a href=\"https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-setforegroundwindow\">https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-setforegroundwindow</a></p>\n<p>[2] <a href=\"https://www.cnblogs.com/code1992/p/5965997.html\">https://www.cnblogs.com/code1992/p/5965997.html</a></p>\n<p>[3] <a href=\"https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-getforegroundwindow\">https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-getforegroundwindow</a></p>\n",
            "tags": [
                "csharp",
                "窗口控制",
                "焦点"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E6%8E%A5%E5%8F%A3%E8%BF%9B%E9%98%B6/",
            "url": "https://blog.samhou.top/Csharp%E6%8E%A5%E5%8F%A3%E8%BF%9B%E9%98%B6/",
            "title": "Csharp接口进阶",
            "date_published": "2022-12-30T13:12:24.000Z",
            "content_html": "<p>在<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"这篇文章\">这篇文章</a>里，曾经讲解过C#接口的基本概念。掌握这些基本概念后，本文将补充一个进阶内容。</p>\n<h2 id=\"显式接口成员实现\"><a href=\"#显式接口成员实现\" class=\"headerlink\" title=\"显式接口成员实现\"></a>显式接口成员实现</h2><ul>\n<li>该功能用于为同一个类中实现的不同接口创建不同的方法（方法名称相同）</li>\n<li>语法：</li>\n</ul>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title\">I1</span>&#123;<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Method</span>(<span class=\"params\"><span class=\"built_in\">string</span> s</span>)</span>;&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title\">I2</span>&#123;<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Method</span>(<span class=\"params\"><span class=\"built_in\">string</span> s</span>)</span>;&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span>:<span class=\"title\">I1</span>,<span class=\"title\">I2</span></span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"title\">void</span> <span class=\"title\">I1.Method</span>(<span class=\"title\">string</span> <span class=\"title\">s</span>)&#123;...&#125;</span><br><span class=\"line\"><span class=\"keyword\">void</span> I2.Method(<span class=\"built_in\">string</span> s)&#123;...&#125;</span><br></pre>\n\n<ul>\n<li>当以上面的方式来创建类中的方法时，仅能通过接口引用访问该方法，无法通过类的引用来访问，即使是同一个类中的方法也不行</li>\n<li>针对以上问题，可以通过强制转换来进行，举个例子：<code>((I1)MyClass1).Method</code></li>\n</ul>\n",
            "tags": [
                "csharp",
                "csharp图解教程"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp-winform%E7%AA%97%E5%8F%A3%E6%8B%96%E5%8A%A8%E8%AF%A6%E8%A7%A3/",
            "url": "https://blog.samhou.top/Csharp-winform%E7%AA%97%E5%8F%A3%E6%8B%96%E5%8A%A8%E8%AF%A6%E8%A7%A3/",
            "title": "Csharp-winform窗口拖动详解",
            "date_published": "2022-05-29T08:05:02.000Z",
            "content_html": "<h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><ul>\n<li>首先，在设计器里双击增加以下三个方法，然后填入以下代码<pre class=\"highlight\"><span class=\"line\">      <span class=\"keyword\">private</span> Point mouseLocation;<span class=\"comment\">//表示鼠标对于窗口左上角的坐标的负数</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"built_in\">bool</span> isDragging;<span class=\"comment\">//标识鼠标是否按下</span></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">MainWindow_MouseDown</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (e.Button == MouseButtons.Left)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              mouseLocation = <span class=\"keyword\">new</span> Point(-e.X, -e.Y);</span><br><span class=\"line\">              <span class=\"comment\">//表示鼠标当前位置相对于窗口左上角的坐标，</span></span><br><span class=\"line\">              <span class=\"comment\">//并取负数,这里的e是参数，</span></span><br><span class=\"line\">              <span class=\"comment\">//可以获取鼠标位置</span></span><br><span class=\"line\">              isDragging = <span class=\"literal\">true</span>;<span class=\"comment\">//标识鼠标已经按下</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">MainWindow_MouseMove</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (isDragging)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              Point newMouseLocation = MousePosition;</span><br><span class=\"line\">              <span class=\"comment\">//获取鼠标当前位置</span></span><br><span class=\"line\">              newMouseLocation.Offset(mouseLocation.X, mouseLocation.Y);</span><br><span class=\"line\">              <span class=\"comment\">//用鼠标当前位置加上鼠标相较于窗体左上角的</span></span><br><span class=\"line\">              <span class=\"comment\">//坐标的负数，也就获取到了新的窗体左上角位置</span></span><br><span class=\"line\">              Location = newMouseLocation;<span class=\"comment\">//设置新的窗体左上角位置</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">MainWindow_MouseUp</span>(<span class=\"params\"><span class=\"built_in\">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (isDragging)</span><br><span class=\"line\">          &#123;</span><br><span class=\"line\">              isDragging = <span class=\"literal\">false</span>;<span class=\"comment\">//鼠标已抬起，标识为false</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125;</span><br></pre></li>\n</ul>\n<h2 id=\"详解\"><a href=\"#详解\" class=\"headerlink\" title=\"详解\"></a>详解</h2><ul>\n<li>鼠标在窗体上按下时，窗体跟随鼠标，鼠标抬起时，窗体停止移动</li>\n<li>窗体的Location属性为<strong>左上角</strong>的坐标</li>\n<li>为了实现拖动，需要获取2个坐标：鼠标相较于窗体左上角的位置，以及鼠标现在的坐标</li>\n<li>举个例子：按下鼠标时，鼠标位置(300,400)，获取鼠标相较于窗体左上角位置为(150,100)，那么此时窗体位置是(150,300)，鼠标移动到(300,401)，那么此时窗体位置应该是(150,301)。也就是说，新的窗体位置就是新的鼠标位置减去一开始鼠标相较于窗体左上角位置</li>\n<li>调用.OffSet()，就是把前面的坐标加上括号里的坐标，比如上面的例子，newMouseLocation是(300,401)，mouseLocation把鼠标相较于窗体左上角位置作为负数存储，mouseLocation是(-150,-100)，那么新的newMouseLocation就是(150,301)了~</li>\n</ul>\n",
            "tags": [
                "winform"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89-%E6%9E%9A%E4%B8%BE%E4%B8%8E%E9%9B%86%E5%90%88/",
            "url": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89-%E6%9E%9A%E4%B8%BE%E4%B8%8E%E9%9B%86%E5%90%88/",
            "title": "Csharp读书笔记（六）-枚举与集合",
            "date_published": "2022-02-11T04:02:27.000Z",
            "content_html": "<h2 id=\"枚举\"><a href=\"#枚举\" class=\"headerlink\" title=\"枚举\"></a>枚举</h2><ul>\n<li>枚举只允许几个特定的值</li>\n<li><code>enum</code>数据类型只允许某个数据取某些特定的值<pre class=\"highlight\"><span class=\"line\"><span class=\"built_in\">enum</span> Computers&#123;</span><br><span class=\"line\">\tComputer1=<span class=\"number\">1</span>,<span class=\"comment\">//不仅可以指定名称，还可以指定值</span></span><br><span class=\"line\">\tComputer2=<span class=\"number\">2</span>,</span><br><span class=\"line\">\tComputer3=<span class=\"number\">3</span>,<span class=\"comment\">//这个逗号可以省略</span></span><br><span class=\"line\">&#125;</span><br></pre></li>\n<li><code>enum</code>也是一种类型，每一项都可以当作参数传递，如<code>Computers.Computer1</code>这样传递</li>\n<li>枚举中的每一项都必须有名称，但不一定需要指定一个值</li>\n<li>可以使用<code>.ToString()</code>方法来获得任意一项的名称，使用强制转换获得其值</li>\n<li>比如：<code>Computers.Computer1.ToString()</code>得到string<code>Computer1</code>,<code>(int)Computers.Computer1</code>得到int<code>1</code></li>\n<li>也可以把int转换回去，例如<code>Computers computer0=(Computers)3;</code>该代码会创建一个指向<code>Computer3</code>的<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"引用\">引用</a><code>computer0</code>（因为等号右边的数字是3，回到<code>Computers</code>中寻找值3，所对应的项为<code>Computer3</code>)，于是<code>computer0.ToString()</code>获得的就是string<code>Computer3</code>了</li>\n<li>如果没有为项指定值，那么C#会自动按照顺序赋值，第一项为0，以此类推</li>\n<li>可以用<code>:</code>指定所需要的类型，例如<code>enum Computers:long</code>这样就可以为其中的项指定非常大的值了</li>\n</ul>\n<h2 id=\"集合\"><a href=\"#集合\" class=\"headerlink\" title=\"集合\"></a>集合</h2><h3 id=\"列表与数组\"><a href=\"#列表与数组\" class=\"headerlink\" title=\"列表与数组\"></a>列表与数组</h3><ul>\n<li>每个<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-%E6%95%B0%E7%BB%84/\" title=\"数组\">数组</a>都有一个长度，它是固定的，需要手动调整长度</li>\n<li>不能直接移动数组的元素</li>\n<li>可以使用集合来存储数据，就可以避免以上两个问题</li>\n<li>常用的集合是<code>List&lt;T&gt;</code>，<code>&lt;T&gt;</code>表示类型，把类型放在尖括号中间</li>\n<li>使用<code>.Add()</code>可以添加集合中的项目</li>\n<li><code>List</code>没有大小限制，它会动态调整大小</li>\n<li><code>List</code>有<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"多态\">多态</a>性，也就是可以添加接口、抽象类、基类等</li>\n</ul>\n<h3 id=\"List的使用\"><a href=\"#List的使用\" class=\"headerlink\" title=\"List的使用\"></a>List的使用</h3><ul>\n<li><code>.Contains()</code>可以检查是否有特定元素，括号内写上需要查找的元素</li>\n<li><code>.IndexOf()</code>可以获取特定元素的索引，括号内写上需要查找的元素</li>\n<li><code>.Remove()</code>可以删除元素，括号内写上需要删除的元素</li>\n<li><code>.RemoveAt()</code>可以删除元素，括号内写上需要删除元素的索引号</li>\n<li><code>List</code>本身也是一个对象</li>\n</ul>\n<h3 id=\"foreach循环\"><a href=\"#foreach循环\" class=\"headerlink\" title=\"foreach循环\"></a><code>foreach</code>循环</h3><ul>\n<li><code>foreach</code>可以对list中每个对象执行语句，<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-%E6%95%B0%E7%BB%84/\" title=\"数组\">数组</a>也可以这么用</li>\n<li>注意，使用<code>foreach</code>时不能修改这个集合，也就是不能使用该list对应的<code>.Remove()</code>等方法</li>\n<li><code>.ToList()</code>可以创建副本并赋值给新的变量</li>\n<li>使用foreach就是在使用<code>IEnumerable&lt;T&gt;</code></li>\n<li>以下代码实现的效果完全相同<pre class=\"highlight\"><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (Duck duck <span class=\"keyword\">in</span> ducks)</span><br><span class=\"line\">\tConsole.WriteLine(duck);</span><br><span class=\"line\"><span class=\"comment\">//上下两种方式实现的效果完全相同</span></span><br><span class=\"line\">IEnumerator&lt;Duck&gt; enumerator = ducks.GetEnumerator();</span><br><span class=\"line\"><span class=\"keyword\">while</span> (enumerator.MoveNext())</span><br><span class=\"line\">\tConsole.WriteLine(enumerator.Current);</span><br><span class=\"line\"></span><br><span class=\"line\">IDisposable disposable = enumerator <span class=\"keyword\">as</span> IDisposable;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (disposable != <span class=\"literal\">null</span>) disposable.Dispose();</span><br></pre></li>\n</ul>\n<h3 id=\"集合初始化方法\"><a href=\"#集合初始化方法\" class=\"headerlink\" title=\"集合初始化方法\"></a>集合初始化方法</h3><ul>\n<li>可以用集合初始化方法来提供初始数据项列表</li>\n<li>直接在创建列表后面添加大括号，各个初始项中使用逗号隔开</li>\n<li>可以包含new创建的对象，还可以包含变量</li>\n</ul>\n<h3 id=\"集合的排序\"><a href=\"#集合的排序\" class=\"headerlink\" title=\"集合的排序\"></a>集合的排序</h3><ul>\n<li><code>.Sort()</code>可以使列表中的所有项重新有序排列，它已经知道如何重排大部分类型</li>\n<li>有两种排序方法，分别是<code>CompareTo()</code>和实现<code>IComparer&lt;T&gt;</code></li>\n</ul>\n<h4 id=\"排序1：使用CompareTo-方法\"><a href=\"#排序1：使用CompareTo-方法\" class=\"headerlink\" title=\"排序1：使用CompareTo()方法\"></a>排序1：使用<code>CompareTo()</code>方法</h4><ul>\n<li><code>.Sort()</code>知道如何对实现了<code>IComparable&lt;T&gt;</code><a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"接口\">接口</a>的类排序</li>\n<li>该接口只有一个成员，是<code>CompareTo()</code>方法，传入一个要比较的对象</li>\n<li><code>CompareTo()</code>方法会返回一个int值，该方法传入一个要比较的对象x，它把传入的对象与当前对象y（也就是该方法所在的对象）比较，如果x应排在y后面（也就是x&gt;y）则返回正数，反之则返回负数。如果比较相同，则返回0。（如果你实现了正向排列，想要倒序排列，只需在调换正负数的位置即可）</li>\n<li>实现接口后，直接使用<code>.Sort()</code>即可排序</li>\n</ul>\n<h4 id=\"排序2：新建一个实现了IComparable的类\"><a href=\"#排序2：新建一个实现了IComparable的类\" class=\"headerlink\" title=\"排序2：新建一个实现了IComparable&lt;T&gt;的类\"></a>排序2：新建一个实现了<code>IComparable&lt;T&gt;</code>的类</h4><ul>\n<li>可以向<code>.Sort()</code>传入一个实现了<code>IComparer&lt;T&gt;</code>接口的实例</li>\n<li>该接口有一个<code>Compare()</code>方法，传入两个要比较的对象</li>\n<li><code>Compare()</code>方法会返回一个int值，该方法传入两个要比较的对象（假设它们是x,y），它把传入的两个对象比较，如果x应排在y后面（x&gt;y），则返回正数，反之则返回负数。如果比较相同，则返回0。（如果你实现了正向排列，想要倒序排列，只需在调换正负数的位置即可）</li>\n<li>实现接口后，先实例化这个新比较类，然后调用list对象的<code>.Sort()</code>，把新的实例填到括号内，即可比较</li>\n</ul>\n<h4 id=\"多种排序方式\"><a href=\"#多种排序方式\" class=\"headerlink\" title=\"多种排序方式\"></a>多种排序方式</h4><ul>\n<li>可以用第二种方式写不同的比较类，只要填入不同排序类，就可以以不同的方式排序</li>\n<li>注意，以上两种方法可以共存。共存时，<code>.Sort()</code>括号内可以不写，也可以填入比较类，此时会执行比较类中的方法（不会执行CompareTo）</li>\n<li>也就是说，第二种方式有更大的灵活性！</li>\n</ul>\n<h3 id=\"ToString-方法\"><a href=\"#ToString-方法\" class=\"headerlink\" title=\"ToString()方法\"></a>ToString()方法</h3><ul>\n<li>每一个<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"对象\">对象</a>都有一个ToString()方法，把对象转换为一个字符串</li>\n<li>使用+操作符会自动调用该方法，调试工具中的监视也用到了这个方法</li>\n<li>它默认返回类名，但是我们可以覆盖它，让它返回不同的内容</li>\n</ul>\n<h3 id=\"列表的向上强制转换\"><a href=\"#列表的向上强制转换\" class=\"headerlink\" title=\"列表的向上强制转换\"></a>列表的向上强制转换</h3><ul>\n<li>列表的向上强制转换称作协变</li>\n<li>实现了<code>IEnumerable&lt;T&gt;</code>接口的类才可以向上强制转换</li>\n<li>使用该接口引用即可转换<code>IEnumerable&lt;BaseClass&gt; upcastBaseClasses = subclasses</code>，这里subclasses即子类的列表，这个子类实现了IEnumerable</li>\n<li>强制转换后，可以用<code>AddRange</code>把内容添加到另一个列表中</li>\n</ul>\n<h3 id=\"重载\"><a href=\"#重载\" class=\"headerlink\" title=\"重载\"></a>重载</h3><ul>\n<li>重载即有多个参数不同的同名方法</li>\n<li>直接写两个同名方法，即可使用重载</li>\n</ul>\n<h3 id=\"IEnumerable\"><a href=\"#IEnumerable\" class=\"headerlink\" title=\"IEnumerable\"></a>IEnumerable</h3><ul>\n<li>这个接口表示实现了任何集合，不止是List或数组</li>\n<li>用于<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89-%E6%9E%9A%E4%B8%BE%E4%B8%8E%E9%9B%86%E5%90%88/\" title=\"强制转换\">强制转换</a>、<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89-%E6%9E%9A%E4%B8%BE%E4%B8%8E%E9%9B%86%E5%90%88/\" title=\"foreach循环\">foreach循环</a>等</li>\n</ul>\n<h3 id=\"字典\"><a href=\"#字典\" class=\"headerlink\" title=\"字典\"></a>字典</h3><ul>\n<li>字典可以将两个东西关联起来，形成一组</li>\n<li>前一个叫键，后一个叫值</li>\n<li>任何类型都可以！</li>\n<li><code>.Add(key,value)</code>可以添加一个项目</li>\n<li><code>.ContainKey(key)</code>可以返回是否有这个键</li>\n<li><code>dict[key]</code>可以获得键对应的值</li>\n<li><code>.Remove(key)</code>可以移除一项</li>\n<li><code>foreach(string key in myDict.Keys)</code>可以遍历键</li>\n<li><code>.Count()</code>可以获得项目数量</li>\n</ul>\n<h3 id=\"更多集合类型——按顺序处理\"><a href=\"#更多集合类型——按顺序处理\" class=\"headerlink\" title=\"更多集合类型——按顺序处理\"></a>更多集合类型——按顺序处理</h3><ul>\n<li>常用的按照顺序处理的集合是queue和stack</li>\n<li>queue类型表示先处理早提交的对象</li>\n<li>stack则相反，先处理最后提交的对象</li>\n</ul>\n<h4 id=\"queue\"><a href=\"#queue\" class=\"headerlink\" title=\"queue\"></a>queue</h4><ul>\n<li><code>.Enqueue()</code>向queue中添加一项</li>\n<li><code>.Peek()</code>允许查看第一项</li>\n<li><code>.Dequeue()</code>允许取出第一项，将后面的对象上移到空出来的位置</li>\n<li><code>.Count</code>,<code>.Clear()</code>与<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%85%AD%EF%BC%89-%E6%9E%9A%E4%B8%BE%E4%B8%8E%E9%9B%86%E5%90%88/\" title=\"list\">list</a>类似</li>\n</ul>\n<h4 id=\"stack\"><a href=\"#stack\" class=\"headerlink\" title=\"stack\"></a>stack</h4><ul>\n<li>可以推入、弹出对象</li>\n<li>添加时用<code>.Push()</code></li>\n<li>取出时用<code>.Pop()</code></li>\n<li><code>.Peek()</code>类似queue</li>\n</ul>\n<h3 id=\"互相转换\"><a href=\"#互相转换\" class=\"headerlink\" title=\"互相转换\"></a>互相转换</h3><ul>\n<li>list,queue,stack可以相互转换</li>\n<li>比如下面这样做<pre class=\"highlight\"><span class=\"line\">Queue&lt;<span class=\"built_in\">string</span>&gt; myQueue=<span class=\"keyword\">new</span> Queue&lt;<span class=\"built_in\">string</span>&gt;(mystack);</span><br></pre></li>\n</ul>\n",
            "tags": [
                "csharp",
                "hfc"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/",
            "url": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/",
            "title": "Csharp读书笔记（五）-接口与抽象类",
            "date_published": "2022-01-26T12:45:53.000Z",
            "content_html": "<h2 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>接口告诉类<strong>必须</strong>实现某些方法和<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E5%B0%81%E8%A3%85/\" title=\"属性\">属性</a></li>\n<li>如果没有实现，编译器会报错</li>\n<li>接口可以定义一个类中必须有的方法，这样一个类只要实现接口，就可以做特定的事情</li>\n<li>使用<code>interface</code>关键字定义接口</li>\n<li>接口不能添加任何<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"字段\">字段</a>，因为它不存储数据（但是可以包含<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E5%B0%81%E8%A3%85/\" title=\"属性\">属性</a>）</li>\n<li>命名规范：接口名称以<code>I</code>开头</li>\n<li>只需要在接口中添加方法名和参数，因为接口不做任何事情</li>\n<li>接口中的所有方法都是抽象方法，不能有方法体 ^bbfa07</li>\n<li>一个类只能继承一个类，但可以实现多个接口 ^018e94</li>\n<li>不可以实例化接口，不过可以引用接口</li>\n<li>接口就像清单，指出一个类可以做些什么事情</li>\n</ul>\n<h3 id=\"为什么使用接口？\"><a href=\"#为什么使用接口？\" class=\"headerlink\" title=\"为什么使用接口？\"></a><em>为什么使用接口？</em></h3><ul>\n<li>接口并不是为了避免重复代码，<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%BB%A7%E6%89%BF/\" title=\"继承\">继承</a>才是</li>\n<li>如果有<strong>一件事</strong>，<strong>多个类</strong>都能实现，你需要这样一个类作为<strong>参数</strong>，但<strong>不希望继承</strong>时（比如你觉得根本用不到那些东西，<strong>不想让子类继承基类的方法和属性</strong>），这时你无法用继承中的基类来作为参数，那么使用接口，就可以知道：<strong>只要类实现了这个接口，它就能做这件事，可以作为参数使用，而不必知道它到底是什么类型</strong></li>\n<li>如果有<strong>多件事</strong>，<strong>一个类</strong>能实现它们，这时<strong>无法使用</strong>继承（<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"只能继承一个类\">只能继承一个类</a>），就需要使用接口</li>\n<li>继承只是给类“<strong>分层</strong>”（减少重复），接口则可以给类“<strong>分类</strong>”（可以<strong>规定这个类可以干什么</strong>）</li>\n<li>也就是说，当继承给你的类增加太多“负担”时，就应该考虑使用接口</li>\n<li>举个例子，假设你有一个电器类，很多类都继承了它，比如电脑、电视、冰箱……但是现在你想要用一个可以处理食物的类作为参数（比如面包机、烤箱、微波炉……），这时无法使用继承（因为你只能继承一个类），就需要编写一个可处理食物的接口，把要用到的方法属性放进去，在可处理食物的类中实现这个接口，把参数改成这样一个接口引用，就可以解决这个问题</li>\n<li>C#<strong>拒绝继承多个类</strong>，并通过接口提供<strong>保护</strong>，这是为了<strong>避免二义性</strong></li>\n<li>二义性：当两个类<strong>分别继承一个基类</strong>，并且重写了基类中的同一个方法，这时如果允许继承多个类（这称为多重继承），那么<strong>继承这两个类的子类</strong>调用该方法（假设子类没有重写）时应该调用哪个方法？这就会出现问题：子类<strong>不知道应该调用哪个方法</strong>，因为继承了<strong>两个同名的不同方法</strong></li>\n<li>这也被称作“致命的死亡菱形”（如果[[Csharp&#x2F;Csharp读书笔记&#x2F;Csharp读书笔记（一）-对象与引用#创建类图|画出类图]]，会发现这像一个菱形）</li>\n<li>所以C#<strong>通过接口提供保护</strong>，接口并没有方法体（它不做任何事情），因为它没有方法体，所以一个类可以实现多个接口，即使接口中有同名方法，这个类也<strong>只能实现这一个方法</strong>，避免了二义性</li>\n</ul>\n<h3 id=\"接口引用\"><a href=\"#接口引用\" class=\"headerlink\" title=\"接口引用\"></a>接口引用</h3><ul>\n<li>接口引用与<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"对象引用\">对象引用</a>类似，可以保持一个类不被垃圾回收</li>\n<li>可以移动接口引用，就像移动标签一样</li>\n<li>一个类需要实现这个接口，才能添加该接口引用</li>\n<li>使用接口引用访问类时，<strong>只能</strong>访问该接口引用所<strong>对应的方法和属性</strong> ^46c854</li>\n</ul>\n<h3 id=\"类与接口的强制转换\"><a href=\"#类与接口的强制转换\" class=\"headerlink\" title=\"类与接口的强制转换\"></a>类与接口的强制转换</h3><ul>\n<li>可以使用<code>is</code>关键字来查看一个类是否实现了这个接口</li>\n<li>可以用<code>as</code>关键字来把一个类看成实现了这个接口（前提是使用<code>is</code>找出这个类确实实现了）</li>\n<li>为什么使用as：有时候，C#并不知道一个类实现了一个接口（<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"使用了其他接口引用\">使用了其他接口引用</a>），所以使用is之后还要让C#认为它确实实现了</li>\n<li>举例： ^537c57</li>\n</ul>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"comment\">//这里仅给出核心代码</span></span><br><span class=\"line\">IComputer[] computers=<span class=\"keyword\">new</span> IComputer[<span class=\"number\">3</span>];<span class=\"comment\">//假设有一个叫做IComputer的接口</span></span><br><span class=\"line\">computers[<span class=\"number\">0</span>]=<span class=\"keyword\">new</span> Windows();<span class=\"comment\">//假设Windows,Mac,Linux类实现了IComputer接口</span></span><br><span class=\"line\">computers[<span class=\"number\">1</span>]=<span class=\"keyword\">new</span> Mac();</span><br><span class=\"line\">computers[<span class=\"number\">2</span>]=<span class=\"keyword\">new</span> Linux();</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"built_in\">int</span> i=<span class=\"number\">0</span>;i&lt;computers.Length;i++)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">if</span>(computers[i] <span class=\"keyword\">is</span> IServer)&#123;</span><br><span class=\"line\"> IServer myserver;<span class=\"comment\">//IServer是一个假设的新接口</span></span><br><span class=\"line\"> myserver=computers[i] <span class=\"keyword\">as</span> IServer;</span><br><span class=\"line\"> <span class=\"comment\">//使用as，就能够让C#把这个对象看成实现了IServer,就可以使用IServer中的方法和属性了</span></span><br><span class=\"line\"> myserver.Run();<span class=\"comment\">//假设IServer中有一个Run()方法，只有使用了as才能够使用</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<ul>\n<li>在上面的例子中，C#知道computers数组中的类都实现了IComputer（因为这是个IComputer接口的数组），所以<strong>只能调用这些类中IComputer接口中包含的方法和属性</strong>（可以把接口看作一个清单，这里<strong>只能调用清单中的内容</strong>），而当使用<code>is</code>关键字找出这个类确实实现了IServer接口时，C#<strong>仍然不认为</strong>它实现了IServer（因为你根本没有告诉它这么认为，只是让他<strong>检查</strong>了这个“清单”是否与类匹配，这是<code>is</code>关键字所做的），所以你需要使用<code>as</code>关键字，这样C#就会认为<strong>它确实实现了IServer</strong>，就<strong>可以（且只能）调用IServer中的方法、属性了</strong></li>\n<li>由子类代替基类时，这称为向上强制转换</li>\n<li>由基类代替子类时，这叫做向下强制转换</li>\n<li>接口也可以这么做（上面的<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"举例\">举例</a>就是一个接口向下强制转换的例子）</li>\n</ul>\n<h3 id=\"接口的继承\"><a href=\"#接口的继承\" class=\"headerlink\" title=\"接口的继承\"></a>接口的继承</h3><ul>\n<li>接口可以继承其他接口</li>\n<li>实现继承其他接口的接口时，<strong>必须</strong>实现<strong>所有</strong>继承的接口</li>\n</ul>\n<h3 id=\"访问修饰符\"><a href=\"#访问修饰符\" class=\"headerlink\" title=\"访问修饰符\"></a>访问修饰符</h3><ul>\n<li>public表示任何其他类都可以访问</li>\n<li>private表示只有该类中的成员及该类的<strong>其他实例</strong>可以访问</li>\n<li>protected表示对于该类的其他成员来说相当于private，而对于子类来说是public，也就是说子类成员可以访问子类成员及任何基类成员（注意：基类声明为protected后，无需使用base也可以访问基类中的公共类型）</li>\n<li>internal表示只能从程序集或子类访问</li>\n<li>sealed表示不能继承该类</li>\n</ul>\n<h3 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h3><ul>\n<li>抽象类不能实例化</li>\n<li>有时候，你想在一个类中完成一部分代码，在子类中再完成其余部分，于是基类根本不应该被实例化（它并不能工作——因为你没有完成它），这时应该使用抽象类，防止你不小心创建了本不应该创建的实例</li>\n<li>比如说，一个方法需要一个<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"字段\">字段</a>来计算，但是在基类中不想设置它的值，想在子类中设置，这时基类是不完整的，它无法计算，所以设置为抽象类，防止误实例化</li>\n<li>可以在抽象类中添加抽象方法，也可以有具体方法，这与<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"接口\">接口</a>不同</li>\n</ul>\n<h3 id=\"面向对象的设计原则\"><a href=\"#面向对象的设计原则\" class=\"headerlink\" title=\"面向对象的设计原则\"></a>面向对象的设计原则</h3><ul>\n<li><a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%BB%A7%E6%89%BF/\" title=\"继承\">继承</a>：一个类或一个接口继承另一个</li>\n<li>抽象：建立一个类模型，首先时比较一般的类，然后继承的是更特殊的类，也就是由一般（基类）到特殊（子类）的过程</li>\n<li><a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E5%B0%81%E8%A3%85/\" title=\"封装\">封装</a>：创建一个对象，使用私有字段在内部记录其状态，通过公共属性、方法使其他类只能使用需要的数据以防止错误</li>\n<li>多态：将一个对象用于需要其他对象的方法或语句，比如<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%94%EF%BC%89-%E6%8E%A5%E5%8F%A3%E4%B8%8E%E6%8A%BD%E8%B1%A1%E7%B1%BB/\" title=\"类与接口的强制转换\">类与接口的强制转换</a></li>\n</ul>\n",
            "tags": [
                "csharp",
                "hfc"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%BB%A7%E6%89%BF/",
            "url": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%BB%A7%E6%89%BF/",
            "title": "Csharp读书笔记（四）-继承",
            "date_published": "2022-01-24T12:45:39.000Z",
            "content_html": "<h2 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h2><h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><ul>\n<li>继承可以构建彼此关联且有共同行为的类</li>\n<li>被继承的叫做基类</li>\n<li>继承别人的叫做子类</li>\n<li>类图中，箭头由子类指向基类</li>\n<li>沿着类图上行，可以发现类的相同特征越少</li>\n<li>沿着类图下行，可以发现类的相同特征越多</li>\n<li>这就好像生物的分类——界门科目纲属种</li>\n<li>使用冒号可以继承一个基类</li>\n<li>一个类只允许继承一个类，这是一种保护</li>\n</ul>\n<h3 id=\"合并两个类\"><a href=\"#合并两个类\" class=\"headerlink\" title=\"合并两个类\"></a>合并两个类</h3><ol>\n<li>首先<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"创建类图\">创建类图</a></li>\n<li>找出两个类相同的字段与方法</li>\n<li>把相同的放到一个基类中去</li>\n<li>把不同的放在子类，要[[#覆盖]]的也需要写入</li>\n<li>画上子类指向基类的箭头</li>\n</ol>\n<h3 id=\"覆盖\"><a href=\"#覆盖\" class=\"headerlink\" title=\"覆盖\"></a>覆盖</h3><ul>\n<li>在子类中，可以覆盖基类的方法</li>\n<li>举例，狗和猫都是动物，但是叫声不同，创建这样的类时，可以把Animal作为基类，Dog&#x2F;Cat作为子类，在子类中覆盖Animal类的发出叫声的方法</li>\n<li>执行顺序：对于C#，执行方法时总是先从基类中寻找，如果在该子类中找不到，会沿着类图上行，一个个寻找，直到找到对应的方法 ^7e9264</li>\n<li>被覆盖的方法添加<code>virtual</code>关键字</li>\n<li>要覆盖别人的方法添加<code>override</code>关键字</li>\n</ul>\n<h3 id=\"隐藏的方法\"><a href=\"#隐藏的方法\" class=\"headerlink\" title=\"隐藏的方法\"></a>隐藏的方法</h3><ul>\n<li>如果不添加这些关键字，则不会覆盖方法，而是隐藏了基类中的方法</li>\n<li>隐藏会导致产生两个同名的方法 ^b0994f</li>\n<li>在隐藏方法时，需要为子类中的方法添加<code>new</code>关键字</li>\n<li>如果隐藏了方法，调用时会根据<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"引用\">引用</a>来执行，也就是调用对应引用类型的方法</li>\n<li>如果调用了一个<strong>子类引用</strong>中该子类<strong>对应基类</strong>中的方法，且<strong>该方法</strong>中调用了另一个<strong>隐藏的方法</strong>（有两个<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%BB%A7%E6%89%BF/\" title=\"同名方法\">同名方法</a>），则会执行<strong>对应基类</strong>中的隐藏方法</li>\n</ul>\n<h3 id=\"继承的用法\"><a href=\"#继承的用法\" class=\"headerlink\" title=\"继承的用法\"></a>继承的用法</h3><ul>\n<li>对于传递一个类的参数，如果该参数需要一个基类，则不仅可以传递该基类，还可以传递它的子类（任何一个都可以）</li>\n<li>传递后，只能使用对应传递的类中的内容</li>\n<li>比如传递一个基类，就不能使用它的子类的内容</li>\n<li>传递一个子类，也<strong>不能</strong>使用<strong>对应基类</strong>的<strong>其他子类</strong>中的内容</li>\n<li>子类可以使用<code>base</code>关键字访问基类中的方法，即使它们被覆盖了</li>\n</ul>\n<h3 id=\"继承中的\"><a href=\"#继承中的\" class=\"headerlink\" title=\"继承中的\"></a>继承中的<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E5%B0%81%E8%A3%85/\" title=\"构造函数\">构造函数</a></h3><ul>\n<li>如果基类中有带参数的构造函数，则在子类中也必须调用其中一个</li>\n<li>但是，子类的构造函数与基类的构造函数可以有不同参数</li>\n<li>构造函数执行时，会从基类开始，沿着类图下行依次执行（这和<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E5%9B%9B%EF%BC%89-%E7%BB%A7%E6%89%BF/\" title=\"覆盖的执行顺序\">覆盖的执行顺序</a>正好相反）</li>\n<li>举例</li>\n</ul>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">MyBase</span>&#123;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyBase</span>(<span class=\"params\"><span class=\"built_in\">int</span> number1</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> Console.WriteLine(number1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">MySub</span>&#123;</span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MySub</span>(<span class=\"params\"><span class=\"built_in\">int</span> number1,<span class=\"built_in\">int</span> number2</span>):<span class=\"title\">base</span>(<span class=\"params\">number1</span>)</span>&#123;</span><br><span class=\"line\"> Console.WriteLine(number2);</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"><span class=\"comment\">//output: number1 number2</span></span><br><span class=\"line\">&#125;</span><br></pre>\n\n<h3 id=\"知识拓展\"><a href=\"#知识拓展\" class=\"headerlink\" title=\"知识拓展\"></a>知识拓展</h3><ul>\n<li>让类尽可能减少重叠，这是一个重要的设计原则，称作关注点分离</li>\n<li><code>String.IsNullOrEmpty()</code>可以检测一个字符串是否为空（即<code>&quot;&quot;</code>）或<code>null</code></li>\n</ul>\n",
            "tags": [
                "csharp",
                "hfc"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E5%B0%81%E8%A3%85/",
            "url": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%89%EF%BC%89-%E5%B0%81%E8%A3%85/",
            "title": "Csharp读书笔记（三）-封装",
            "date_published": "2022-01-23T12:45:22.000Z",
            "content_html": "<h2 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h2><ul>\n<li>封装保证类中一些数据是私有的</li>\n<li>私有字段、方法只能在类内部访问，使用关键字<code>private</code></li>\n<li>封装可以避免不必要的错误</li>\n</ul>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><ul>\n<li>属性对于其他对象来说就是<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"字段\">字段</a></li>\n<li>可以通过属性获取或设置一个后备字段</li>\n<li>属性首字母大写，后备字段应小写</li>\n<li><strong>属性的好处：在获取或设置时可以执行一些语句（比如设置一些有关的字段），防止直接更改字段导致逻辑计算错误</strong></li>\n<li>获取<code>get</code></li>\n<li>设置<code>set</code></li>\n<li>每个<code>set</code>都有一个名为<code>value</code>的参数，获取的是设置的值</li>\n<li>可以只设置<code>get</code>或<code>set</code>中的一个</li>\n<li>举例：</li>\n</ul>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"built_in\">int</span> numberOfComputers;<span class=\"comment\">//这是一个后备字段</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"built_in\">int</span> displays;<span class=\"comment\">//这是另一个字段</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> NumberOfComputers<span class=\"comment\">//这是一个属性</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">get</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> numberOfComputers;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> <span class=\"keyword\">set</span></span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  numberOfComputers = <span class=\"keyword\">value</span>;<span class=\"comment\">//设置后备字段</span></span><br><span class=\"line\">  displays = <span class=\"keyword\">value</span>*<span class=\"number\">2</span>;</span><br><span class=\"line\">  <span class=\"comment\">/*举例，每台电脑需要2个显示器，</span></span><br><span class=\"line\"><span class=\"comment\">  *这样封装可以防止直接从外部</span></span><br><span class=\"line\"><span class=\"comment\">  *修改displays，</span></span><br><span class=\"line\"><span class=\"comment\">  *而外部代码可能发生错误导致dispalys不是2倍</span></span><br><span class=\"line\"><span class=\"comment\">  *这就避免了不必要的错误</span></span><br><span class=\"line\"><span class=\"comment\">  */</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">&#125;</span><br></pre>\n\n<ul>\n<li>在窗体应用执行<code>Console.WriteLine()</code>时，输出显示在<code>output</code>窗口</li>\n<li>输入<code>prop</code>，再按下tab，会向代码中添加一个自动属性</li>\n</ul>\n<h3 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h3><ul>\n<li>构造函数会在类创建时执行</li>\n<li>构造函数没有返回值</li>\n<li>添加构造函数时，需要添加一个与类同名的方法，但是没有返回值</li>\n<li>构造函数可以用来在创建<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"实例\">实例</a>时为私有变量指定值</li>\n<li>当然也可以做更多事情</li>\n</ul>\n<h3 id=\"知识拓展\"><a href=\"#知识拓展\" class=\"headerlink\" title=\"知识拓展\"></a>知识拓展</h3><ul>\n<li>方法的第一行包含存取修饰符、返回值、名字和参数，这些称之为签名</li>\n<li>属性也有签名</li>\n</ul>\n",
            "tags": [
                "csharp",
                "hfc"
            ]
        },
        {
            "id": "https://blog.samhou.top/obsidian%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%88%B0hexo%E6%94%BB%E7%95%A5/",
            "url": "https://blog.samhou.top/obsidian%E6%96%87%E7%AB%A0%E5%8F%91%E5%B8%83%E5%88%B0hexo%E6%94%BB%E7%95%A5/",
            "title": "obsidian文章发布到hexo攻略",
            "date_published": "2022-01-23T04:03:41.000Z",
            "content_html": "<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ul>\n<li>将obsidian中带有反向链接的markdown文章在hexo中正常显示</li>\n<li>快速添加文章头部的标题、时间、标签等</li>\n</ul>\n<h2 id=\"使用的软件-项目\"><a href=\"#使用的软件-项目\" class=\"headerlink\" title=\"使用的软件&#x2F;项目\"></a>使用的软件&#x2F;项目</h2><ul>\n<li>obsidian</li>\n<li>vscode</li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint\">markdownlint插件</a></li>\n<li><a href=\"https://github.com/Cyrusky/hexo-backlink\">Cyrusky&#x2F;hexo-backlink</a></li>\n</ul>\n<h2 id=\"迁移项目文件\"><a href=\"#迁移项目文件\" class=\"headerlink\" title=\"迁移项目文件\"></a>迁移项目文件</h2><p>首先，复制要发布的文档到_post文件夹。然后在vscode中打开hexo文件夹。</p>\n<h2 id=\"规范markdown格式\"><a href=\"#规范markdown格式\" class=\"headerlink\" title=\"规范markdown格式\"></a>规范markdown格式</h2><p>vscode中安装markdownlint插件，启用后打开要发布的文章，打开问题面板。<br>这时可能会检测出几个问题，右键选择一个问题，点击<img src=\"https://s4.ax1x.com/2022/01/23/74K5CV.png\" alt=\"pic\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://s4.ax1x.com/2022/01/23/74K5CV.png\" class=\"lozad post-image\">即可一键规范格式。</p>\n<h2 id=\"使用用户片段\"><a href=\"#使用用户片段\" class=\"headerlink\" title=\"使用用户片段\"></a>使用用户片段</h2><p>在vscode中选择文件-设置-用户片段，选择新建“xxx”文件夹的代码片段文件，随便取个名字然后回车。然后把下面的代码黏贴到大括号里面</p>\n<pre class=\"highlight\"><span class=\"line\"> <span class=\"attr\">&quot;xxx&quot;</span><span class=\"punctuation\">:</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;scope&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;prefix&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;xxx&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;body&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"string\">&quot;---&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;title: $TM_FILENAME_BASE&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"string\">&quot;date:$CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE$CURRENT_HOUR:$CURRENT_MINUTE:$CURRENT_SECOND&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;tags:&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;- $1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;categories: $2&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"string\">&quot;---&quot;</span></span><br><span class=\"line\"> <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;xxx&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre>\n\n<p>把第一个xxx随便取个名字，第二个输入一个随便的单词，第三个随便写个描述，然后保存。<br>接下来按ctrl+shift+p打开命令面板，输入json，选择首选项：打开工作区设置，会打开一个json文件，然后把里面的内容替换为下面的代码</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;[markdown]&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"> <span class=\"attr\">&quot;editor.quickSuggestions&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\"> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre>\n\n<p>现在你已经开启可输入建议，可以使用代码片段了。打开你的文章，在首行输入你设定的第二个xxx中的单词，按下tab，就会自动生成一段片段，完成添加。</p>\n<h2 id=\"正常显示反向链接\"><a href=\"#正常显示反向链接\" class=\"headerlink\" title=\"正常显示反向链接\"></a>正常显示反向链接</h2><p>打开终端，输入<code>npm install hexo-backlink</code>等待安装完成（<a href=\"https://github.com/Cyrusky/hexo-backlink\">项目文档</a>），该插件会在生成时自动转换反向链接。</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p><a href=\"https://blog.samhou.top/categories/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/\">利用github发布的博客</a></p>\n",
            "tags": [
                "obsidian",
                "hexo"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-%E6%95%B0%E7%BB%84/",
            "url": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89-%E6%95%B0%E7%BB%84/",
            "title": "Csharp读书笔记（二）-数组",
            "date_published": "2022-01-22T12:45:08.000Z",
            "content_html": "<h2 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h2><ul>\n<li><p>数组是一组变量，可以存储和修改多个数据</p>\n</li>\n<li><p>创建数组时，需要指定类型、名称和元素数量</p>\n</li>\n<li><p>可以为<a href=\"/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/\" title=\"引用\">引用</a>创建数组，但是创建时只会创建引用变量，不会创建实例</p>\n</li>\n<li><p>必须分别为每一个对象创建实例</p>\n</li>\n<li><p>数组的索引是从0开始的</p>\n</li>\n<li><p>比如，创建一个元素数量为6的int数组，<code>int[] numbers=new int[6]</code>，此时访问<code>numbers[5]</code>，这时获取的元素为第6个</p>\n</li>\n<li><p><code>Random</code>类可以随机生成数字</p>\n</li>\n<li><p>使用时，先创建实例，再使用<code>Next()</code>方法，举例：调用<code>GetRandom()</code>时，以下代码会返回一个9到100间的随机整数</p>\n<pre class=\"highlight\"><span class=\"line\"><span class=\"keyword\">public</span> Random Randomizer;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">GetRandom</span>()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span>(Randomizer.Next(<span class=\"number\">9</span>,<span class=\"number\">100</span>));</span><br><span class=\"line\">&#125;</span><br></pre>\n</li>\n<li><p>对价格使用decimal类型时，要在值后面加上M</p>\n</li>\n</ul>\n",
            "tags": [
                "csharp",
                "hfc"
            ]
        },
        {
            "id": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/",
            "url": "https://blog.samhou.top/Csharp%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89-%E5%AF%B9%E8%B1%A1%E4%B8%8E%E5%BC%95%E7%94%A8/",
            "title": "Csharp读书笔记（一）-对象与引用",
            "date_published": "2022-01-21T12:44:44.000Z",
            "content_html": "<p>这个系列是head first csharp书籍的读书笔记，总结提炼了一些C#的核心内容，以及自己的个人理解。</p>\n<h2 id=\"程序从哪里来\"><a href=\"#程序从哪里来\" class=\"headerlink\" title=\"程序从哪里来\"></a>程序从哪里来</h2><ul>\n<li>IDE是一种方便的文件编辑器</li>\n<li>.NET提供很多工具来帮助你完成任务</li>\n<li>程序在CLR中运行</li>\n<li>using语句让你可以使用其他命名空间中的类</li>\n<li>命名空间包含类，类包含方法，方法由语句组成</li>\n<li>方法前的类型指出了这个方法的返回值，方法后的括号中包含参数</li>\n</ul>\n<h2 id=\"对象\"><a href=\"#对象\" class=\"headerlink\" title=\"对象\"></a>对象</h2><ul>\n<li>由一个类创建新对象时，称为这个类的一个实例 ^be690f</li>\n<li>使用new关键字创建实例</li>\n<li>静态类不用创建实例，但其他类需要创建实例才能使用</li>\n<li>可以在类中包含静态方法，使用它们时不用创建实例</li>\n<li>实例使用字段来跟踪其状态 ^52e61c</li>\n<li>每个实例都会有自己的变量副本</li>\n<li>创建对象时，会放在内存中的一个部分，称作堆</li>\n<li>类图可以帮助你组织类</li>\n</ul>\n<h3 id=\"创建类图\"><a href=\"#创建类图\" class=\"headerlink\" title=\"创建类图\"></a>创建类图</h3><ol>\n<li>画一个矩形方框</li>\n<li>在顶部写出字段</li>\n<li>画一条横线</li>\n<li>在下方写出方法</li>\n</ol>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><ul>\n<li>对象的一个引用叫做引用变量</li>\n<li>引用像标签，可以通过标签找到对象</li>\n<li>一个对象可以有多个引用，就像你可以给一个瓶子贴多个标签</li>\n<li>引用可以移动</li>\n<li>一个没有引用的对象会被垃圾回收</li>\n<li>移动引用：</li>\n</ul>\n<pre class=\"highlight\"><span class=\"line\">myclass class1=<span class=\"keyword\">new</span> myclass();</span><br><span class=\"line\">myclass class2=<span class=\"keyword\">new</span> myclass();</span><br><span class=\"line\">class1=class2;</span><br></pre>\n\n<hr>\n<p>这样做把class2指向的myclass实例“赋值”给class1这个引用，<br>相当于把class2指向的myclass实例贴上了class1的标签，<br>也就是把class1的引用移动到class2上面，<br>这样原来class1指向的对象会被垃圾回收！  </p>\n<hr>\n",
            "tags": [
                "csharp",
                "hfc"
            ]
        },
        {
            "id": "https://blog.samhou.top/qnap%E6%90%AD%E5%BB%BArss%E5%85%A8%E6%94%BB%E7%95%A5/",
            "url": "https://blog.samhou.top/qnap%E6%90%AD%E5%BB%BArss%E5%85%A8%E6%94%BB%E7%95%A5/",
            "title": "qnap搭建rss全攻略",
            "date_published": "2021-10-16T09:31:01.000Z",
            "content_html": "<h1 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h1><p>在qnap nas上搭建ttrss、rsshub，并通过fluent reader连接到所搭建的服务，实现多端同步。过程中踩了很多坑，所以这篇文章将列出所有遇到的坑，完整详细地讲解如何搭建一个可以正常使用的rss系统。</p>\n<h1 id=\"nas搭建教程\"><a href=\"#nas搭建教程\" class=\"headerlink\" title=\"nas搭建教程\"></a>nas搭建教程</h1><h2 id=\"awesome-ttrss-（文档）\"><a href=\"#awesome-ttrss-（文档）\" class=\"headerlink\" title=\"awesome ttrss （文档）\"></a>awesome ttrss （<a href=\"http://ttrss.henry.wang/zh\">文档</a>）</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>一个一站式rss客户端解决方案，可以多端同步浏览记录。其中的fever插件允许应用程序接入。</p>\n<h3 id=\"创建数据库文件夹\"><a href=\"#创建数据库文件夹\" class=\"headerlink\" title=\"创建数据库文件夹\"></a>创建数据库文件夹</h3><p>ttrss需要数据库来保存文件。在File station中Container共享文件夹中右键创建文件夹，右键新建的文件夹选择属性，记下文件路径。</p>\n<p>注意：显示的文件路径不全，需要在前面补上<code>/share</code>，在后面补上<code>/文件夹名称</code>，最终路径应该像这样：<code>/share/.../文件夹名称</code></p>\n<h3 id=\"使用docker安装\"><a href=\"#使用docker安装\" class=\"headerlink\" title=\"使用docker安装\"></a>使用docker安装</h3><p>qnap提供container station，可以运行docker容器。首先在app center里安装container station（这里已经装好）:</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/17/5tlA7n.png\" alt=\"container station\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/17/5tlA7n.png\" class=\"lozad post-image\"></p>\n<p>打开之后选择创建(create)，右上角选择create application:<br><img src=\"https://z3.ax1x.com/2021/10/17/5tlyNt.png\" alt=\"创建\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/17/5tlyNt.png\" class=\"lozad post-image\"></p>\n<p>弹出一个窗口，随便取个名字，然后把下面的代码粘贴到YAML一栏（这段代码在官方文档里有）：</p>\n<pre class=\"highlight\"><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  service.rss:</span><br><span class=\"line\">    image: wangqiru/ttrss:latest</span><br><span class=\"line\">    container_name: ttrss</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 181:80</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - SELF_URL_PATH=http://ip:181/ # please change to your own domain</span><br><span class=\"line\">      - DB_PASS=ttrss # use the same password defined in `database.postgres`</span><br><span class=\"line\">      - PUID=1000</span><br><span class=\"line\">      - PGID=1000</span><br><span class=\"line\">      - ALLOW_PORTS=1200</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - feed-icons:/var/www/feed-icons/</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - public_access</span><br><span class=\"line\">      - service_only</span><br><span class=\"line\">      - database_only</span><br><span class=\"line\">    stdin_open: true</span><br><span class=\"line\">    tty: true</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page</span><br><span class=\"line\">    image: wangqiru/mercury-parser-api:latest</span><br><span class=\"line\">    container_name: mercury</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - public_access</span><br><span class=\"line\">      - service_only</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page</span><br><span class=\"line\">    image: wangqiru/opencc-api-server:latest</span><br><span class=\"line\">    container_name: opencc</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - NODE_ENV=production</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - service_only</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  database.postgres:</span><br><span class=\"line\">    image: postgres:13-alpine</span><br><span class=\"line\">    container_name: postgres</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      - POSTGRES_PASSWORD=ttrss # feel free to change the password</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - 数据库路径:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host</span><br><span class=\"line\">    networks:</span><br><span class=\"line\">      - database_only</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">  # utility.watchtower:</span><br><span class=\"line\">  #   container_name: watchtower</span><br><span class=\"line\">  #   image: containrrr/watchtower:latest</span><br><span class=\"line\">  #   volumes:</span><br><span class=\"line\">  #     - /var/run/docker.sock:/var/run/docker.sock</span><br><span class=\"line\">  #   environment:</span><br><span class=\"line\">  #     - WATCHTOWER_CLEANUP=true</span><br><span class=\"line\">  #     - WATCHTOWER_POLL_INTERVAL=86400</span><br><span class=\"line\">  #   restart: always</span><br><span class=\"line\"></span><br><span class=\"line\">volumes:</span><br><span class=\"line\">  feed-icons:</span><br><span class=\"line\"></span><br><span class=\"line\">networks:</span><br><span class=\"line\">  public_access: # Provide the access for ttrss UI</span><br><span class=\"line\">  service_only: # Provide the communication network between services only</span><br><span class=\"line\">    internal: true</span><br><span class=\"line\">  database_only: # Provide the communication between ttrss and database only</span><br><span class=\"line\">    internal: true</span><br></pre>\n\n<p>粘贴后，修改ip、数据库路径。ip即nas的ip地址，数据库路径即在第一步中创建的文件夹路径。</p>\n<p>注意：其中allow_ports为除80,443端口外ttrss可以访问的端口号，这里设置为1200是为了rsshub能够正常订阅。</p>\n<p>设置完成后，点确定就可以创建ttrss了。等待一段时间，装好后访问<code>http://ip:181/</code>就可以访问到ttrss界面了。</p>\n<h3 id=\"设置ttrss\"><a href=\"#设置ttrss\" class=\"headerlink\" title=\"设置ttrss\"></a>设置ttrss</h3><p>打开ttrss后，默认账号<code>admin</code>，密码<code>password</code>。在右上角偏好设置-用户里可以改。</p>\n<h3 id=\"启用fever插件\"><a href=\"#启用fever插件\" class=\"headerlink\" title=\"启用fever插件\"></a>启用fever插件</h3><p>为了让客户端可以访问ttrss，必须借助fever插件。<br>偏好设置-偏好设置-Fever Emulation里设个密码：<br><img src=\"https://z3.ax1x.com/2021/10/17/5t8ZtI.png\" alt=\"fever\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/17/5t8ZtI.png\" class=\"lozad post-image\"></p>\n<h3 id=\"连接fever（以开源的fluent-reader为例，支持windows-ios-android等平台）\"><a href=\"#连接fever（以开源的fluent-reader为例，支持windows-ios-android等平台）\" class=\"headerlink\" title=\"连接fever（以开源的fluent reader为例，支持windows,ios,android等平台）\"></a>连接fever（以开源的<a href=\"https://github.com/yang991178/fluent-reader\">fluent reader</a>为例，支持windows,ios,android等平台）</h3><p>打开设置，选择服务，fever api。在“端点”中填入<code>http://ip:181/plugins/fever/</code>。用户名为ttrss用户名，<strong>密码是fever插件中设置的密码，不是ttrss的密码！</strong></p>\n<p>到此，ttrss设置完毕，可以正常订阅、阅读rss内容了。下面配置rsshub。</p>\n<h2 id=\"rsshub（文档）\"><a href=\"#rsshub（文档）\" class=\"headerlink\" title=\"rsshub（文档）\"></a>rsshub（<a href=\"https://docs.rsshub.app/\">文档</a>）</h2><h3 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>一个可以为不提供rss站点生成rss的项目。</p>\n<h3 id=\"docker搭建\"><a href=\"#docker搭建\" class=\"headerlink\" title=\"docker搭建\"></a>docker搭建</h3><p>因为这次不需要多个容器（ttrss需要有数据库和本体），所以不需要输入代码，所有操作都可以在图形界面进行，首先安装rsshub容器（从左到右按照图示操作）：<br><img src=\"https://z3.ax1x.com/2021/10/17/5t4xL8.png\" alt=\"安装rsshub\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/17/5t4xL8.png\" class=\"lozad post-image\"></p>\n<p>版本选latest，到最后选择<code>advanced settings&gt;&gt;</code>，选择network一栏，把network mode调成bridge，选择use static IP，把ip address改成不同于nas的（一般改最后一位即可）。</p>\n<p><strong>注意：请根据实际网络情况配置该项。</strong></p>\n<p><em>为什么要这么做？</em></p>\n<p>实际测试无法自己访问自己，所以将容器独立出来，为它在局域网内分配一个单独ip，即可正常访问。</p>\n<p>接下来建立容器，等待一段时间后访问<code>ip:1200</code>，若出现welcome to rsshub即建立成功。</p>\n<p>到此，所有配置全部完成，应该可以正常使用了。</p>\n",
            "tags": [
                "qnap",
                "rss"
            ]
        },
        {
            "id": "https://blog.samhou.top/windowsUAC%E8%B7%B3%E8%BF%87%E6%95%99%E7%A8%8B/",
            "url": "https://blog.samhou.top/windowsUAC%E8%B7%B3%E8%BF%87%E6%95%99%E7%A8%8B/",
            "title": "windows UAC跳过教程",
            "date_published": "2021-10-04T16:00:00.000Z",
            "content_html": "<h1 id=\"什么是UAC\"><a href=\"#什么是UAC\" class=\"headerlink\" title=\"什么是UAC\"></a>什么是UAC</h1><p>安装软件时、运行部分程序时弹出的窗口就是UAC，比如下面这个以管理员权限运行的记事本<br><img src=\"https://z3.ax1x.com/2021/10/07/5p3kxf.png\" alt=\"管理员运行记事本\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/07/5p3kxf.png\" class=\"lozad post-image\"></p>\n<p>有时候，运行一些程序可能需要管理员权限，比如某些电脑清理软件。</p>\n<h1 id=\"第一种方法：直接关闭UAC\"><a href=\"#第一种方法：直接关闭UAC\" class=\"headerlink\" title=\"第一种方法：直接关闭UAC\"></a>第一种方法：直接关闭UAC</h1><ol>\n<li>打开控制面板-系统和安全-安全和维护</li>\n<li>在用户账户控制那里点击更改设置</li>\n<li>下拉到“从不通知”</li>\n</ol>\n<h1 id=\"第二种方法：使用任务计划程序\"><a href=\"#第二种方法：使用任务计划程序\" class=\"headerlink\" title=\"第二种方法：使用任务计划程序\"></a>第二种方法：使用任务计划程序</h1><ol>\n<li>右键windows图标</li>\n<li>选择计算机管理</li>\n<li>选择左侧的任务计划程序-任务计划程序库</li>\n<li>点击右侧“创建任务…”</li>\n<li>名称随便填，勾选<img src=\"https://z3.ax1x.com/2021/10/07/5p3iGt.png\" alt=\"最高权限运行\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/07/5p3iGt.png\" class=\"lozad post-image\"></li>\n<li>操作一栏中选择新建，弹出这么个窗口：<br><img src=\"https://z3.ax1x.com/2021/10/07/5pIiY4.png\" alt=\"新建操作\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/07/5pIiY4.png\" class=\"lozad post-image\"></li>\n<li>这里就选择启动程序，点浏览，选择要跳过UAC的程序，确定保存</li>\n<li>根据需要设定剩下的条件、设置、触发器</li>\n<li>如果需要开机启动，请选择<strong>登录时</strong>，不要选择<del>启动时</del>（因为要登陆再启动程序）</li>\n<li>设置完成，现在添加一个对于新建的任务的快捷方式：在电脑桌面上右键新建-快捷方式，位置一栏输入<code>SCHTASKS /RUN /TN 任务名称</code>，把任务名称改为在第5步中创建的名称</li>\n<li>现在建立了快捷方式，双击桌面上的图标即可跳过UAC运行软件~</li>\n</ol>\n",
            "tags": [
                "windows",
                "UAC"
            ]
        },
        {
            "id": "https://blog.samhou.top/%E4%BD%BF%E7%94%A8windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AE%9E%E7%8E%B0%E6%8F%92%E5%85%A5%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/",
            "url": "https://blog.samhou.top/%E4%BD%BF%E7%94%A8windows%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E5%AE%9E%E7%8E%B0%E6%8F%92%E5%85%A5%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E8%87%AA%E5%8A%A8%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/",
            "title": "使用windows计划任务实现插入移动硬盘自动运行程序",
            "date_published": "2021-09-04T16:00:00.000Z",
            "content_html": "<h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>在系统计划任务中，有一个“发生事件时”的触发器。这让插入移动硬盘自动运行程序成为了可能。所以只要找到插入硬盘时触发的系统事件，即可实现。在事件查看器中，通过筛选，我发现插入硬盘时，触发了来源为DistributedCOM的警告事件，ID为10016。</p>\n<h2 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h2><ol>\n<li>插入移动硬盘</li>\n<li>右键开始菜单图标，选择计算机管理，选择系统工具-事件查看器-windows日志-系统，找到刚刚插入硬盘发生的DistributedCOM事件，如下图<br><img src=\"https://z3.ax1x.com/2021/10/07/5p3FRP.png\" alt=\"DistributedCOM\" srcset=\"data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20300%20300'%3E%3C/svg%3E\" data-src=\"https://z3.ax1x.com/2021/10/07/5p3FRP.png\" class=\"lozad post-image\"></li>\n<li>右键这个警告事件，选择将“任务附加到此事件”，通过这个向导即可创建一个自动任务。</li>\n</ol>\n<h2 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h2><p>这个功能用途很多，比如插入后自动运行备份程序，关键看需求。</p>\n",
            "tags": [
                "windows",
                "任务计划程序"
            ]
        }
    ]
}